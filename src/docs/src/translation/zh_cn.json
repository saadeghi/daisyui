{
  "__name": "中文",
  "__flag": "🇨🇳",
  "__status": "测试版",
  "Tailwind CSS Components": "Tailwind CSS组件",
  "daisyui-tagline": "最流行, 免费以及开源的 <br />Tailwind CSS 组件库",
  "cta-1": "浏览组件",
  "cta-1-mobile": "组件",
  "cta-2": "阅读使用方法",
  "feat-1": "Tailwind CSS 的插件",
  "feat-2": "快速开发",
  "feat-3": "更纯净的 HTML",
  "feat-4": "深度自定义、可定制主题",
  "feat-5": "纯净 CSS、支持任意框架",
  "components-btn": "组件",
  "change-theme-btn": "主题",
  "components-preview-title": "组件预览",
  "all-components-btn": "查看全部组件",
  "components": "组件",
  "themes": "主题",
  "github-stars": "Github 星星",
  "npm-installs": "NPM 安装",
  "clean-html-title": "干净的 HTML",
  "clean-html-desc": "充分利用组件类",
  "clean-html-content": "你的 HTML 可以更干净。 daisyUI 给 Tailwind CSS 增加了工具类。 例如 <span class='badge badge-outline'>btn</span>， <span class='badge badge-outline'>card</span>等等... 不需要在处理成百上千的工具类",
  "clean-html-example-1-title": "增加一个按钮",
  "clean-html-example-1-desc": "使用原生工具类 vs 使用 daisyUI 组件类",
  "vs": "vs",
  "clean-html-example-2-title": "创建一个切换按钮",
  "clean-html-example-2-desc": "使用原生工具类 vs 使用 daisyUI 组件类",
  "clean-html-example-3-title": "创建一个菜单组件",
  "clean-html-example-3-desc": "使用原生工具类 vs 使用 daisyUI 组件类",
  "customizable-title": "深度可定制化",
  "customizable-desc": "使用 Tailwind CSS 工具类",
  "customizable-content": "daisyUI 是基于 Tailwind 的工具类开发的，全部组件只有很少的特异性，你可以任意根据你的想法进行深度自定义开发。<br /> 你甚至可以通过 <a href='/docs/customize' class='link'>use @apply</a> 对组件增加你自己的样式或者你可以通过使用 CSS 变量 <a href='/docs/themes' class='link'>改变颜色和其他设计决定</a> 。",
  "theming-title": "超强主题",
  "theming-desc": "实现你自己的设计哲学",
  "theming-content": "daisyUI 给 Tailwind 增加了一系列更富有语义的颜色名字。所以我们可以替换原生没有语义的 <span class='badge badge-ghost'>bg-blue-500</span>， 我们可以使用更有语义的名字如 <span class='badge badge-ghost'>bg-primary</span> 或者 <span class='badge badge-ghost'>bg-success</span>。 <br /> 所有颜色都是 CSS 变量，你可以轻松通过几个 CSS 变量增加黑暗模式。",
  "theming-btn": "阅读更多关于主题的内容",
  "try-online-title": "在线试用",
  "try-online-desc": "通过 CDN 来使用 daisyUI",
  "try-online-playground-links-title": "或者在线试用",
  "install-title": "安装 daisyUI",
  "install-desc": "没有任何依赖, 纯净 CSS。 可以作为 Tailwind CSS 的插件使用或者一个独立 CSS 库",
  "install-step-1": "作为 Node package 安装 daisyUI",
  "install-step-2": "作为 Tailwind CSS 的插件增加 daisyUI",
  "install-btn": "安装指导",
  "footer-tagline": "Free Component library <br /> For utility first CSS frameworks",
  "guides": "指南",
  "how-to-install": "如何安装",
  "how-to-use-components": "如何使用组件",
  "how-to-customize": "如何自定义",
  "how-to-use-themes": "如何使用主题",
  "color-system": "颜色系统",
  "config": "配置",
  "links": "链接",
  "changelog": "更新日志",
  "license": "协议",
  "contributing": "贡献",
  "available-on": "获取渠道",
  "try-online": "在线试用",
  "created-by": "Created by",
  "Install": "安装",
  "Use": "使用",
  "Customize components": "自定义组件",
  "Config": "全局配置",
  "Colors": "颜色",
  "Themes": "主题",
  "Theme Generator": "主题生成器",
  "Layout & Typography": "布局 & 排版",
  "Actions": "动作",
  "Button": "Button 按钮",
  "Dropdown": "Dropdown 下拉菜单",
  "Modal": "Modal 对话框",
  "Swap": "Swap 调换",
  "Data display": "数据展示",
  "Alert": "Alert 警告提示",
  "Avatar": "Avatar 头像",
  "Badge": "Badge 徽章",
  "Card": "Card 卡片",
  "Carousel": "Carousel 轮播",
  "Collapse": "Collapse 折叠面板",
  "Countdown": "Countdown 计数",
  "Kbd": "Kbd 键盘",
  "Progress": "Progress 进度条",
  "Radial progress": "Radial progress 圆形进度条",
  "Stat": "Stat 统计展示",
  "Table": "Table 表格",
  "Tooltip": "Tooltip 文字提示",
  "Data input": "数据输入",
  "Checkbox": "Checkbox 复选框",
  "Text input": "Text input 文字输入框",
  "Radio": "Radio 单选框",
  "Range": "Range 范围滑块",
  "Rating": "Rating 评分",
  "Select": "Select 选择器",
  "Textarea": "Textarea 多行文本框",
  "Toggle": "Toggle 开关",
  "Layout": "布局",
  "Artboard": "Artboard 画板",
  "Button group": "Button group 按钮组",
  "Divider": "Divider 分隔线",
  "Drawer": "Drawer 抽屉",
  "Footer": "Footer 页脚",
  "Hero": "Hero",
  "Indicator": "Indicator 标志",
  "Input group": "Input group 输入框组",
  "Mask": "Mask 遮罩",
  "Stack": "Stack 堆叠",
  "Navigation": "导航栏",
  "Breadcrumbs": "Breadcrumbs 面包屑导航",
  "Link": "Link 链接",
  "Menu": "Menu 菜单",
  "Navbar": "Navbar 导航栏",
  "Pagination": "Pagination 分页",
  "Steps": "Steps 步骤条",
  "Tab": "Tab 选项卡",
  "Mockup": "模型",
  "Code": "Code 代码",
  "Phone": "Phone 手机",
  "Window": "Window 视窗",
  "excluded": "除外",
  "CodePen example page": "CodePen 样例",
  "Tailwind Play example page": "Tailwind Play 样例",
  "new": "新增",
  "updated": "更新",
  "Tailwind Plugin": "Tailwind 插件",
  "Use CDN": "使用 CDN",
  "Install daisyUI as a Tailwind CSS plugin": "作为 Tailwind CSS 的插件来安装 daisyUI",
  "You need <a href='https://nodejs.org/en/download/'>Node.js</a> and <a href='https://tailwindcss.com/docs/installation'>Tailwind CSS</a> installed.": "你需要安装 <a href='https://nodejs.org/en/download/'>Node.js</a> 和 <a href='https://tailwindcss.com/docs/installation'>Taiwind CSS</a>。",
  "How to install daisyUI as a Tailwind CSS plugin?": "如何作为 Tailwind CSS 的插件来安装 daisyUI？",
  "Install daisyUI": "安装 daisyUI",
  "Then add daisyUI to your <code>tailwind.config.js</code> files": "然后，在你的<code>tailwind.config.js</code>文件里追加 daisyUI 的设置",
  "daisyUI example repositories": "daisyUI 样例项目",
  "See example setup of daisyUI and Tailwind CSS on different frameworks and build tools.": "在不同框架和构建工具下的 daisyUI 与 TailwindCSS 的样例项目。",
  "Prev": "上一节",
  "Next": "下一节",
  "Do you have a question?": "你有什么问题么？",
  "Do you see a bug?": "你发现了 bug 么？",
  "Do you like daisyUI?": "你喜欢 daisyUI？",
  "Edit this page on GitHub": "在 GitHub 上编辑本页",
  "ask the community": "向社区提问题",
  "open an issue on GitHub": "在 GitHub 提 issueく",
  "tweet about it!": "在 twitter、知乎、微博宣传 daisyui 吧！",
  "Warning": "警告",
  "CDN files are not recommended for production <br/>because you can't purge unused styles and file size will be large.": "不建议在生产上使用 CDN 的版本<br/>因为你不能对未使用的样式进行裁剪，最终的打包大小会很大。",
  "You don't need to install anything.": "你不需要安装任何依赖。",
  "Just add one of these to the <code>head</code> tag of your HTML": "只需要在你的 HTML 的 <code>head</code>添加下面的代码",
  "Or": "或者",
  "Add component classes to your HTML": "对你的 HTML 增加组件类",
  "How to use daisyUI classes to style your page?": "如何使用 daisyUI 的组件类来装饰你的页面呢？",
  "Once you <a href='/docs/install'>installed daisyUI</a>, you can use component classes like <code>btn</code>, <code>card</code>, etc.": "一旦你 <a href='/docs/install'>安装完成 daisyUI</a>， 你可以通过 <code>btn</code>, <code>card</code> 等等来使用组件类。",
  "So instead of making a button using only utility classes": "不用再像这样通过 Tailwind 原生工具类来制作一个按钮",
  "You can just use a component class like this": "你可以直接使用组件类来这样做",
  "Then you can modify the component with daisyUI additional utility classes": "你可以通过增加 daisyUI 组件类来修改这个组件",
  "Or you can modify the component with Tailwind CSS utility classes": "你也可以通过 TailwindCSS 的工具类来改变这个组件的样式",
  "Customize daisyUI components": "自定义 daisyUI 组件",
  "How to customize daisyUI": "如何自定义 daisyUI",
  "daisyUI components comes with many variants necessary for design systems and you won't usually need to customize anything.": "daisyUI 自有的设计系统有很多变量，通常你不需要定义任何变量。",
  "But you can still customize components in many ways.": "但是，你仍然可以通过很多方式来实现你的自定义目标",
  "Let's say, you want to customize this button:": "例如，你想自定义下面这个按钮：",
  "You can use daisyUI utility classes:": "你可以使用 daisyUI 的工具类：",
  "You can use Tailwind's utility classes:": "你可以使用 Tailwind 的工具类：",
  "You can customize components on your CSS file, using Tailwind's @apply directive.": "你可以通过 Tailwind 的 @apply 指令来自定义你的组件。",
  "You can also:": "你也可以：",
  "add your own theme": "增加自定义主题",
  "opt-out of daisyUI's design decisions <a href='/docs/config'>only use a unstyled (skeleton) version of daisyUI</a>.": "通过 <a href='/docs/config'>只使用无样式的（骨架）版本的 daisyUI</a> 来完全去掉 daisyUI 的设计元素。",
  "How to change the default configuration of daisyUI?": "如何更改 daisyUI 的默认配置？",
  "daisyUI can be configured from your <code>tailwind.config.js</code> file.": "可以通过 <code>tailwind.config.js</code> 来配置 daisyUI 的配置。",
  "Default config": "默认配置",
  "Config values explained": "配置值说明",
  "If it's true, components will have colors and style so you won't need to design anything.": "如果设置为 true，组件会有默认的颜色和样式，所以你不需要去进行设计。",
  "If it's false, components will have no color and no visual style so you can design your own style on a basic skeleton.": "如果设为 false，组件是没有颜色和视觉样式的，所以你可以在一个基本的骨架上设计你自己的颜色和视觉样式。",
  "If it's true, all themes will be included.": "如果设为 true，则会包含所有的主题。",
  "If it's false, only light (default) theme will be available.": "如果设为 false，只有 light（默认主题）会被加载。",
  "If it's an array, only themes in the array will be included and the first theme will be the default theme.": "如果是一个数组，则只有数组包含的主题会被加载，数组的第一个主题会成为默认主题。",
  "Read more about <a href='/docs/themes'>themes</a>": "在<a href='/docs/themes'>阅读更多关于主题的内容",
  "If it's true, <a href='https://github.com/saadeghi/daisyui/blob/master/src/base'>a few base styles</a> will be added": "如果设为 true，<a href='https://github.com/saadeghi/daisyui/blob/master/src/base'>一些基础样式</a> 会被添加。",
  "If it's true, <a href='https://github.com/saadeghi/daisyui/tree/master/src/utilities'>responsive and utility classes</a> will be added": "如果设为 true，<a href='https://github.com/saadeghi/daisyui/tree/master/src/utilities'>响应式和工具类</a>会被添加",
  "If it's true, daisyUI shows logs in terminal while CSS is building": "如果设为 true，daisyUI 会在 CSS 构建时在命令行窗口输出日志。",
  "If it's true, your theme will be right-to-left. You need to add <code>dir='rtl'</code> to your body tag.": "如果设为 true，你的主题会是从右向左展示。你需要在你的 body 标签添加<code>dir='rtl'</code>。",
  "If you're using daisyUI with RTL option, I suggest using <a href='https://github.com/cvrajeesh/tailwindcss-flip'>tailwindcss-flip</a> plugin because to flip all your Tailwind utilities automatically.": "如果你在 daisyUI 中使用 RTL 选项，我建议使用<a href='https://github.com/cvrajeesh/tailwindcss-flip'>tailwindcss-flip</a> 插件，因为这个插件可以自动帮助你翻转所有 Tailwind 工具类。",
  "Allows us to pick another theme for system's auto dark mode. By default, <code>dark</code> theme (or a custom theme named <code>dark</code>) will be the default theme if no theme is specified and the user is using dark mode on their system. With this config, you can set another theme to be the default dark mode theme.": "选择另一个主题作为系统自动黑暗模式的主题。<code>dark</code> 是默认黑暗模式主题（或者自定义的主题名字是 <code>dark</code>）。通过这个配置，你可以给默认黑暗模式主题设定另一个主题。",
  "Adds a prefix to class name for all daisyUI classes (including component classes, modifier classes and responsive classes).": "给 daisyUI 的类名称增加一个前缀（包含所有的组件类，修饰类和响应类）。",
  "For example: <code>btn</code> will become <code>prefix-btn</code>.": "例如：<code>btn</code> 会变为 <code>prefix-btn</code>。",
  "If you're using a second CSS library that has similar class names, you can use this config to avoid conflicts.": "如果你还使用其他的 CSS 库，并且有冲突，可以用这个方法来避免冲突问题。",
  "Utility classes like color names (e.g. <code>bg-primary</code>) or border-radius (e.g. <code>rounded-box</code>) will not be affected by this config because they're being added as extensions to Tailwind CSS classes.": "颜色名字（例如： <code>bg-primary</code>）或者 border-radius（例如：<code>rounded-box</code>）不会受到这个参数的影响，因为这些参数是作为 Tailwind CSS 类的扩展来设计的。",
  "If you use daisyUI <code>prefix</code> option (like <code>daisy-</code>) and Tailwind CSS <code>prefix</code> option (like <code>tw-</code>) together, classnames will be prefixed like this: <code>tw-daisy-btn</code>.": "daisyUI 的<code>prefix</code> 的功能（例如<code>daisy-</code>）与 TailwindCSS 的<code>prefix</code> 的功能（例如 <code>tw-</code>）一起使用时，最后的类名是 <code>tw-daisy-btn</code>。",
  "How to use daisyUI colors?": "如何使用 daisyUI 的颜色体系？",
  "Introduction": "介绍",
  "daisyUI is fully themeable and colorable,": "daisyUI 可以完全进行主题化和颜色化，",
  "So instead of using constant color utility classes like:": "你可以不再使用普通颜色工具类的方式：",
  "It's suggested to use semantic color utility classes like:": "建议使用更有语义的颜色工具类：",
  "Each color name contains CSS variables and each daisyUI theme applies color values to the utility classes when it is applied.": "每一个颜色名字都有 CSS 变量，每一个 daisyUI 的主题都可以应用到这些颜色类上。",
  "Benefits": "收益",
  "Semantic color names make more sense because when we design interfaces, we don't just use any random color. We define a specific color palette with names like <code>primary</code>, <code>secondary</code>, etc. and we only use those specific colors in our interfaces.": "当我们设计接口时，不再使用随机的颜色，而使用更有含义的名字。我们通过例如 <code>primary</code>、<code>Secondary</code> 来定义我们的调色盘颜色。我们只在我们的接口里使用这些特定的颜色。",
  "Also, using semantic color names makes theming easier. You wouldn't have to define dark-mode colors for every single element and you wouldn't be limited to only light/dark themes. you can have multiple themes available and each theme is just a few lines of CSS variables.": "通过使用这些更有语义的颜色，主题的实现变得更容易。你不需要为每一个元素定义黑暗模式的颜色，并且你不再受限于只有一套白天/黑暗模式的主题。你可以有多种主题，每一个主题的本质就是一些 CSS 变量。",
  "List of all daisyUI color names": "daisyUI 颜色名",
  "You can use these color names in your theme or in utility classes.": "你可以在你的主题里或者工具类里使用这些颜色名字。",
  "Color name + description": "颜色名+描述",
  "Required or optional for themes": "每一种主题是否必须实现",
  "Example use": "使用样例",
  "How to use": "如何使用",
  "Some daisyUI components come with modifier class names and that modifier class name will apply a color.": "有一些组件类会有可以进行选择颜色的修饰类。",
  "For example": "例如：",
  "You can also use color names in utility classes just like Tailwind's original color names.": "就像在 Tailwind 的原生颜色名字一样，你也可以在工具类里使用这些颜色名字。",
  "These are utility classes that can be used with a color name:": "下面是可以使用颜色名字的工具类：",
  "So you can use <code>bg-primary</code>, <code>border-secondary</code>, etc.": "所以你可以使用 <code>bg-primary</code>、<code>border-secondary</code> 等等。",
  "Contribute to translation": "贡献翻译",
  "Alert informs users about important events.": "警告提示用来提示用户重要的事件消息。",
  "Artboard provides fixed size container to display a demo content on mobile size.": "Artboard 提供了固定尺寸的容器，用于在手机尺寸里显示演示内容。",
  "Avatars are used to show a thumbnail representation of an individual or business in the interface.": "头像用于在界面中显示个人或企业的缩略图。",
  "Badges are used to inform user of the status of specific data.": "徽章是用来通知用户特定数据的状态。",
  "Breadcrumbs helps users to navigate through the website.": "面包屑导航可以帮助用户导航网站。",
  "Button group shows buttons next to each other.": "按钮组展示了一些相邻的按钮。",
  "Buttons allows user to take actions or make choices.": "按钮可以让用户执行命令或者作出选择。",
  "Cards are used to group and display content in a way that is easily readable.": "卡片用于显示易于阅读的显示内容。",
  "Carousel show images or content in a scrollable area.": "轮播可以在可滚动区域里显示图像或内容。",
  "Checkboxes are used to select or deselect a value.": "复选框用于选择或取消选择值。",
  "Collapse is used for showing and hiding content.": "折叠面板用于显示和隐藏内容。",
  "Countdown gives you a transition effect of changing numbers": "计数给了你改变数字的过渡效果。",
  "Divider will be used to separate content vertically or horizontally.": "分隔线用于垂直或水平分隔内容。",
  "Drawer is a grid layout that can show/hide a sidebar on the left or right side of the page.": "抽屉是一种可以显示/隐藏页面左侧或右侧的侧边栏的网格布局。",
  "Dropdown can open a menu or any other element when the button is clicked.": "下拉菜单可以在点击按钮时打开菜单或其他元素。",
  "Footer can contain logo, copyright notice, and links to other pages.": "页脚可以包括标志、版权声明和链接到其他网页。",
  "Hero is a component for displaying a large box or image with a title and description.": "Hero 是显示带有标题和描述的大方框或图像的组件。",
  "Indicators are used to place an element on the corner of another element.": "标志用来将元素放置在另一个元素的角落。",
  "Input group puts an input next to a text or a button.": "输入框组将输入放在文本或按钮旁边。",
  "Text Input is a simple input field.": "文字输入框是简单的输入框。",
  "Kbd is used to display keyboard shortcuts.": "键盘用于显示键盘快捷键的效果。",
  "Link adds the missing underline style to links.": "链接将缺失的下划线样式添加到链接中。",
  "Mask crops the content of the element to common shapes.": "Mask 将元素的内容修剪成常见的形状。",
  "Menu is used to display a list of links vertically or horizontally.": "菜单用于垂直或水平显示链接列表。",
  "Code mockup is used to show a block of code in a box that looks like a code editor.": "代码模型用于在看起来像代码编辑器的方框中显示代码块。",
  "Phone mockup shows a mockup of an iPhone.": "手机模型显示了一个像 iPhone 的模型。",
  "Window mockup shows a box that looks like an operating system window.": "视窗模型展示了一个看起来像操作系统窗口的框。",
  "Modal is used to show a dialog or a box when you click a button.": "对话框用于点击按钮时显示对话框或一个盒子模型。",
  "Navbar is used to show a navigation bar on the top of the page.": "导航栏用于在页面顶部显示导航栏。",
  "Pagination is a group of buttons that allow the user to navigate between a set of related content.": "分页是一组按钮，允许用户在一系列相关内容之间移动。",
  "Progress bar can be used to show the progress of a task or to show the passing of time.": "进度条可以用来显示任务的进展情况，也可以用来显示时间的流逝。",
  "Radial progress can be used to show the progress of a task or to show the passing of time.": "圆形进度条可以用来显示任务的进度，也可以用来显示时间的流逝。",
  "Radio buttons allow the user to select one option from a set.": "使用单选框，用户可以从多个选项中选择一个选项。",
  "Range slider is used to select a value by sliding a handle.": "范围滑块用于滑动选择值。",
  "Rating is a set of radio buttons that allow the user to rate something.": "评价是一组单选按钮，用户可以对某件事进行评价。",
  "Select is used to pick a value from a list of options.": "选择器用于从选项列表中选择值。",
  "Stack visually puts elements on top of each other.": "堆叠使元素在视觉上有重叠的效果。",
  "Stat is used to show numbers and data in a box.": "统计展示用于在方框中显示数值和数据。",
  "Steps can be used to show a list of steps in a process.": "你可以使用步骤条来显示流程步骤的列表。",
  "Swap allows you to toggle the visibility of two elements using a checkbox or a class name.": "使用 Swap，你可以使用复选框或类名来切换两个元素的显示。",
  "Tabs can be used to show a list of links in a tabbed format.": "你可以使用选项卡，以选项卡的形式显示链接列表。",
  "Table can be used to show a list of data in a table format.": "你可以使用表格来显示数据列表。",
  "Textarea allows users to enter text in multiple lines.": "多行文本框允许用户在多行中输入文本。",
  "Toggle is a checkbox that is styled to look like a switch button.": "开关是为了看起来像开关按钮的样式的复选框。",
  "Tooltip can be used to show a message when hovering over an element.": "你可以使用文字提示，当用户使用点击或者鼠标对准某个元素时显示消息。",
  "Code mockup": "代码模型",
  "Phone mockup": "手机模型",
  "Window mockup": "视窗模型",
  "Text Input": "文字输入框",
  "Range slider": "范围滑块",
  "Tabs": "Tabs",
  "All daisyUI components": "所有的 daisyUI 组件",
  "Class name": "类名",
  "Type": "类型",
  "Search": "搜索",
  "daisyUI comes with a number of themes, which you can use with no extra effort.": "daisyUI 原生已经有很多精美制作的主题，你可以直接获取它们。",
  "Each theme defines a set of colors which will be used on all daisyUI elements.": "每一个主题都定义了一些全局的变量，这些变量会影响所有的 daisyUI 组件。",
  "To use a theme, add <code>data-theme</code> attribute to your <code><html></code> tag:": "你可以通过在你的 <code>html</code> 标签上添加 <code>data-theme</code> 来使用主题：",
  "I suggest using <a href='https://github.com/saadeghi/theme-change'><code>theme-change</code></a>, so you can switch themes and save selected theme in local storage.": "我推荐使用 <a href='https://github.com/saadeghi/theme-change'><code>theme-change</code></a>，这样你可以方便的切换主题，并且主题的选择会存储在本地存储里。",
  "List of themes": "主题列表",
  "Try them:": "尝试它们:",
  "The default theme is <code>light</code> (or <code>dark</code> for dark mode)": "默认主题是 <code>light</code>（或者如果是黑暗模式则为 <code>dark</code> ）",
  "but you can <a href='https://daisyui.com/docs/config'>change the default theme from tailwind.config.js</a>": "你可以通过配置 <a href='https://daisyui.com/docs/config'>tailwind.config.js</a> 来改变默认的主题选择",
  "How to remove unused themes?": "如何去掉不使用的主题？",
  "You can only include the themes you want in your project.": "在你的项目中只引入你需要的主题。",
  "This will reduce the size of your CSS file.": "这会减小你最终的 CSS 文件。",
  "In below example": "在下面的例子里",
  "<code>cupcake</code> will be the default theme for light mode": "<code>cupcake</code> 会成为 light 模式的默认主题",
  "<code>dark</code> will be the default theme for dark mode": "<code>dark</code> 会成为 dark 模式的默认主题",
  "<code>cmyk</code> can be applied on any HTML tag with <code>data-theme='cmyk'</code>": "当 HTML 的 tag 存在 <code>data-theme='cmyk'</code> 时，主题会切换为 <code>cmyk</code> ",
  "How to disable all themes?": "如何禁止所有的主题？",
  "If you only want the default <code>light</code> theme, set <code>themes</code> config to false.": "如果你只想要默认的 <code>light</code> 主题， 设置 <code>themes</code> 配置为 false。",
  "If you don't want to include any themes and disable all colors, set <code>themes</code> config to an empty array.": "如果你不想引入任何主题，并且禁止所有有语义的颜色名字， 设置 <code>themes</code> 配置为一个空数组。",
  "How to use a theme only for a section of page?": "如何在页面的一部分使用主题？",
  "Add <code>data-theme='THEME_NAME'</code> to any element and everything inside will have your theme.": "在你想使用主题的标签添加 <code>data-theme='THEME_NAME'</code> 即可以让这个标签下面使用对应的主题。",
  "You can nest themes and there is no limit!": "你可以嵌套使用主题，可能是无尽的，尝试吧！",
  "You can force a section of your HTML to only use a specific theme.": "你可以强制让你的 HTML 去使用一个特定的主题。",
  "How to add a new custom theme?": "如何增加自定义主题？",
  "You can add a new theme from <code>tailwind.config.js</code> file.": "你可以在你的 <code>tailwind.config.js</code> 文件里添加一个新主题。",
  "In below example, I added a new theme called <code>mytheme</code> and I'm also including <code>dark</code> and <code>cupcake</code> themes.": "在下面这个例子里，我添加了一个新主题叫 <code>mytheme</code> 并且我也引入了 <code>dark</code> 和 <code>cupcake</code> 主题。",
  "The first theme (<code>mytheme</code>) will be the default theme.": "第一个主题 （<code>mytheme</code>） 会成为默认主题。",
  "<code>dark</code> theme will be the default theme for dark mode.": "<code>dark</code> 主题会成为默认的黑暗模式主题。",
  "In below example, I have the required colors. All other colors will be generated automatically (Like the color of button when you focus on it or the color of text on a <code>primary</code> button).": "在下面这个例子里，我只设定了必要的颜色。 其他颜色会自动由 daisyUI 生成 （当一个按钮成为焦点时的颜色，或者一个<code>primary</code> 按钮的文字颜色）。",
  "CSS variables in daisyUI themes": "daisyUI 主题的 CSS 变量",
  "There are a few optional CSS variables that you can use in daisyUI themes to customize design decisions for each theme:": "如果你想自定义 daisyUI 主题，这里有一些你可以调整的 CSS 变量：",
  "Custom CSS for a daisyUI theme": "给 daisyUI 主题增加自定义 CSS",
  "You can apply custom style to a daisyUI themes using CSS:": "你可以通过 CSS 给 daisyUI 主题增加样式：",
  "How to customize an existing theme?": "如何对已有主题进行自定义设置？",
  "In your tailwind.config.js, you can require an existing daisyUI theme and override some colors.": "在你的 tailwind.config.js，你可以获取一个特定的主题，并且覆盖这个主题的颜色变量。",
  "In below example, I require and spread <code>light</code> theme and change its <code>primary</code> and <code>primary-focus</code> colors:": "在下面这个例子，我调整了 <code>light</code> 主题，并且改变了这个主题的 <code>primary</code> 和 <code>primary-focus</code> 的颜色：",
  "daisyUI themes": "daisyUI 主题",
  "How to use daisyUI themes?": "如何使用 daisyUI 的主题？",
  "daisyUI Theme Generator": "daisyUI 主题生成器",
  "You can add your custom themes to <span class='badge badge-outline'>tailwind.config.js</span> file in <span class='badge badge-outline'>daisyui > themes</span> array. In this page, you can pick required color values and see how the components will look like with them.": "你可以在 <span class='badge badge-outline'>tailwind.config.js</span> 文件里设置 <span class='badge badge-outline'>daisyui > themes</span> 数组来增加你的自定义主题。在这个页面，你可以查看你定义的颜色影响的组件外观的变化。",
  "You can also define optional colors to have more control on the color values (for example: the color of button when it's focused of the color of the text on a button)": "你可以通过设置可选颜色变量来增加你的控制力（例如：当一个按钮成为焦点时的文字颜色）",
  "Check out <a class='link font-bold' href='/docs/colors/'>colors page</a> to see all the color names you can use.": "查看 <a class='link font-bold' href='/docs/colors/'>颜色页面</a> 来了解你可以更改的颜色名字变量。",
  "Check out <a class='link font-bold' href='/docs/themes/'>themes page</a> to see all the CSS variables you can use to customize the design decision (example: border-radius, animations, etc.)": "查看 <a class='link font-bold' href='/docs/themes/'>主题页面</a> 来了解你可以调整的 CSS 变量（例如： border-radius, animations 等等。）",
  "Randomize": "随机一个主题",
  "Reset": "重置",
  "Preview": "预览",
  "Layout and Typography": "布局和排版",
  "How to use layouts and typography in daisyUI": "如何在 daisyUI 中使用布局和排版",
  "Layout, sizing, grids, spacing, etc. all will be handled by Tailwind CSS's utility classes": "布局， 大小， grids， 间隔等等。所有这些可以用 Tailwind CSS 的工具类来调整",
  "Read more": "阅读更多",
  "Typography": "排版",
  "You should use official <a href='https://github.com/tailwindlabs/tailwindcss-typography'>TailwindCSS Typography plugin</a>.": "你应该使用官方的 <a href='https://github.com/tailwindlabs/tailwindcss-typography'>TailwindCSS Typography plugin</a>.",
  "It handles everything and it's fully customizable": "这个插件可以操作所有的情况，而且本身就可以调整",
  "daisyUI adds some style to @tailwindcss/typography so it will use the same theme as other elements.": "daisyUI 增加一些样式给  @tailwindcss/typography 所以这些组件可以和其他元素一样获取同样的主题",
  "Make sure you require <span class='badge badge-outline'>daisyui</span> AFTER <span class='badge badge-outline'>@tailwindcss/typography</span> in tailwind.config.js": "确保你在  tailwind.config.js 引用 <span class='badge badge-outline'>daisyui</span> 在<span class='badge badge-outline'>@tailwindcss/typography</span> 的后面",
  "Here you can see how elements will look using <code>@tailwindcss/typography</code>.": "这里你可以看到使用 <code>@tailwindcss/typography</code> 如何影响你的元素：",
  "To use a custom prefix, <a class='link' href='/docs/config/'>add your prefix string to config</a>": "为了使用一个自定义前缀， <a class='link' href='/docs/config/'>在配置文件中增加前缀设置</a>",
  "Component": "组件类",
  "Modifier": "装饰类",
  "Responsive": "响应类",
  "Changes the style of a component": "改变一个组件的样式",
  "Supports responsive prefixes (sm:, lg:, …)": "支持响应式前缀 (sm:, lg:, …)",
  "Make your theme": "做一个主题",
  "More examples": "更多示例",
  "": ""
}
