import"../chunks/DsnmJJEf.js";import"../chunks/BJSFKXgS.js";import{f as M,s as a,a as L,b as S,d as s,r as n,n as j}from"../chunks/rBt4--9u.js";import{h as o}from"../chunks/DxUf3ls0.js";import{l as T,s as $}from"../chunks/BybNoomo.js";import{L as B}from"../chunks/DIsVsr2l.js";import"../chunks/B1Uw_YEL.js";const k={title:"Mary UI: Laravel blade components made with daisyUI",desc:"Mary UI is a collection of Laravel blade components made for Livewire 3 and styled around daisyUI and Tailwind CSS",published:!0,date:"2023-9-13",author:"Pouya Saadeghi",thumbnail:"https://img.daisyui.com/images/blog/mary-ui.webp",tags:["Frameworks"]},{title:G,desc:J,published:K,date:O,author:Q,thumbnail:X,tags:aa}=k;var E=M(`<h2 id="what-is-mary-ui"><a href="#what-is-mary-ui" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>What is Mary UI?</h2> <p><a href="https://mary-ui.com/" rel="nofollow" target="_blank">Mary UI</a> is a collection of Laravel blade components made for Livewire 3.
These components are built on top of <a href="https://daisyui.com/" rel="nofollow" target="_blank">daisyUI</a> and <a href="https://tailwindcss.com/" rel="nofollow" target="_blank">Tailwind CSS</a>.
If you're a Laravel developer and you're using Livewire, you'll love Mary UI because it makes it faster and easier to build web pages.</p> <p>Mary UI does not ship any custom CSS and relies on daisyUI and Tailwind for out-of-box styling. You can customize most of components styles, by inline overriding daisyUI and Tailwind CSS classes.</p> <h2 id="how-does-it-look-like"><a href="#how-does-it-look-like" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>How does it look like?</h2> <p>Mary UI allows you to use daisyUI components in your Laravel blade files using Livewire syntax.</p> <p>To make a form like this: <img src="https://img.daisyui.com/images/blog/mary-ui-form.webp" alt="Mary UI form"/> All you need would be these few lines:</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <h2 id="how-to-install-mary-ui-on-a-new-laravel-project"><a href="#how-to-install-mary-ui-on-a-new-laravel-project" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>How to install Mary UI on a new Laravel project?</h2> <p>You can install Mary UI using composer:</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>If it's a new Laravel project, you can complete the setup by running the following command:</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>And start the dev server</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>Read more about <a href="https://mary-ui.com/docs/installation" rel="nofollow" target="_blank">Mary UI installation</a>.</p> <h2 id="how-to-install-mary-ui-on-existing-laravel-project"><a href="#how-to-install-mary-ui-on-existing-laravel-project" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>How to install Mary UI on existing Laravel project?</h2> <p>Install Mary UI using composer:</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>If it's an existing Laravel project, Install daisyUI and Tailwind CSS and initialize Tailwind CSS config file:</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>Change your tailwind.config.js file like this:</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>Add Tailwind directives to <code>resources/css/app.css</code></p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>Setup Livewire default app template.</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>Then add <code>@vite</code> on default app template <code>views/components/layouts/app.blade.php</code></p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>Finally, start dev server.</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>That's it! You can now use Mary UI components in your blade files.</p> <p>Read more about <a href="https://mary-ui.com" rel="nofollow" target="_blank">Mary UI</a>.</p>`,1);function sa(m,b){const g=T(b,["children","$$slots","$$events","$$legacy"]);B(m,$(()=>g,()=>k,{children:(w,Z)=>{var y=E(),t=a(L(y),12),f=s(t);o(f,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;</span><span style="color:#DE5971">x-form </span><span style="color:var(--shiki-attr-name)">wire:submit</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">save</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;</span><span style="color:#DE5971">x-input </span><span style="color:var(--shiki-attr-name)">label</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">Name</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> wire:model</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">name</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)"> /></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;</span><span style="color:#DE5971">x-input</span></span>
<span class="line"><span style="color:var(--shiki-attr-name)">    label</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">Amount</span><span style="color:var(--shiki-punctuation)">"</span></span>
<span class="line"><span style="color:var(--shiki-attr-name)">    wire:model</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">amount</span><span style="color:var(--shiki-punctuation)">"</span></span>
<span class="line"><span style="color:var(--shiki-attr-name)">    prefix</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">USD</span><span style="color:var(--shiki-punctuation)">"</span></span>
<span class="line"><span style="color:var(--shiki-attr-name)">    money</span></span>
<span class="line"><span style="color:var(--shiki-attr-name)">    hint</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">It submits an unmasked value</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)"> /></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;</span><span style="color:#FF5370">x-slot:actions</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;</span><span style="color:#DE5971">x-button </span><span style="color:var(--shiki-attr-name)">label</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">Cancel</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)"> /></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;</span><span style="color:#DE5971">x-button </span><span style="color:var(--shiki-attr-name)">label</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">Click me!</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">btn-primary</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> type</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">submit</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> spinner</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">save</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)"> /></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;/</span><span style="color:#FF5370">x-slot:actions</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;/</span><span style="color:#DE5971">x-form</span><span style="color:var(--shiki-punctuation)">></span></span></code></pre>`),n(t);var i=a(t,6),x=s(i);o(x,()=>'<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#C0CAF5">composer</span><span style="color:var(--shiki-attr-value)"> require</span><span style="color:var(--shiki-attr-value)"> robsontenorio/mary</span></span></code></pre>'),n(i);var e=a(i,4),C=s(e);o(C,()=>'<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#C0CAF5">php</span><span style="color:var(--shiki-attr-value)"> artisan</span><span style="color:var(--shiki-attr-value)"> mary:install</span></span></code></pre>'),n(e);var l=a(e,4),_=s(l);o(_,()=>'<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#C0CAF5">yarn</span><span style="color:var(--shiki-attr-value)"> dev</span></span></code></pre>'),n(l);var r=a(l,8),F=s(r);o(F,()=>'<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#C0CAF5">composer</span><span style="color:var(--shiki-attr-value)"> require</span><span style="color:var(--shiki-attr-value)"> robsontenorio/mary</span></span></code></pre>'),n(r);var p=a(r,4),V=s(p);o(V,()=>'<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#C0CAF5">yarn</span><span style="color:var(--shiki-attr-value)"> add</span><span style="color:#E0AF68"> -D</span><span style="color:var(--shiki-attr-value)"> tailwindcss</span><span style="color:var(--shiki-attr-value)"> daisyui@latest</span><span style="color:var(--shiki-attr-value)"> postcss</span><span style="color:var(--shiki-attr-value)"> autoprefixer</span><span style="color:var(--shiki-punctuation)"> &#x26;&#x26; </span><span style="color:#C0CAF5">npx</span><span style="color:var(--shiki-attr-value)"> tailwindcss</span><span style="color:var(--shiki-attr-value)"> init</span><span style="color:#E0AF68"> -p</span></span></code></pre>'),n(p);var c=a(p,4),H=s(c);o(H,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#7DCFFF">export</span><span style="color:#7DCFFF"> default</span><span style="color:#9ABDF5"> &#123;</span></span>
<span class="line"><span style="color:#73DACA">  content</span><span style="color:var(--shiki-punctuation)">: </span><span style="color:#9ABDF5">[</span></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">    // You will probably also need those lines</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    "</span><span style="color:var(--shiki-attr-value)">./resources/**/**/*.&#123;js,blade.php&#125;</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    "</span><span style="color:var(--shiki-attr-value)">./app/View/Components/**/**/*.php</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    "</span><span style="color:var(--shiki-attr-value)">./app/Livewire/**/**/*.php</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">    // Add mary</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    "</span><span style="color:var(--shiki-attr-value)">./vendor/robsontenorio/mary/src/View/Components/**/*.php</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:#9ABDF5">  ]</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">  // Add daisyUI</span></span>
<span class="line"><span style="color:#73DACA">  plugins</span><span style="color:var(--shiki-punctuation)">: </span><span style="color:#9ABDF5">[</span><span style="color:#7AA2F7">require</span><span style="color:#9ABDF5">(</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">daisyui</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:#9ABDF5">)]</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:#9ABDF5">&#125;</span></span></code></pre>`),n(c);var v=a(c,4),I=s(v);o(I,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-attr-name)">@tailwind</span><span style="color:var(--shiki-punctuation)"> base;</span></span>
<span class="line"><span style="color:var(--shiki-attr-name)">@tailwind</span><span style="color:var(--shiki-punctuation)"> components;</span></span>
<span class="line"><span style="color:var(--shiki-attr-name)">@tailwind</span><span style="color:var(--shiki-punctuation)"> utilities;</span></span></code></pre>`),n(v);var u=a(v,4),A=s(u);o(A,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-comment);font-style:italic"># It creates &#96;views/components/layouts/app.blade.php&#96;</span></span>
<span class="line"><span style="color:#C0CAF5">php</span><span style="color:var(--shiki-attr-value)"> artisan</span><span style="color:var(--shiki-attr-value)"> livewire:layout</span></span></code></pre>`),n(u);var h=a(u,4),U=s(h);o(U,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;head></span></span>
<span class="line"><span style="color:var(--shiki-token)">  ...</span></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">  &#x3C;!-- This --></span></span>
<span class="line"><span style="color:var(--shiki-token)">  @vite(['resources/css/app.css', 'resources/js/app.js'])</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;/head></span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;body></span></span>
<span class="line"><span style="color:var(--shiki-token)">  ...</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;/body></span></span></code></pre>`),n(h);var d=a(h,4),D=s(d);o(D,()=>'<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#C0CAF5">yarn</span><span style="color:var(--shiki-attr-value)"> dev</span></span></code></pre>'),n(d),j(4),S(w,y)},$$slots:{default:!0}}))}export{sa as component};
