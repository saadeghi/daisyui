import"../chunks/DsnmJJEf.js";import"../chunks/DHMwis4v.js";import{f as w,s,a as C,d as a,b as f,r as n,n as B}from"../chunks/DpCVmHgD.js";import{h as o}from"../chunks/DzKh18oq.js";import{l as V,s as H}from"../chunks/BaDBjNzh.js";import{L as _}from"../chunks/CL_qxpeC.js";import"../chunks/DohBecrD.js";const u={title:"Install daisyUI for Elysia",desc:"How to install Tailwind CSS and daisyUI in a Elysia project"},{title:P,desc:M}=u;var S=w('<h3 id="1-create-a-new-elysia-project"><a href="#1-create-a-new-elysia-project" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>1. Create a new Elysia project</h3> <p>Install Bun, according to the <a href="https://bun.sh/docs/installation" rel="nofollow" target="_blank">official Bun docs</a></p> <p>Create a new Elysia project</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">Terminal</div><!></div> <p>Install <code>@elysiajs/static</code></p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">Terminal</div><!></div> <h3 id="2-install-tailwind-css-and-daisyui"><a href="#2-install-tailwind-css-and-daisyui" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>2. Install Tailwind CSS and daisyUI</h3> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">Terminal</div><!></div> <p>Add <a href="/pages/tailwind-css/" title="Tailwind CSS">Tailwind CSS</a> and daisyUI to your CSS file</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">src/app.css</div><!></div> <h3 id="3-setup-server-file"><a href="#3-setup-server-file" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>3. Setup server file</h3> <p>Create a server file at <code>src/index.ts</code> with functions to build CSS and watch for changes</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">src/index.ts</div><!></div> <h3 id="4-add-a-indexhtml-file"><a href="#4-add-a-indexhtml-file" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>4. Add a index.html file</h3> <p>Create a <code>public/index.html</code> file with the following content</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">public/index.html</div><!></div> <p>Run the server</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">Terminal</div><!></div> <p>Now you can use daisyUI class names!</p>',1);function L(v,h){const d=V(h,["children","$$slots","$$events","$$legacy"]);_(v,H(()=>d,()=>u,{children:(k,E)=>{var c=S(),t=s(C(c),6),m=s(a(t));o(m,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#C0CAF5">bun</span><span style="color:var(--shiki-attr-value)"> create</span><span style="color:var(--shiki-attr-value)"> elysia</span><span style="color:var(--shiki-attr-value)"> myapp</span></span>
<span class="line"><span style="color:#0DB9D7">cd</span><span style="color:var(--shiki-attr-value)"> myapp</span></span></code></pre>`),n(t);var l=s(t,4),F=s(a(l));o(F,()=>'<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#C0CAF5">bun</span><span style="color:var(--shiki-attr-value)"> install</span><span style="color:var(--shiki-attr-value)"> @elysiajs/static</span></span></code></pre>'),n(l);var p=s(l,4),b=s(a(p));o(b,()=>'<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#C0CAF5">bun</span><span style="color:var(--shiki-attr-value)"> install</span><span style="color:var(--shiki-attr-value)"> tailwindcss@latest</span><span style="color:var(--shiki-attr-value)"> @tailwindcss/cli@latest</span><span style="color:var(--shiki-attr-value)"> daisyui@latest</span></span></code></pre>'),n(p);var i=s(p,4),A=s(a(i));o(A,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-attr-name)">@import </span><span style="color:var(--shiki-attr-value)">"tailwindcss"</span><span style="color:#0DB9D7"> source</span><span style="color:var(--shiki-punctuation)">(</span><span style="color:#FF9E64">none</span><span style="color:var(--shiki-punctuation)">);</span></span>
<span class="line"><span style="color:var(--shiki-attr-name)">@source </span><span style="color:var(--shiki-attr-value)">"../public"</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:var(--shiki-attr-name)">@plugin </span><span style="color:var(--shiki-attr-value)">"daisyui"</span><span style="color:var(--shiki-punctuation)">;</span></span></code></pre>`),n(i);var r=s(i,6),g=s(a(r));o(g,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#7DCFFF">import</span><span style="color:#9ABDF5"> &#123; </span><span style="color:#0DB9D7">Elysia</span><span style="color:#9ABDF5"> &#125;</span><span style="color:#7DCFFF"> from</span><span style="color:var(--shiki-punctuation)"> "</span><span style="color:var(--shiki-attr-value)">elysia</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#7DCFFF">import</span><span style="color:#9ABDF5"> &#123; </span><span style="color:#0DB9D7">staticPlugin</span><span style="color:#9ABDF5"> &#125;</span><span style="color:#7DCFFF"> from</span><span style="color:var(--shiki-punctuation)"> '</span><span style="color:var(--shiki-attr-value)">@elysiajs/static</span><span style="color:var(--shiki-punctuation)">'</span></span>
<span class="line"><span style="color:#7DCFFF">import</span><span style="color:#9ABDF5"> &#123; </span><span style="color:#0DB9D7">exec</span><span style="color:#9ABDF5"> &#125;</span><span style="color:#7DCFFF"> from</span><span style="color:var(--shiki-punctuation)"> '</span><span style="color:var(--shiki-attr-value)">child_process</span><span style="color:var(--shiki-punctuation)">'</span></span>
<span class="line"><span style="color:#7DCFFF">import</span><span style="color:#9ABDF5"> &#123; </span><span style="color:#0DB9D7">watch</span><span style="color:#9ABDF5"> &#125;</span><span style="color:#7DCFFF"> from</span><span style="color:var(--shiki-punctuation)"> '</span><span style="color:var(--shiki-attr-value)">fs</span><span style="color:var(--shiki-punctuation)">'</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-attr-name);font-style:italic">const</span><span style="color:#7AA2F7"> buildCSS</span><span style="color:var(--shiki-punctuation)"> = </span><span style="color:#9ABDF5">()</span><span style="color:var(--shiki-attr-name)"> =></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  new </span><span style="color:#0DB9D7">Promise</span><span style="color:#9ABDF5">(</span><span style="color:#E0AF68">resolve</span><span style="color:var(--shiki-attr-name)"> =></span></span>
<span class="line"><span style="color:#7AA2F7">    exec</span><span style="color:#9ABDF5">(</span><span style="color:var(--shiki-punctuation)">'</span><span style="color:var(--shiki-attr-value)">tailwindcss -i ./src/app.css -o ./public/output.css</span><span style="color:var(--shiki-punctuation)">'</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:#9ABDF5">      (</span><span style="color:#E0AF68">_error</span><span style="color:var(--shiki-punctuation)">, </span><span style="color:#E0AF68">_stdout</span><span style="color:var(--shiki-punctuation)">, </span><span style="color:#E0AF68">stderr</span><span style="color:#9ABDF5">)</span><span style="color:var(--shiki-attr-name)"> =></span><span style="color:#9ABDF5"> &#123;</span></span>
<span class="line"><span style="color:#C0CAF5">        console</span><span style="color:var(--shiki-punctuation)">.</span><span style="color:#7AA2F7">log</span><span style="color:#9ABDF5">(</span><span style="color:#C0CAF5">stderr</span><span style="color:#9ABDF5">)</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#7AA2F7">        resolve</span><span style="color:#9ABDF5">(</span><span style="color:#FF9E64">null</span><span style="color:#9ABDF5">)</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#9ABDF5">      &#125;)</span></span>
<span class="line"><span style="color:#9ABDF5">  )</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-attr-name);font-style:italic">await</span><span style="color:#7AA2F7"> buildCSS</span><span style="color:#9ABDF5">()</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-attr-name);font-style:italic">const</span><span style="color:var(--shiki-attr-name)"> watcher</span><span style="color:var(--shiki-punctuation)"> = </span><span style="color:#7AA2F7">watch</span><span style="color:#9ABDF5">(</span><span style="color:var(--shiki-punctuation)">'</span><span style="color:var(--shiki-attr-value)">./public</span><span style="color:var(--shiki-punctuation)">'</span><span style="color:var(--shiki-punctuation)">, </span><span style="color:#9ABDF5">&#123;</span><span style="color:#73DACA"> recursive</span><span style="color:var(--shiki-punctuation)">: </span><span style="color:#FF9E64">true</span><span style="color:#9ABDF5"> &#125;</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:var(--shiki-attr-name);font-style:italic">  async</span><span style="color:#9ABDF5"> ()</span><span style="color:var(--shiki-attr-name)"> =></span><span style="color:#9ABDF5"> &#123;</span></span>
<span class="line"><span style="color:var(--shiki-attr-name);font-style:italic">    await</span><span style="color:#7AA2F7"> buildCSS</span><span style="color:#9ABDF5">()</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#9ABDF5">  &#125;</span></span>
<span class="line"><span style="color:#9ABDF5">)</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C0CAF5">process</span><span style="color:var(--shiki-punctuation)">.</span><span style="color:#7AA2F7">on</span><span style="color:#9ABDF5">(</span><span style="color:var(--shiki-punctuation)">'</span><span style="color:var(--shiki-attr-value)">SIGINT</span><span style="color:var(--shiki-punctuation)">'</span><span style="color:var(--shiki-punctuation)">, </span><span style="color:#9ABDF5">()</span><span style="color:var(--shiki-attr-name)"> =></span><span style="color:#9ABDF5"> &#123;</span></span>
<span class="line"><span style="color:#C0CAF5">  watcher</span><span style="color:var(--shiki-punctuation)">.</span><span style="color:#7AA2F7">close</span><span style="color:#9ABDF5">()</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#C0CAF5">  process</span><span style="color:var(--shiki-punctuation)">.</span><span style="color:#7AA2F7">exit</span><span style="color:#9ABDF5">(</span><span style="color:#FF9E64">0</span><span style="color:#9ABDF5">)</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#9ABDF5">&#125;)</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-attr-name);font-style:italic">const</span><span style="color:var(--shiki-attr-name)"> app</span><span style="color:var(--shiki-punctuation)"> = new </span><span style="color:#7AA2F7">Elysia</span><span style="color:#9ABDF5">()</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">	.</span><span style="color:#7AA2F7">use</span><span style="color:#9ABDF5">(</span></span>
<span class="line"><span style="color:#7AA2F7">		staticPlugin</span><span style="color:#9ABDF5">(&#123;</span></span>
<span class="line"><span style="color:#73DACA">			assets</span><span style="color:var(--shiki-punctuation)">: </span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">public</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:#73DACA">      prefix</span><span style="color:var(--shiki-punctuation)">: </span><span style="color:var(--shiki-punctuation)">""</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:#9ABDF5">		&#125;)</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:#9ABDF5">	)</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">	.</span><span style="color:#7AA2F7">listen</span><span style="color:#9ABDF5">(</span><span style="color:#FF9E64">3000</span><span style="color:var(--shiki-punctuation)">, </span><span style="color:#9ABDF5">(</span><span style="color:var(--shiki-punctuation)">&#123; </span><span style="color:#E0AF68">hostname</span><span style="color:var(--shiki-punctuation)">, </span><span style="color:#E0AF68">port</span><span style="color:var(--shiki-punctuation)"> &#125;</span><span style="color:#9ABDF5">)</span><span style="color:var(--shiki-attr-name)"> =></span><span style="color:#9ABDF5"> &#123;</span></span>
<span class="line"><span style="color:#C0CAF5">		console</span><span style="color:var(--shiki-punctuation)">.</span><span style="color:#7AA2F7">log</span><span style="color:#9ABDF5">(</span><span style="color:var(--shiki-punctuation)">&#96;</span><span style="color:var(--shiki-attr-value)">Server started http://</span><span style="color:#7DCFFF">$&#123;</span><span style="color:#C0CAF5">hostname</span><span style="color:#7DCFFF">&#125;</span><span style="color:var(--shiki-attr-value)">:</span><span style="color:#7DCFFF">$&#123;</span><span style="color:#C0CAF5">port</span><span style="color:#7DCFFF">&#125;</span><span style="color:var(--shiki-punctuation)">&#96;</span><span style="color:#9ABDF5">)</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#9ABDF5">	&#125;)</span><span style="color:var(--shiki-punctuation)">;</span></span></code></pre>`),n(r);var e=s(r,6),D=s(a(e));o(D,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;!DOCTYPE</span><span style="color:var(--shiki-attr-name)"> html</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;html></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;head></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;meta</span><span style="color:var(--shiki-attr-name)"> charset</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">UTF-8</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;meta</span><span style="color:var(--shiki-attr-name)"> name</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">viewport</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> content</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">width=device-width, initial-scale=1.0</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;link</span><span style="color:var(--shiki-attr-name)"> rel</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">stylesheet</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> href</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">/output.css</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;/head></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;body></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;button</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">btn btn-primary</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Hello daisyUI</span><span style="color:var(--shiki-punctuation)">&#x3C;/button></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;/body></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;/html></span></span></code></pre>`),n(e);var y=s(e,4),x=s(a(y));o(x,()=>'<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#C0CAF5">bun</span><span style="color:var(--shiki-attr-value)"> run</span><span style="color:var(--shiki-attr-value)"> dev</span></span></code></pre>'),n(y),B(2),f(k,c)},$$slots:{default:!0}}))}export{L as component};
