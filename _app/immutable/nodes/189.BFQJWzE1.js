import"../chunks/DsnmJJEf.js";import"../chunks/BJSFKXgS.js";import{f as Z,s as a,a as $,d as s,b as z,r as e,n as M}from"../chunks/rBt4--9u.js";import{h as t}from"../chunks/DxUf3ls0.js";import{l as L,s as P}from"../chunks/BybNoomo.js";import{L as N}from"../chunks/C8z2XAmS.js";import"../chunks/B1Uw_YEL.js";const g={title:"Config",desc:"How to change the default configuration of daisyUI?"},{title:X,desc:Y}=g;var O=Z(`<p>daisyUI can be configured from your CSS file.</p> <p>Replace the semicolon <code>;</code> after <code>@plugin "daisyui"</code> with brackets <code>&#123;&#125;</code> and add the configuration inside the brackets.</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">app.css</div><!></div> <p>Default config:</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">app.css</div><!></div> <h2 id="themes"><a href="#themes" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>themes</h2> <table><thead><tr><th>Default value</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>light --default, dark --prefersdark</code></td><td>string or comma separated list or <code>false</code> or <code>all</code></td><td>List of themes to enable. Use <code>false</code> to disable all themes. Use <code>all</code> to enable all themes. Add <code>--default</code> flag next to a theme name to set it as default theme. Add <code>--prefersdark</code> flag next to a theme name to set it as default theme for dark mode.</td></tr></tbody></table> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">Example</div><!></div> <p>In above example, we have 4 themes: <code>nord</code>, <code>abyss</code>, <code>cupcake</code>, and <code>dracula</code>. nord is the default theme, abyss is the default theme for dark mode, and cupcake and dracula are available to use with <code>data-theme="cupcake"</code> and <code>data-theme="dracula"</code>.</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">Example</div><!></div> <p>In above example, we enable all themes.</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">Example</div><!></div> <p>In above example, we disable all themes. it's useful to disable all themes and add custom themes using <a href="/docs/themes/#how-to-add-a-new-custom-theme"><code>@plugin "daisyui/theme"</code></a></p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">Example</div><!></div> <p>In above example, we set dracula as the default theme. setting one value like this means only one theme will be available. Unless you add custom themes using <a href="/docs/themes/#how-to-add-a-new-custom-theme"><code>@plugin "daisyui/theme"</code></a></p> <h2 id="root"><a href="#root" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>root</h2> <table><thead><tr><th>Default value</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>":root"</code></td><td>string</td><td>The CSS selector to receive the CSS variables.</td></tr></tbody></table> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">Example</div><!></div> <p>In above example, we set the CSS variables on <code>#my-app</code> instead of <code>:root</code>. This way all daisyUI global CSS variables will be scoped to <code>#my-app</code>.<br/> This is useful to use daisyUI in a scoped environment like a web component or a shadow DOM or a specific part of the page.</p> <h2 id="include"><a href="#include" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>include</h2> <table><thead><tr><th>Default value</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td></td><td>comma separated list</td><td>List of components to include.</td></tr></tbody></table> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">Example</div><!></div> <p>In above example, we only include the button, input, and select components. All other styles of daisyUI library will be excluded.<br/> <a href="https://github.com/saadeghi/daisyui/tree/master/packages/daisyui/src" rel="nofollow" target="_blank">Here are the file names you can include or exclude</a>.</p> <h2 id="exclude"><a href="#exclude" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>exclude</h2> <table><thead><tr><th>Default value</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td></td><td>comma separated list</td><td>List of components to exclude.</td></tr></tbody></table> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">Example</div><!></div> <p>In above example, we exclude the <code>rootscrollgutter</code> style which is added to the <code>:root</code> when a modal or drawer is open.</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">Example</div><!></div> <p>In above example, we exclude the the listed files. All other parts of daisyUI will be available to use. This is useful if you want to opt out of some parts of daisyUI or if you want to mix daisyUI for some parts and another library for the rest.<br/> <a href="https://github.com/saadeghi/daisyui/tree/master/packages/daisyui/src" rel="nofollow" target="_blank">Here are the file names you can include or exclude</a>.</p> <h2 id="prefix"><a href="#prefix" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>prefix</h2> <table><thead><tr><th>Default value</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>""</code></td><td>string</td><td>Prefix for all daisyUI classes.</td></tr></tbody></table> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">Example</div><!></div> <p>In above example, all daisyUI classes will be prefixed with <code>d-</code>. For example, <code>btn</code> will be <code>d-btn</code>.</p> <h4 id="using-tailwind-css-prefix-and-daisyui-prefix-together"><a href="#using-tailwind-css-prefix-and-daisyui-prefix-together" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Using Tailwind CSS prefix AND daisyUI prefix together:</h4> <p>Probably you don't have to do this, but if you need to use both <a href="https://tailwindcss.com/docs/styling-with-utility-classes#using-the-prefix-option" rel="nofollow" target="_blank">Tailwind CSS prefix</a> and daisyUI prefix together:</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">Example</div><!></div> <p>In above example:</p> <ul><li>Tailwind class names will be prefixed with <code>tw:</code>, for example <code>p-4</code> will be <code>tw:p-4</code>.</li> <li>All daisyUI classes will be prefixed with <code>d-</code>, and <code>tw:</code>, for example <code>btn</code> will be <code>tw:d-btn</code>.</li> <li>daisyUI class name <a href="/components/theme-controller/">theme-controller</a> is an exception and it only gets the daisyUI prefix, like this: <code>d-theme-controller</code>.</li></ul> <p>For example, <code>btn</code> will be <code>tw:d-btn</code>.</p> <h2 id="logs"><a href="#logs" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>logs</h2> <table><thead><tr><th>Default value</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>true</code></td><td>boolean</td><td>Enable or disable logs.</td></tr></tbody></table> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">Example</div><!></div> <p>In above example, we disable the logs of daisyUI. This is useful if you want to clean up the console output.</p>`,1);function aa(k,x){const f=L(x,["children","$$slots","$$events","$$legacy"]);N(k,P(()=>f,()=>g,{children:(w,R)=>{var m=O(),o=a($(m),4),F=a(s(o));t(F,()=>`<pre class="shiki-diff shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span class="select-none" style="color:var(--shiki-punctuation)">-</span><span class="shiki-deleted" style="color:var(--shiki-deleted)"> @plugin "daisyui";</span></span>
<span class="line"><span class="select-none" style="color:var(--shiki-punctuation)">+</span><span class="shiki-added" style="color:var(--shiki-added)"> @plugin "daisyui" &#123;</span></span>
<span class="line"><span class="select-none" style="color:var(--shiki-punctuation)">+</span><span class="shiki-added" style="color:var(--shiki-added)"> &#125;</span></span></code></pre>`),e(o);var n=a(o,4),A=a(s(n));t(A,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-attr-name)">@plugin </span><span style="color:var(--shiki-attr-value)">"daisyui"</span><span style="color:var(--shiki-punctuation)"> &#123;</span></span>
<span class="line"><span style="color:#7AA2F7">  themes</span><span style="color:#9ABDF5">: </span><span style="color:#FF9E64">light</span><span style="color:#FF9E64"> --default</span><span style="color:#9ABDF5">, </span><span style="color:#FF9E64">dark</span><span style="color:#FF9E64"> --prefersdark</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#7AA2F7">  root</span><span style="color:#9ABDF5">: </span><span style="color:var(--shiki-attr-value)">":root"</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#7AA2F7">  include</span><span style="color:#9ABDF5">: </span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#7AA2F7">  exclude</span><span style="color:#9ABDF5">: </span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#7AA2F7">  prefix</span><span style="color:#9ABDF5">: </span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#7AA2F7">  logs</span><span style="color:#9ABDF5">: </span><span style="color:#FF9E64">true</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#125;</span></span></code></pre>`),e(n);var l=a(n,6),V=a(s(l));t(V,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-attr-name)">@plugin </span><span style="color:var(--shiki-attr-value)">"daisyui"</span><span style="color:var(--shiki-punctuation)"> &#123;</span></span>
<span class="line"><span style="color:#7AA2F7">  themes</span><span style="color:#9ABDF5">: </span><span style="color:#FF9E64">nord</span><span style="color:#FF9E64"> --default</span><span style="color:#9ABDF5">, </span><span style="color:#FF9E64">abyss</span><span style="color:#FF9E64"> --prefersdark</span><span style="color:#9ABDF5">, </span><span style="color:#FF9E64">cupcake</span><span style="color:#9ABDF5">, </span><span style="color:#FF9E64">dracula</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#125;</span></span></code></pre>`),e(l);var i=a(l,4),H=a(s(i));t(H,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-attr-name)">@plugin </span><span style="color:var(--shiki-attr-value)">"daisyui"</span><span style="color:var(--shiki-punctuation)"> &#123;</span></span>
<span class="line"><span style="color:#7AA2F7">  themes</span><span style="color:#9ABDF5">: </span><span style="color:#FF9E64">all</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#125;</span></span></code></pre>`),e(i);var r=a(i,4),D=a(s(r));t(D,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-attr-name)">@plugin </span><span style="color:var(--shiki-attr-value)">"daisyui"</span><span style="color:var(--shiki-punctuation)"> &#123;</span></span>
<span class="line"><span style="color:#7AA2F7">  themes</span><span style="color:#9ABDF5">: </span><span style="color:#FF9E64">false</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#125;</span></span></code></pre>`),e(r);var p=a(r,4),E=a(s(p));t(E,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-attr-name)">@plugin </span><span style="color:var(--shiki-attr-value)">"daisyui"</span><span style="color:var(--shiki-punctuation)"> &#123;</span></span>
<span class="line"><span style="color:#7AA2F7">  themes</span><span style="color:#9ABDF5">: </span><span style="color:#FF9E64">dracula</span><span style="color:#FF9E64"> --default</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#125;</span></span></code></pre>`),e(p);var c=a(p,8),_=a(s(c));t(_,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-attr-name)">@plugin </span><span style="color:var(--shiki-attr-value)">"daisyui"</span><span style="color:var(--shiki-punctuation)"> &#123;</span></span>
<span class="line"><span style="color:#7AA2F7">  root</span><span style="color:#9ABDF5">: </span><span style="color:var(--shiki-attr-value)">"#my-app"</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#125;</span></span></code></pre>`),e(c);var d=a(c,8),B=a(s(d));t(B,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-attr-name)">@plugin </span><span style="color:var(--shiki-attr-value)">"daisyui"</span><span style="color:var(--shiki-punctuation)"> &#123;</span></span>
<span class="line"><span style="color:#7AA2F7">  include</span><span style="color:#9ABDF5">: </span><span style="color:#FF9E64">button</span><span style="color:#9ABDF5">, </span><span style="color:#FF9E64">input</span><span style="color:#9ABDF5">, </span><span style="color:#FF9E64">select</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#125;</span></span></code></pre>`),e(d);var h=a(d,8),I=a(s(h));t(I,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-attr-name)">@plugin </span><span style="color:var(--shiki-attr-value)">"daisyui"</span><span style="color:var(--shiki-punctuation)"> &#123;</span></span>
<span class="line"><span style="color:#7AA2F7">  exclude</span><span style="color:#9ABDF5">: </span><span style="color:#FF9E64">rootscrollgutter</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#125;</span></span></code></pre>`),e(h);var u=a(h,4),U=a(s(u));t(U,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-attr-name)">@plugin </span><span style="color:var(--shiki-attr-value)">"daisyui"</span><span style="color:var(--shiki-punctuation)"> &#123;</span></span>
<span class="line"><span style="color:#7AA2F7">  exclude</span><span style="color:#9ABDF5">: </span><span style="color:#FF9E64">checkbox</span><span style="color:#9ABDF5">, </span><span style="color:#FF9E64">footer</span><span style="color:#9ABDF5">, </span><span style="color:#FF9E64">typography</span><span style="color:#9ABDF5">, </span><span style="color:#FF9E64">glass</span><span style="color:#9ABDF5">, </span><span style="color:#FF9E64">rootcolor</span><span style="color:#9ABDF5">, </span><span style="color:#FF9E64">rootscrollgutter</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#125;</span></span></code></pre>`),e(u);var v=a(u,8),C=a(s(v));t(C,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-attr-name)">@plugin </span><span style="color:var(--shiki-attr-value)">"daisyui"</span><span style="color:var(--shiki-punctuation)"> &#123;</span></span>
<span class="line"><span style="color:#7AA2F7">  prefix</span><span style="color:#9ABDF5">: </span><span style="color:var(--shiki-attr-value)">"d-"</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#125;</span></span></code></pre>`),e(v);var y=a(v,8),S=a(s(y));t(S,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-attr-name)">@import </span><span style="color:var(--shiki-attr-value)">"tailwindcss"</span><span style="color:#0DB9D7"> prefix</span><span style="color:var(--shiki-punctuation)">(</span><span style="color:#FF9E64">tw</span><span style="color:var(--shiki-punctuation)">);</span></span>
<span class="line"><span style="color:var(--shiki-attr-name)">@plugin </span><span style="color:var(--shiki-attr-value)">"daisyui"</span><span style="color:var(--shiki-punctuation)"> &#123;</span></span>
<span class="line"><span style="color:#7AA2F7">  prefix</span><span style="color:#9ABDF5">: </span><span style="color:var(--shiki-attr-value)">"d-"</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#125;</span></span></code></pre>`),e(y);var b=a(y,12),T=a(s(b));t(T,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-attr-name)">@plugin </span><span style="color:var(--shiki-attr-value)">"daisyui"</span><span style="color:var(--shiki-punctuation)"> &#123;</span></span>
<span class="line"><span style="color:#7AA2F7">  logs</span><span style="color:#9ABDF5">: </span><span style="color:#FF9E64">false</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#125;</span></span></code></pre>`),e(b),M(2),z(w,m)},$$slots:{default:!0}}))}export{aa as component};
