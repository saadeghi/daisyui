import{a as b,t as x,b as n,s as a,f as ks}from"../chunks/disclose-version.CEbLymSa.js";import{p as ba,a as xa,t as ds,u as f}from"../chunks/runtime.Bfoy81my.js";import{h as t}from"../chunks/html.CRu8H1xh.js";import{i as _a}from"../chunks/store.BuD0FfZO.js";import{p as $a,l as gs,s as ms}from"../chunks/props.CBRLfZBG.js";import{M as ys}from"../chunks/mdsvex.B5TX9o5R.js";import{a as hs}from"../chunks/render.BgulTz3p.js";import{e as vs,i as fs}from"../chunks/each.BESQNqYv.js";import{s as fa}from"../chunks/i18n.DgNLZQTC.js";import{o as bs}from"../chunks/index-client.53r3FWKn.js";import{t as xs}from"../chunks/index.BhN91MJ2.js";import{T as s}from"../chunks/Translate.DrWRpquh.js";var _s=x('<div class="border-base-content/20 hover:border-base-content/40 overflow-hidden rounded-lg border outline outline-2 outline-offset-2 outline-transparent" data-act-class="!outline-base-content"><div class="bg-base-100 text-base-content w-full cursor-pointer font-sans"><div class="grid grid-cols-5 grid-rows-3"><div class="bg-base-200 col-start-1 row-span-2 row-start-1"></div> <div class="bg-base-300 col-start-1 row-start-3"></div> <div class="bg-base-100 col-span-4 col-start-2 row-span-3 row-start-1 flex flex-col gap-1 p-2"><div class="font-bold"> </div> <div class="flex flex-wrap gap-1"><div class="bg-primary flex aspect-square w-5 items-center justify-center rounded lg:w-6"><div class="text-primary-content text-sm font-bold">A</div></div> <div class="bg-secondary flex aspect-square w-5 items-center justify-center rounded lg:w-6"><div class="text-secondary-content text-sm font-bold">A</div></div> <div class="bg-accent flex aspect-square w-5 items-center justify-center rounded lg:w-6"><div class="text-accent-content text-sm font-bold">A</div></div> <div class="bg-neutral flex aspect-square w-5 items-center justify-center rounded lg:w-6"><div class="text-neutral-content text-sm font-bold">A</div></div></div></div></div></div></div>'),$s=x('<div class=" rounded-box grid grid-cols-2 gap-4 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5"></div>');function ws(d,e){ba(e,!1);let g=$a(e,"themes");bs(()=>{xs.themeChange(!1)}),_a();var c=$s();vs(c,9,g,fs,(m,r,y)=>{var p=_s(),o=n(p),l=n(o),i=n(l),h=a(a(i,!0)),u=a(a(h,!0)),v=n(u),k=n(v);ds(()=>{fa(p,"data-set-theme",f(r)),fa(o,"data-theme",f(r)),hs(k,f(r))}),b(m,p)}),b(d,c),xa()}var js=x('<!> <!> <!> <pre class="language-js"><!></pre> <pre class="language-html"><!></pre> <blockquote><!></blockquote> <h2 id=""><!></h2> <!> <!> <pre class="language-js"><!></pre> <!> <!> <h2 id="-1"><a aria-hidden="true" tabindex="-1" href="#-1"><span class="mr-1 opacity-20 hover:opacity-60 text-base font-bold inline-block align-middle relative -mt-1">#</span></a><!></h2> <!> <!> <!> <ul><li><!></li> <li><!></li> <li><!></li></ul> <pre class="language-js"><!></pre> <h2 id="-2"><a aria-hidden="true" tabindex="-1" href="#-2"><span class="mr-1 opacity-20 hover:opacity-60 text-base font-bold inline-block align-middle relative -mt-1">#</span></a><!></h2> <!> <pre class="language-js"><!></pre> <!> <pre class="language-js"><!></pre> <h2 id="-3"><a aria-hidden="true" tabindex="-1" href="#-3"><span class="mr-1 opacity-20 hover:opacity-60 text-base font-bold inline-block align-middle relative -mt-1">#</span></a><!></h2> <!> <!> <!> <pre class="language-html"><!></pre> <h2 id="-4"><a aria-hidden="true" tabindex="-1" href="#-4"><span class="mr-1 opacity-20 hover:opacity-60 text-base font-bold inline-block align-middle relative -mt-1">#</span></a><!></h2> <!> <!> <ul><li><!></li> <li><!></li></ul> <!> <div class="alert alert-info text-sm mb-2 max-w-3xl not-prose"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="stroke-info-content shrink-0 w-6 h-6"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg> <p><!></p></div> <pre class="language-js"><!></pre> <h2 id="-5"><a aria-hidden="true" tabindex="-1" href="#-5"><span class="mr-1 opacity-20 hover:opacity-60 text-base font-bold inline-block align-middle relative -mt-1">#</span></a><!></h2> <!> <pre class="language-js"><!></pre> <h2 id="-6"><a aria-hidden="true" tabindex="-1" href="#-6"><span class="mr-1 opacity-20 hover:opacity-60 text-base font-bold inline-block align-middle relative -mt-1">#</span></a><!></h2> <!> <pre class="language-css"><!></pre> <h2 id="-7"><a aria-hidden="true" tabindex="-1" href="#-7"><span class="mr-1 opacity-20 hover:opacity-60 text-base font-bold inline-block align-middle relative -mt-1">#</span></a><!></h2> <!> <!> <pre class="language-js"><!></pre> <h2 id="-8"><a aria-hidden="true" tabindex="-1" href="#-8"><span class="mr-1 opacity-20 hover:opacity-60 text-base font-bold inline-block align-middle relative -mt-1">#</span></a><!></h2> <!> <!> <pre class="language-js"><!></pre> <h2 id="-9"><a aria-hidden="true" tabindex="-1" href="#-9"><span class="mr-1 opacity-20 hover:opacity-60 text-base font-bold inline-block align-middle relative -mt-1">#</span></a><!></h2> <!> <!> <!> <!> <pre class="language-js"><!></pre>',1);const Is={title:"daisyUI themes",desc:"How to use daisyUI themes?",published:!0};function Fs(d,e){const g=gs(e,["children","$$slots","$$events","$$legacy"]);ba(e,!1);let c=$a(e,"data");_a(),ys(d,ms(()=>g,Is,{children:(m,r)=>{var y=js(),p=ks(y);s(p,{text:"daisyUI comes with a number of themes, which you can use with no extra effort.",$$legacy:!0});var o=a(a(p,!0));s(o,{text:"Each theme defines a set of colors which will be used on all daisyUI elements.",$$legacy:!0});var l=a(a(o,!0));s(l,{text:"To use a theme, add its name in <span class=badge>tailwind.config.js</span> and activate it by adding <span class=badge>data-theme</span> attribute to <span class=badge>HTML</span> tag:",$$legacy:!0});var i=a(a(l,!0)),h=n(i);t(h,()=>`<code class="language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  <span class="token comment">//...</span>
  <span class="token literal-property property">daisyui</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token literal-property property">themes</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"light"</span><span class="token punctuation">,</span> <span class="token string">"dark"</span><span class="token punctuation">,</span> <span class="token string">"cupcake"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span></code>`);var u=a(a(i,!0)),v=n(u);t(v,()=>'<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">data-theme</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cupcake<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code>');var k=a(a(u,!0)),wa=n(k);s(wa,{text:"I suggest using <a href='https://github.com/saadeghi/theme-change'><code>theme-change</code></a>, so you can switch themes and save selected theme in local storage.",$$legacy:!0});var _=a(a(k,!0)),ja=n(_);s(ja,{text:"List of themes",$$legacy:!0});var $=a(a(_,!0));s($,{text:"Try them:",$$legacy:!0});var w=a(a($,!0));ws(w,{get themes(){return c().themes},$$legacy:!0});var j=a(a(w,!0)),Ia=n(j);t(Ia,()=>`<code class="language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  <span class="token comment">//...</span>
  <span class="token literal-property property">daisyui</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token literal-property property">themes</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token string">"light"</span><span class="token punctuation">,</span>
      <span class="token string">"dark"</span><span class="token punctuation">,</span>
      <span class="token string">"cupcake"</span><span class="token punctuation">,</span>
      <span class="token string">"bumblebee"</span><span class="token punctuation">,</span>
      <span class="token string">"emerald"</span><span class="token punctuation">,</span>
      <span class="token string">"corporate"</span><span class="token punctuation">,</span>
      <span class="token string">"synthwave"</span><span class="token punctuation">,</span>
      <span class="token string">"retro"</span><span class="token punctuation">,</span>
      <span class="token string">"cyberpunk"</span><span class="token punctuation">,</span>
      <span class="token string">"valentine"</span><span class="token punctuation">,</span>
      <span class="token string">"halloween"</span><span class="token punctuation">,</span>
      <span class="token string">"garden"</span><span class="token punctuation">,</span>
      <span class="token string">"forest"</span><span class="token punctuation">,</span>
      <span class="token string">"aqua"</span><span class="token punctuation">,</span>
      <span class="token string">"lofi"</span><span class="token punctuation">,</span>
      <span class="token string">"pastel"</span><span class="token punctuation">,</span>
      <span class="token string">"fantasy"</span><span class="token punctuation">,</span>
      <span class="token string">"wireframe"</span><span class="token punctuation">,</span>
      <span class="token string">"black"</span><span class="token punctuation">,</span>
      <span class="token string">"luxury"</span><span class="token punctuation">,</span>
      <span class="token string">"dracula"</span><span class="token punctuation">,</span>
      <span class="token string">"cmyk"</span><span class="token punctuation">,</span>
      <span class="token string">"autumn"</span><span class="token punctuation">,</span>
      <span class="token string">"business"</span><span class="token punctuation">,</span>
      <span class="token string">"acid"</span><span class="token punctuation">,</span>
      <span class="token string">"lemonade"</span><span class="token punctuation">,</span>
      <span class="token string">"night"</span><span class="token punctuation">,</span>
      <span class="token string">"coffee"</span><span class="token punctuation">,</span>
      <span class="token string">"winter"</span><span class="token punctuation">,</span>
      <span class="token string">"dim"</span><span class="token punctuation">,</span>
      <span class="token string">"nord"</span><span class="token punctuation">,</span>
      <span class="token string">"sunset"</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span></code>`);var I=a(a(j,!0));s(I,{text:"The default theme is <code>light</code> (or <code>dark</code> for dark mode)",$$legacy:!0});var q=a(a(I,!0));s(q,{text:"but you can <a href='https://daisyui.com/docs/config/'>change the default theme from tailwind.config.js</a>",$$legacy:!0});var T=a(a(q,!0)),qa=n(T),Ta=a(qa);s(Ta,{text:"How to remove unused themes?",$$legacy:!0});var H=a(a(T,!0));s(H,{text:"You can include only the themes you want in your project.",$$legacy:!0});var M=a(a(H,!0));s(M,{text:"This will reduce the size of your CSS file.",$$legacy:!0});var S=a(a(M,!0));s(S,{text:"In the below example",$$legacy:!0});var U=a(a(S,!0)),C=n(U),Ha=n(C);s(Ha,{text:"<code>cupcake</code> will be the default theme for light mode",$$legacy:!0});var E=a(a(C,!0)),Ma=n(E);s(Ma,{text:"<code>dark</code> will be the default theme for dark mode",$$legacy:!0});var Sa=a(a(E,!0)),Ua=n(Sa);s(Ua,{text:"<code>cmyk</code> can be applied on any HTML tag with <code>data-theme='cmyk'</code>",$$legacy:!0});var A=a(a(U,!0)),Ca=n(A);t(Ca,()=>`<code class="language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  <span class="token literal-property property">daisyui</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token literal-property property">themes</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"cupcake"</span><span class="token punctuation">,</span> <span class="token string">"dark"</span><span class="token punctuation">,</span> <span class="token string">"cmyk"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span></code>`);var Y=a(a(A,!0)),Ea=n(Y),Aa=a(Ea);s(Aa,{text:"How to disable all themes?",$$legacy:!0});var z=a(a(Y,!0));s(z,{text:"If you only want the default light and dark themes, set <code>themes</code> config to false.",$$legacy:!0});var L=a(a(z,!0)),Ya=n(L);t(Ya,()=>`<code class="language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  <span class="token comment">//...</span>
  <span class="token literal-property property">daisyui</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token literal-property property">themes</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span></code>`);var F=a(a(L,!0));s(F,{text:"If you don't want to include any themes and disable all colors, set <code>themes</code> config to an empty array.",$$legacy:!0});var P=a(a(F,!0)),za=n(P);t(za,()=>`<code class="language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  <span class="token comment">//...</span>
  <span class="token literal-property property">daisyui</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token literal-property property">themes</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span></code>`);var B=a(a(P,!0)),La=n(B),Fa=a(La);s(Fa,{text:"How to use a theme only for a section of a page?",$$legacy:!0});var N=a(a(B,!0));s(N,{text:"Add <code>data-theme='THEME_NAME'</code> to any element and everything inside will have your theme.",$$legacy:!0});var D=a(a(N,!0));s(D,{text:"You can nest themes and there is no limit!",$$legacy:!0});var G=a(a(D,!0));s(G,{text:"You can force a section of your HTML to only use a specific theme.",$$legacy:!0});var J=a(a(G,!0)),Pa=n(J);t(Pa,()=>`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">data-theme</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dark<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">data-theme</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>light<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    This div will always use light theme
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">data-theme</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>retro<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>This span will always use retro theme!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code>`);var K=a(a(J,!0)),Ba=n(K),Na=a(Ba);s(Na,{text:"How to add a new custom theme?",$$legacy:!0});var O=a(a(K,!0));s(O,{text:"You can add a new theme from <code>tailwind.config.js</code> file.",$$legacy:!0});var Q=a(a(O,!0));s(Q,{text:"In the below example, I added a new theme called <code>mytheme</code> and I'm also including <code>dark</code> and <code>cupcake</code> themes.",$$legacy:!0});var R=a(a(Q,!0)),V=n(R),Da=n(V);s(Da,{text:"The first theme (<code>mytheme</code>) will be the default theme.",$$legacy:!0});var Ga=a(a(V,!0)),Ja=n(Ga);s(Ja,{text:"<code>dark</code> theme will be the default theme for dark mode.",$$legacy:!0});var W=a(a(R,!0));s(W,{text:"In the below example, I have the required colors. All other colors will be generated automatically (Like the color of button when you focus on it or the color of text on a <code>primary</code> button).",$$legacy:!0});var X=a(a(W,!0)),Ka=n(X),Oa=a(a(Ka,!0)),Qa=n(Oa);s(Qa,{text:"You can also add <a href='/docs/colors/' class='link'>optional color names</a> to have full control over all colors.",$$legacy:!0});var Z=a(a(X,!0)),Ra=n(Z);t(Ra,()=>`<code class="language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  <span class="token comment">//...</span>
  <span class="token literal-property property">daisyui</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token literal-property property">themes</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">&#123;</span>
        <span class="token literal-property property">mytheme</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
          <span class="token string-property property">"primary"</span><span class="token operator">:</span> <span class="token string">"#a991f7"</span><span class="token punctuation">,</span>
          <span class="token string-property property">"secondary"</span><span class="token operator">:</span> <span class="token string">"#f6d860"</span><span class="token punctuation">,</span>
          <span class="token string-property property">"accent"</span><span class="token operator">:</span> <span class="token string">"#37cdbe"</span><span class="token punctuation">,</span>
          <span class="token string-property property">"neutral"</span><span class="token operator">:</span> <span class="token string">"#3d4451"</span><span class="token punctuation">,</span>
          <span class="token string-property property">"base-100"</span><span class="token operator">:</span> <span class="token string">"#ffffff"</span><span class="token punctuation">,</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
      <span class="token string">"dark"</span><span class="token punctuation">,</span>
      <span class="token string">"cupcake"</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span></code>`);var aa=a(a(Z,!0)),Va=n(aa),Wa=a(Va);s(Wa,{text:"CSS variables in daisyUI themes",$$legacy:!0});var sa=a(a(aa,!0));s(sa,{text:"There are a few optional CSS variables that you can use in daisyUI themes to customize design decisions for each theme:",$$legacy:!0});var na=a(a(sa,!0)),Xa=n(na);t(Xa,()=>`<code class="language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  <span class="token comment">//...</span>
  <span class="token literal-property property">daisyui</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token literal-property property">themes</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">&#123;</span>
        <span class="token literal-property property">mytheme</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
          <span class="token string-property property">"primary"</span><span class="token operator">:</span> <span class="token string">"#a991f7"</span><span class="token punctuation">,</span>
          <span class="token string-property property">"secondary"</span><span class="token operator">:</span> <span class="token string">"#f6d860"</span><span class="token punctuation">,</span>
          <span class="token string-property property">"accent"</span><span class="token operator">:</span> <span class="token string">"#37cdbe"</span><span class="token punctuation">,</span>
          <span class="token string-property property">"neutral"</span><span class="token operator">:</span> <span class="token string">"#3d4451"</span><span class="token punctuation">,</span>
          <span class="token string-property property">"base-100"</span><span class="token operator">:</span> <span class="token string">"#ffffff"</span><span class="token punctuation">,</span>

          <span class="token string-property property">"--rounded-box"</span><span class="token operator">:</span> <span class="token string">"1rem"</span><span class="token punctuation">,</span> <span class="token comment">// border radius rounded-box utility class, used in card and other large boxes</span>
          <span class="token string-property property">"--rounded-btn"</span><span class="token operator">:</span> <span class="token string">"0.5rem"</span><span class="token punctuation">,</span> <span class="token comment">// border radius rounded-btn utility class, used in buttons and similar element</span>
          <span class="token string-property property">"--rounded-badge"</span><span class="token operator">:</span> <span class="token string">"1.9rem"</span><span class="token punctuation">,</span> <span class="token comment">// border radius rounded-badge utility class, used in badges and similar</span>
          <span class="token string-property property">"--animation-btn"</span><span class="token operator">:</span> <span class="token string">"0.25s"</span><span class="token punctuation">,</span> <span class="token comment">// duration of animation when you click on button</span>
          <span class="token string-property property">"--animation-input"</span><span class="token operator">:</span> <span class="token string">"0.2s"</span><span class="token punctuation">,</span> <span class="token comment">// duration of animation for inputs like checkbox, toggle, radio, etc</span>
          <span class="token string-property property">"--btn-focus-scale"</span><span class="token operator">:</span> <span class="token string">"0.95"</span><span class="token punctuation">,</span> <span class="token comment">// scale transform of button when you focus on it</span>
          <span class="token string-property property">"--border-btn"</span><span class="token operator">:</span> <span class="token string">"1px"</span><span class="token punctuation">,</span> <span class="token comment">// border width of buttons</span>
          <span class="token string-property property">"--tab-border"</span><span class="token operator">:</span> <span class="token string">"1px"</span><span class="token punctuation">,</span> <span class="token comment">// border width of tabs</span>
          <span class="token string-property property">"--tab-radius"</span><span class="token operator">:</span> <span class="token string">"0.5rem"</span><span class="token punctuation">,</span> <span class="token comment">// border radius of tabs</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span></code>`);var ta=a(a(na,!0)),Za=n(ta),as=a(Za);s(as,{text:"Custom CSS for a daisyUI theme",$$legacy:!0});var ea=a(a(ta,!0));s(ea,{text:"You can apply custom style to a daisyUI themes using CSS:",$$legacy:!0});var pa=a(a(ea,!0)),ss=n(pa);t(ss,()=>`<code class="language-css"><span class="token selector">[data-theme="mytheme"] .btn</span> <span class="token punctuation">&#123;</span>
  <span class="token property">border-width</span><span class="token punctuation">:</span> 2px<span class="token punctuation">;</span>
  <span class="token property">border-color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`);var oa=a(a(pa,!0)),ns=n(oa),ts=a(ns);s(ts,{text:"How to customize an existing theme?",$$legacy:!0});var ca=a(a(oa,!0));s(ca,{text:"In your tailwind.config.js, you can require an existing daisyUI theme and override some colors.",$$legacy:!0});var ra=a(a(ca,!0));s(ra,{text:"In the below example, I require and spread <code>light</code> theme and change its <code>primary</code> and <code>secondary</code> colors:",$$legacy:!0});var la=a(a(ra,!0)),es=n(la);t(es,()=>`<code class="language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  <span class="token comment">//...</span>
  <span class="token literal-property property">daisyui</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token literal-property property">themes</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">&#123;</span>
        <span class="token literal-property property">light</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
          <span class="token operator">...</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"daisyui/src/theming/themes"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">"light"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token literal-property property">primary</span><span class="token operator">:</span> <span class="token string">"blue"</span><span class="token punctuation">,</span>
          <span class="token literal-property property">secondary</span><span class="token operator">:</span> <span class="token string">"teal"</span><span class="token punctuation">,</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span></code>`);var ia=a(a(la,!0)),ps=n(ia),os=a(ps);s(os,{text:"How to add custom styles for a specific theme?",$$legacy:!0});var ua=a(a(ia,!0));s(ua,{text:"You can write custom style for your elements only for a specific theme.",$$legacy:!0});var ka=a(a(ua,!0));s(ka,{text:"In this example, .btn-twitter class only will have this style on light theme.",$$legacy:!0});var da=a(a(ka,!0)),cs=n(da);t(cs,()=>`<code class="language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  <span class="token comment">//...</span>
  <span class="token literal-property property">daisyui</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token literal-property property">themes</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">&#123;</span>
        <span class="token literal-property property">light</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
          <span class="token operator">...</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"daisyui/src/theming/themes"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">"light"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token string-property property">".btn-twitter"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
            <span class="token string-property property">"background-color"</span><span class="token operator">:</span> <span class="token string">"#1EA1F1"</span><span class="token punctuation">,</span>
            <span class="token string-property property">"border-color"</span><span class="token operator">:</span> <span class="token string">"#1EA1F1"</span><span class="token punctuation">,</span>
          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
          <span class="token string-property property">".btn-twitter:hover"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
            <span class="token string-property property">"background-color"</span><span class="token operator">:</span> <span class="token string">"#1C96E1"</span><span class="token punctuation">,</span>
            <span class="token string-property property">"border-color"</span><span class="token operator">:</span> <span class="token string">"#1C96E1"</span><span class="token punctuation">,</span>
          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span></code>`);var ga=a(a(da,!0)),rs=n(ga),ls=a(rs);s(ls,{text:"How to apply Tailwind's 'dark:' selector for specific themes",$$legacy:!0});var ma=a(a(ga,!0));s(ma,{text:"daisyUI can be configured to use Tailwind's <code>dark:</code> selector in your code.",$$legacy:!0});var ya=a(a(ma,!0));s(ya,{text:"To achieve this, modify your <code>tailwind.config.js</code> file to include the darkMode parameter.",$$legacy:!0});var ha=a(a(ya,!0));s(ha,{text:"Ensure that the dark: selector applies to the daisyUI theme you designate as dark.",$$legacy:!0});var va=a(a(ha,!0));s(va,{text:"In the example below, we have 'winter' and 'night' themes. Since 'night' is the dark theme, we configure it as shown:",$$legacy:!0});var is=a(a(va,!0)),us=n(is);t(us,()=>`<code class="language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'./src/**/*.&#123;astro,html,svelte,vue,js,ts,jsx,tsx&#125;'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'daisyui'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token operator">...</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">daisyui</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token literal-property property">themes</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'winter'</span><span class="token punctuation">,</span> <span class="token string">'night'</span><span class="token punctuation">]</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">darkMode</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'selector'</span><span class="token punctuation">,</span> <span class="token string">'[data-theme="night"]'</span><span class="token punctuation">]</span>
<span class="token punctuation">&#125;</span></code>`),b(m,y)},$$slots:{default:!0},$$legacy:!0})),xa()}export{Fs as component};
