import"../chunks/DsnmJJEf.js";import"../chunks/DHMwis4v.js";import{f as La,a as Ya,d as s,s as a,b as qa,r as n}from"../chunks/DpCVmHgD.js";import{h as o}from"../chunks/DzKh18oq.js";import{l as Ga,s as Pa}from"../chunks/BPOyD3kM.js";import{L as Ua}from"../chunks/DONVxAvB.js";import{T as t}from"../chunks/DS0p07N7.js";const X={title:"The most common mistake when using Tailwind CSS (and how to fix it)",desc:"While working on daisyUI, I see a lot of people making this mistake when using Tailwind CSS.",published:!0,date:"2023-9-14",author:"Pouya Saadeghi",thumbnail:"https://img.daisyui.com/images/blog/tailwind-mistake.webp",tags:["Guides"]},{title:as,desc:ss,published:ns,date:ts,author:os,thumbnail:es,tags:is}=X;var Wa=La(`<p><!></p> <h2 id="the-mistake"><a href="#the-mistake" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a><span data-heading-text="The mistake"><!></span></h2> <p><!></p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p><!></p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p><!></p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p><!> <!></p> <p><!> <!></p> <h2 id="why-it-doesnt-work"><a href="#why-it-doesnt-work" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a><span data-heading-text="Why it doesn't work?"><!></span></h2> <p><!></p> <p><!><a href="https://tailwindcss.com/docs/content-configuration#dynamic-class-names" rel="nofollow" target="_blank">using dynamic class names with Tailwind CSS</a><!></p> <h2 id="but-it-was-working-in-dev-environment"><a href="#but-it-was-working-in-dev-environment" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a><span data-heading-text="But it was working in dev environment!"><!></span></h2> <p><!></p> <h2 id="but-some-class-names-work-and-some-dont"><a href="#but-some-class-names-work-and-some-dont" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a><span data-heading-text="But some class names work and some don't!"><!></span></h2> <p><!></p> <h2 id="solutions"><a href="#solutions" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a><span data-heading-text="Solutions"><!></span></h2> <p><!></p> <p><!></p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p><!></p> <h3 id="solution-1-add-the-class-names-somewhere-in-the-file"><a href="#solution-1-add-the-class-names-somewhere-in-the-file" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a><span data-heading-text="Solution 1: Add the class names somewhere in the file"><!></span></h3> <p><!></p> <h3 id="solution-2-a-safelist-file"><a href="#solution-2-a-safelist-file" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a><span data-heading-text="Solution 2: A safelist file"><!></span></h3> <p><!></p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p><!></p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <h3 id="solution-3-safelist-config"><a href="#solution-3-safelist-config" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a><span data-heading-text="Solution 3: Safelist config"><!></span></h3> <p><!></p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p><!></p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p><!><a href="https://tailwindcss.com/docs/content-configuration#safelisting-classes" rel="nofollow" target="_blank">Tailwind CSS safelist</a><!></p>`,1);function rs(aa,sa){const na=Ga(sa,["children","$$slots","$$events","$$legacy"]);Ua(aa,Pa(()=>na,()=>X,{children:(ta,Ra)=>{var L=Wa(),e=Ya(L),oa=s(e);t(oa,{text:"As a maintainer of daisyUI, I help people on GitHub issues and GitHub discussions every day. I see a lot of people making this mistake when using Tailwind CSS. It's so simple to avoid but I find it so common among developers."}),n(e);var i=a(e,2),Y=a(s(i)),ea=s(Y);t(ea,{text:"The mistake"}),n(Y),n(i);var r=a(i,2),ia=s(r);t(ia,{text:"Here's how we simply use Tailwind CSS class names in HTML:"}),n(r);var l=a(r,2),ra=s(l);o(ra,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;div</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">bg-red-500</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">>&#x3C;/div></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;div</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">bg-green-500</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">>&#x3C;/div></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;div</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">bg-blue-500</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">>&#x3C;/div></span></span></code></pre>`),n(l);var p=a(l,2),la=s(p);t(la,{text:"However it would be cool if we do some totally necessary engineering and make it more dynamic. So we do something like this:"}),n(p);var c=a(p,2),pa=s(c);o(pa,()=>'<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;div</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">bg-&#123;&#123; color &#125;&#125;-500</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">>&#x3C;/div></span></span></code></pre>'),n(c);var h=a(c,2),ca=s(h);t(ca,{text:"You might even want to do the same thing with daisyUI class names:"}),n(h);var v=a(h,2),ha=s(v);o(ha,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;div</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">btn btn-&#123;&#123; type &#125;&#125;</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">>&#x3C;/div></span></span>
<span class="line"><span style="color:var(--shiki-token)">instead of</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;div</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">btn-primary</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">>&#x3C;/div></span></span></code></pre>`),n(v);var d=a(v,2),q=s(d);t(q,{text:"It's cool, right?"});var va=a(q,2);t(va,{text:"It even works in dev environment."}),n(d);var u=a(d,2),G=s(u);t(G,{text:"Everything is fine..."});var da=a(G,2);t(da,{text:"😠 until we build our app for production and you realize the color is not working anymore"}),n(u);var m=a(u,2),P=a(s(m)),ua=s(P);t(ua,{text:"Why it doesn't work?"}),n(P),n(m);var y=a(m,2),ma=s(y);t(ma,{text:"Tailwind CSS scans your HTML files and looks for class names. Then it generates a CSS file based on the class names it finds. It's that simple. Because the string `bg-red-500` does not exist in `bg-{{ color }}-500`, it simply won't generate the CSS for it."}),n(y);var g=a(y,2),U=s(g);t(U,{text:"Read more about "});var ya=a(U,2);t(ya,{text:"."}),n(g);var k=a(g,2),W=a(s(k)),ga=s(W);t(ga,{text:"But it was working in dev environment!"}),n(W),n(k);var b=a(k,2),ka=s(b);t(ka,{text:"Yes, it was working because you probably first had `bg-red-500` in your file, you saved the file and `.bg-red-500` class name got added to your CSS. Then you changed it to `bg-{{ color }}-500` and saved the file again. `bg-red-500` is not in your HTML anymore, but it's still in your CSS file. So it works in dev environment, but not in production."}),n(b);var w=a(b,2),R=a(s(w)),ba=s(R);t(ba,{text:"But some class names work and some don't!"}),n(R),n(w);var f=a(w,2),wa=s(f);t(wa,{text:"Probably because you used those class names the correct way (as a string like `bg-red-500`) in another file."}),n(f);var x=a(f,2),E=a(s(x)),fa=s(E);t(fa,{text:"Solutions"}),n(E),n(x);var _=a(x,2),xa=s(_);t(xa,{text:"How to fix it?"}),n(_);var H=a(_,2),_a=s(H);t(_a,{text:"Simply  use dynamic class names like `bg-{{ color }}-500`. Make sure the whole class name as a string exists in your file."}),n(H);var V=a(H,2),Ha=s(V);o(Ha,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-attr-name);font-style:italic">let</span><span style="color:var(--shiki-attr-name)"> color</span><span style="color:var(--shiki-punctuation)"> = </span><span style="color:var(--shiki-punctuation)">'</span><span style="color:var(--shiki-attr-value)">bg-red-500</span><span style="color:var(--shiki-punctuation)">'</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;div</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">&#123;&#123; color &#125;&#125;</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">>&#x3C;/div></span></span></code></pre>`),n(V);var B=a(V,2),Va=s(B);t(Va,{text:"If you really have to do that, You have 3 ways:"}),n(B);var F=a(B,2),J=a(s(F)),Ba=s(J);t(Ba,{text:"Solution 1: Add the class names somewhere in the file"}),n(J),n(F);var C=a(F,2),Fa=s(C);t(Fa,{text:"Map the required class names somewhere in your file. It can be an object, a comment or anything."}),n(C);var S=a(C,2),K=a(s(S)),Ca=s(K);t(Ca,{text:"Solution 2: A safelist file"}),n(K),n(S);var D=a(S,2),Sa=s(D);t(Sa,{text:"List all the required class names in a safelist file and add it to your `tailwind.config.js` file as `content`"}),n(D);var A=a(D,2),Da=s(A);o(Da,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#0DB9D7">module</span><span style="color:var(--shiki-punctuation)">.</span><span style="color:#0DB9D7">exports</span><span style="color:var(--shiki-punctuation)"> = </span><span style="color:#9ABDF5">&#123;</span></span>
<span class="line"><span style="color:#73DACA">  content</span><span style="color:var(--shiki-punctuation)">: </span><span style="color:#9ABDF5">[</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">./path/safelist.txt</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:#9ABDF5">]</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">  // ...</span></span>
<span class="line"><span style="color:#9ABDF5">&#125;</span></span></code></pre>`),n(A);var T=a(A,2),Aa=s(T);t(Aa,{text:"`./path/safelist.txt` file can be simply like this:"}),n(T);var Z=a(T,2),Ta=s(Z);o(Ta,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span>bg-red-500</span></span>
<span class="line"><span>bg-green-500</span></span>
<span class="line"><span>bg-blue-500</span></span></code></pre>`),n(Z);var I=a(Z,2),N=a(s(I)),Za=s(N);t(Za,{text:"Solution 3: Safelist config"}),n(N),n(I);var M=a(I,2),Ia=s(M);t(Ia,{text:"Safelist all the required class names in your `tailwind.config.js` file."}),n(M);var $=a(M,2),Ma=s($);o(Ma,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#0DB9D7">module</span><span style="color:var(--shiki-punctuation)">.</span><span style="color:#0DB9D7">exports</span><span style="color:var(--shiki-punctuation)"> = </span><span style="color:#9ABDF5">&#123;</span></span>
<span class="line"><span style="color:#73DACA">  content</span><span style="color:var(--shiki-punctuation)">: </span><span style="color:#9ABDF5">[</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">./pages/**/*.&#123;html,js&#125;</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">, </span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">./components/**/*.&#123;html,js&#125;</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:#9ABDF5">]</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">  // ...</span></span>
<span class="line"><span style="color:#73DACA">  safelist</span><span style="color:var(--shiki-punctuation)">: </span><span style="color:#9ABDF5">[</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">bg-red-500</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">, </span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">bg-green-500</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">, </span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">bg-blue-500</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:#9ABDF5">]</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">  // ...</span></span>
<span class="line"><span style="color:#9ABDF5">&#125;</span></span></code></pre>`),n($);var z=a($,2),$a=s(z);t($a,{text:"You can also use regex patterns in safelist:"}),n(z);var j=a(z,2),za=s(j);o(za,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#0DB9D7">module</span><span style="color:var(--shiki-punctuation)">.</span><span style="color:#0DB9D7">exports</span><span style="color:var(--shiki-punctuation)"> = </span><span style="color:#9ABDF5">&#123;</span></span>
<span class="line"><span style="color:#73DACA">  content</span><span style="color:var(--shiki-punctuation)">: </span><span style="color:#9ABDF5">[</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">./pages/**/*.&#123;html,js&#125;</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">, </span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">./components/**/*.&#123;html,js&#125;</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:#9ABDF5">]</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">  // ...</span></span>
<span class="line"><span style="color:#73DACA">  safelist</span><span style="color:var(--shiki-punctuation)">: </span><span style="color:#9ABDF5">[</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    "</span><span style="color:var(--shiki-attr-value)">bg-teal-700</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:#9ABDF5">    &#123;</span></span>
<span class="line"><span style="color:#73DACA">      pattern</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:var(--shiki-punctuation)"> /</span><span style="color:#B4F9F8">bg-</span><span style="color:var(--shiki-punctuation)">(</span><span style="color:#B4F9F8">red</span><span style="color:var(--shiki-attr-name)">|</span><span style="color:#B4F9F8">green</span><span style="color:var(--shiki-attr-name)">|</span><span style="color:#B4F9F8">blue</span><span style="color:var(--shiki-punctuation)">)</span><span style="color:#B4F9F8">-</span><span style="color:var(--shiki-punctuation)">(</span><span style="color:#B4F9F8">400</span><span style="color:var(--shiki-attr-name)">|</span><span style="color:#B4F9F8">500</span><span style="color:var(--shiki-attr-name)">|</span><span style="color:#B4F9F8">600</span><span style="color:var(--shiki-punctuation)">)/</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:#9ABDF5">    &#125;</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:#9ABDF5">  ]</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">  // ...</span></span>
<span class="line"><span style="color:#9ABDF5">&#125;</span></span></code></pre>`),n(j);var O=a(j,2),Q=s(O);t(Q,{text:"Read more about "});var ja=a(Q,2);t(ja,{text:"."}),n(O),qa(ta,L)},$$slots:{default:!0}}))}export{rs as component};
