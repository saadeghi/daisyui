import"../chunks/DsnmJJEf.js";import"../chunks/BJSFKXgS.js";import{f as A,s as a,a as x,d as s,b as D,r as n,n as V}from"../chunks/rBt4--9u.js";import{h as t}from"../chunks/DxUf3ls0.js";import{l as H,s as B}from"../chunks/BybNoomo.js";import{L as _}from"../chunks/BTO4pwxX.js";import"../chunks/B1Uw_YEL.js";const v={title:"Install daisyUI for Eleventy",desc:"How to install Tailwind CSS and daisyUI in a Eleventy project"},{title:E,desc:U}=v;var S=A('<h3 id="1-initialize-a-new-node-project-and-add-dev-and-build-scripts"><a href="#1-initialize-a-new-node-project-and-add-dev-and-build-scripts" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>1. Initialize a new Node project and add dev and build scripts</h3> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">Terminal</div><!></div> <h3 id="2-install-11ty-postcss-tailwind-css-tailwind-css-typography-plugin-and-daisyui"><a href="#2-install-11ty-postcss-tailwind-css-tailwind-css-typography-plugin-and-daisyui" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>2. Install 11ty, PostCSS, Tailwind CSS, Tailwind CSS Typography plugin, and daisyUI</h3> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">Terminal</div><!></div> <h3 id="3-create-a-layout-template"><a href="#3-create-a-layout-template" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>3. Create a layout template</h3> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">src/_includes/layouts/default.njk</div><!></div> <h3 id="4-create-a-markdown-homepage"><a href="#4-create-a-markdown-homepage" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>4. Create a markdown homepage</h3> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">src/index.md</div><!></div> <h3 id="5-create-a-css-file"><a href="#5-create-a-css-file" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>5. Create a CSS file</h3> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">src/styles/index.css</div><!></div> <h3 id="6-create-a-eleventyconfigmjs-file-at-root"><a href="#6-create-a-eleventyconfigmjs-file-at-root" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>6. Create a eleventy.config.mjs file at root</h3> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">eleventy.config.mjs</div><!></div> <h3 id="6-run-the-project"><a href="#6-run-the-project" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>6. Run the project</h3> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">Terminal</div><!></div> <p>Now you can use daisyUI class names!</p>',1);function O(u,y){const d=H(y,["children","$$slots","$$events","$$legacy"]);_(u,B(()=>d,()=>v,{children:(k,Z)=>{var c=S(),o=a(x(c),2),m=a(s(o));t(m,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#C0CAF5">npm</span><span style="color:var(--shiki-attr-value)"> init</span><span style="color:#E0AF68"> -y</span></span>
<span class="line"><span style="color:#C0CAF5">npm</span><span style="color:var(--shiki-attr-value)"> pkg</span><span style="color:var(--shiki-attr-value)"> set</span><span style="color:var(--shiki-attr-value)"> scripts.dev=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">eleventy --serve</span><span style="color:var(--shiki-punctuation)">"</span></span>
<span class="line"><span style="color:#C0CAF5">npm</span><span style="color:var(--shiki-attr-value)"> pkg</span><span style="color:var(--shiki-attr-value)"> set</span><span style="color:var(--shiki-attr-value)"> scripts.build=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">eleventy</span><span style="color:var(--shiki-punctuation)">"</span></span></code></pre>`),n(o);var l=a(o,4),g=a(s(l));t(g,()=>'<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#C0CAF5">npm</span><span style="color:var(--shiki-attr-value)"> install</span><span style="color:var(--shiki-attr-value)"> @11ty/eleventy</span><span style="color:var(--shiki-attr-value)"> postcss</span><span style="color:var(--shiki-attr-value)"> tailwindcss@latest</span><span style="color:var(--shiki-attr-value)"> @tailwindcss/postcss@latest</span><span style="color:var(--shiki-attr-value)"> @tailwindcss/typography@latest</span><span style="color:var(--shiki-attr-value)"> daisyui@latest</span></span></code></pre>'),n(l);var i=a(l,4),b=a(s(i));t(b,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-punctuation)">---</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">title</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:var(--shiki-attr-value)"> My Blog</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">---</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;!doctype</span><span style="color:var(--shiki-attr-name)"> html</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;html</span><span style="color:var(--shiki-attr-name)"> lang</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">en</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;head></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;meta</span><span style="color:var(--shiki-attr-name)"> charset</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">utf-8</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;meta</span><span style="color:var(--shiki-attr-name)"> name</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">viewport</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> content</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">width=device-width, initial-scale=1.0</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;title></span><span style="color:var(--shiki-token)">&#123;&#123; title &#125;&#125;</span><span style="color:var(--shiki-punctuation)">&#x3C;/title></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;link</span><span style="color:var(--shiki-attr-name)"> rel</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">stylesheet</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> href</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">/styles/index.css</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;/head></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;body</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">prose</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-token)">    &#123;&#123; content | safe &#125;&#125;</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;/body></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;/html></span></span></code></pre>`),n(i);var p=a(i,4),F=a(s(p));t(F,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-punctuation)">---</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">layout</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:var(--shiki-attr-value)"> layouts/default.njk</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">---</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-punctuation);font-weight:bold">#</span><span style="color:var(--shiki-punctuation);font-weight:bold"> Markdown heading 1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61BDF2;font-weight:bold">##</span><span style="color:#61BDF2;font-weight:bold"> Markdown heading 2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7AA2F7;font-weight:bold">###</span><span style="color:#7AA2F7;font-weight:bold"> Markdown heading 3</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;div</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">not-prose</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;button</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">btn</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">daisyUI Button</span><span style="color:var(--shiki-punctuation)">&#x3C;/button></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;/div></span></span></code></pre>`),n(p);var e=a(p,4),w=a(s(e));t(w,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-attr-name)">@import </span><span style="color:var(--shiki-attr-value)">'tailwindcss'</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:var(--shiki-attr-name)">@plugin </span><span style="color:var(--shiki-attr-value)">"@tailwindcss/typography"</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:var(--shiki-attr-name)">@plugin </span><span style="color:var(--shiki-attr-value)">"daisyui"</span><span style="color:var(--shiki-punctuation)">;</span></span></code></pre>`),n(e);var r=a(e,4),C=a(s(r));t(C,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#7DCFFF">import</span><span style="color:#0DB9D7"> fs</span><span style="color:#7DCFFF"> from</span><span style="color:var(--shiki-punctuation)"> '</span><span style="color:var(--shiki-attr-value)">fs</span><span style="color:var(--shiki-punctuation)">'</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#7DCFFF">import</span><span style="color:#0DB9D7"> path</span><span style="color:#7DCFFF"> from</span><span style="color:var(--shiki-punctuation)"> '</span><span style="color:var(--shiki-attr-value)">path</span><span style="color:var(--shiki-punctuation)">'</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#7DCFFF">import</span><span style="color:#0DB9D7"> postcss</span><span style="color:#7DCFFF"> from</span><span style="color:var(--shiki-punctuation)"> '</span><span style="color:var(--shiki-attr-value)">postcss</span><span style="color:var(--shiki-punctuation)">'</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#7DCFFF">import</span><span style="color:#0DB9D7"> tailwindcss</span><span style="color:#7DCFFF"> from</span><span style="color:var(--shiki-punctuation)"> '</span><span style="color:var(--shiki-attr-value)">@tailwindcss/postcss</span><span style="color:var(--shiki-punctuation)">'</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7DCFFF">export</span><span style="color:#7DCFFF"> default</span><span style="color:var(--shiki-attr-name)"> function</span><span style="color:#9ABDF5"> (</span><span style="color:#E0AF68">eleventyConfig</span><span style="color:#9ABDF5">)</span><span style="color:#9ABDF5"> &#123;</span></span>
<span class="line"><span style="color:#C0CAF5">  eleventyConfig</span><span style="color:var(--shiki-punctuation)">.</span><span style="color:#7AA2F7">on</span><span style="color:#9ABDF5">(</span><span style="color:var(--shiki-punctuation)">'</span><span style="color:var(--shiki-attr-value)">eleventy.before</span><span style="color:var(--shiki-punctuation)">'</span><span style="color:var(--shiki-punctuation)">,</span><span style="color:var(--shiki-attr-name);font-style:italic"> async</span><span style="color:#9ABDF5"> () </span><span style="color:var(--shiki-attr-name)">=></span><span style="color:#9ABDF5"> &#123;</span></span>
<span class="line"><span style="color:var(--shiki-attr-name);font-style:italic">    const</span><span style="color:var(--shiki-attr-name)"> tailwindInputPath</span><span style="color:var(--shiki-punctuation)"> =</span><span style="color:#C0CAF5"> path</span><span style="color:var(--shiki-punctuation)">.</span><span style="color:#7AA2F7">resolve</span><span style="color:#9ABDF5">(</span><span style="color:var(--shiki-punctuation)">'</span><span style="color:var(--shiki-attr-value)">./src/styles/index.css</span><span style="color:var(--shiki-punctuation)">'</span><span style="color:#9ABDF5">)</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:var(--shiki-attr-name);font-style:italic">    const</span><span style="color:var(--shiki-attr-name)"> tailwindOutputPath</span><span style="color:var(--shiki-punctuation)"> =</span><span style="color:var(--shiki-punctuation)"> '</span><span style="color:var(--shiki-attr-value)">./dist/styles/index.css</span><span style="color:var(--shiki-punctuation)">'</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:var(--shiki-attr-name);font-style:italic">    const</span><span style="color:var(--shiki-attr-name)"> cssContent</span><span style="color:var(--shiki-punctuation)"> =</span><span style="color:#C0CAF5"> fs</span><span style="color:var(--shiki-punctuation)">.</span><span style="color:#7AA2F7">readFileSync</span><span style="color:#9ABDF5">(</span><span style="color:#C0CAF5">tailwindInputPath</span><span style="color:var(--shiki-punctuation)">,</span><span style="color:var(--shiki-punctuation)"> '</span><span style="color:var(--shiki-attr-value)">utf8</span><span style="color:var(--shiki-punctuation)">'</span><span style="color:#9ABDF5">)</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:var(--shiki-attr-name);font-style:italic">    const</span><span style="color:var(--shiki-attr-name)"> outputDir</span><span style="color:var(--shiki-punctuation)"> =</span><span style="color:#C0CAF5"> path</span><span style="color:var(--shiki-punctuation)">.</span><span style="color:#7AA2F7">dirname</span><span style="color:#9ABDF5">(</span><span style="color:#C0CAF5">tailwindOutputPath</span><span style="color:#9ABDF5">)</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-attr-name)">    if</span><span style="color:#9ABDF5"> (</span><span style="color:var(--shiki-attr-name)">!</span><span style="color:#C0CAF5">fs</span><span style="color:var(--shiki-punctuation)">.</span><span style="color:#7AA2F7">existsSync</span><span style="color:#9ABDF5">(</span><span style="color:#C0CAF5">outputDir</span><span style="color:#9ABDF5">)) &#123;</span></span>
<span class="line"><span style="color:#C0CAF5">      fs</span><span style="color:var(--shiki-punctuation)">.</span><span style="color:#7AA2F7">mkdirSync</span><span style="color:#9ABDF5">(</span><span style="color:#C0CAF5">outputDir</span><span style="color:var(--shiki-punctuation)">,</span><span style="color:#9ABDF5"> &#123; </span><span style="color:#73DACA">recursive</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:#FF9E64"> true</span><span style="color:#9ABDF5"> &#125;)</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#9ABDF5">    &#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-attr-name);font-style:italic">    const</span><span style="color:var(--shiki-attr-name)"> result</span><span style="color:var(--shiki-punctuation)"> =</span><span style="color:var(--shiki-attr-name);font-style:italic"> await</span><span style="color:#7AA2F7"> postcss</span><span style="color:#9ABDF5">([</span><span style="color:#7AA2F7">tailwindcss</span><span style="color:#9ABDF5">()])</span><span style="color:var(--shiki-punctuation)">.</span><span style="color:#7AA2F7">process</span><span style="color:#9ABDF5">(</span><span style="color:#C0CAF5">cssContent</span><span style="color:var(--shiki-punctuation)">,</span><span style="color:#9ABDF5"> &#123;</span></span>
<span class="line"><span style="color:#73DACA">      from</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:#C0CAF5"> tailwindInputPath</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:#73DACA">      to</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:#C0CAF5"> tailwindOutputPath</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:#9ABDF5">    &#125;)</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C0CAF5">    fs</span><span style="color:var(--shiki-punctuation)">.</span><span style="color:#7AA2F7">writeFileSync</span><span style="color:#9ABDF5">(</span><span style="color:#C0CAF5">tailwindOutputPath</span><span style="color:var(--shiki-punctuation)">,</span><span style="color:#C0CAF5"> result</span><span style="color:var(--shiki-punctuation)">.</span><span style="color:#7DCFFF">css</span><span style="color:#9ABDF5">)</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#9ABDF5">  &#125;)</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-attr-name);font-style:italic">  return</span><span style="color:#9ABDF5"> &#123;</span></span>
<span class="line"><span style="color:#73DACA">    dir</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:#9ABDF5"> &#123; </span><span style="color:#73DACA">input</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:var(--shiki-punctuation)"> '</span><span style="color:var(--shiki-attr-value)">src</span><span style="color:var(--shiki-punctuation)">'</span><span style="color:var(--shiki-punctuation)">,</span><span style="color:#73DACA"> output</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:var(--shiki-punctuation)"> '</span><span style="color:var(--shiki-attr-value)">dist</span><span style="color:var(--shiki-punctuation)">'</span><span style="color:#9ABDF5"> &#125;</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:#9ABDF5">  &#125;</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#9ABDF5">&#125;</span></span></code></pre>`),n(r);var h=a(r,4),f=a(s(h));t(f,()=>'<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#C0CAF5">npm</span><span style="color:var(--shiki-attr-value)"> run</span><span style="color:var(--shiki-attr-value)"> dev</span></span></code></pre>'),n(h),V(2),D(k,c)},$$slots:{default:!0}}))}export{O as component};
