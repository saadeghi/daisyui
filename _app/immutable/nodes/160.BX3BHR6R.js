import"../chunks/DsnmJJEf.js";import"../chunks/BJSFKXgS.js";import{f as g,s,a as w,d as a,b as f,r as n,n as D}from"../chunks/rBt4--9u.js";import{h as t}from"../chunks/DxUf3ls0.js";import{l as C,s as x}from"../chunks/BybNoomo.js";import{L as A}from"../chunks/BX4u25S2.js";import"../chunks/B1Uw_YEL.js";const c={title:"Install daisyUI for Lit",desc:"How to install Tailwind CSS and daisyUI in a Lit + Vite project"},{title:M,desc:T}=c;var B=g('<h3 id="1-create-a-new-vite-project"><a href="#1-create-a-new-vite-project" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>1. Create a new Vite project</h3> <p>Create a new Vite project in the current directory</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">Terminal</div><!></div> <h3 id="2-install-tailwind-css-and-daisyui"><a href="#2-install-tailwind-css-and-daisyui" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>2. Install Tailwind CSS and daisyUI</h3> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">Terminal</div><!></div> <p>Add <a href="/pages/tailwind-css/" title="Tailwind CSS">Tailwind CSS</a> to Vite config</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">vite.config.js</div><!></div> <p>Put Tailwind CSS and daisyUI in your CSS file (and remove old styles)</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">src/index.css</div><!></div> <h3 id="3-make-the-css-available-for-shadow-dom-elements"><a href="#3-make-the-css-available-for-shadow-dom-elements" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>3. Make the CSS available for shadow DOM elements</h3> <p>Put this code in <code>src/my-element.js</code> file and remove the old code</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">src/my-element.js</div><!></div> <p>Now you can use daisyUI class names!</p>',1);function L(v,d){const y=C(d,["children","$$slots","$$events","$$legacy"]);A(v,x(()=>y,()=>c,{children:(h,V)=>{var r=B(),o=s(w(r),4),u=s(a(o));t(u,()=>'<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#C0CAF5">npm</span><span style="color:var(--shiki-attr-value)"> create</span><span style="color:var(--shiki-attr-value)"> vite@latest</span><span style="color:var(--shiki-attr-value)"> ./</span><span style="color:#E0AF68"> --</span><span style="color:#E0AF68"> --template</span><span style="color:var(--shiki-attr-value)"> lit</span></span></code></pre>'),n(o);var l=s(o,4),m=s(a(l));t(m,()=>'<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#C0CAF5">npm</span><span style="color:var(--shiki-attr-value)"> install</span><span style="color:var(--shiki-attr-value)"> tailwindcss@latest</span><span style="color:var(--shiki-attr-value)"> @tailwindcss/vite@latest</span><span style="color:var(--shiki-attr-value)"> daisyui@latest</span></span></code></pre>'),n(l);var e=s(l,4),k=s(a(e));t(k,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#7DCFFF">import</span><span style="color:#9ABDF5"> &#123; </span><span style="color:#0DB9D7">defineConfig</span><span style="color:#9ABDF5"> &#125;</span><span style="color:#7DCFFF"> from</span><span style="color:var(--shiki-punctuation)"> '</span><span style="color:var(--shiki-attr-value)">vite</span><span style="color:var(--shiki-punctuation)">'</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#7DCFFF">import</span><span style="color:#0DB9D7"> tailwindcss</span><span style="color:#7DCFFF"> from</span><span style="color:var(--shiki-punctuation)"> '</span><span style="color:var(--shiki-attr-value)">@tailwindcss/vite</span><span style="color:var(--shiki-punctuation)">'</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7DCFFF">export</span><span style="color:#7DCFFF"> default</span><span style="color:#7AA2F7"> defineConfig</span><span style="color:#9ABDF5">(&#123;</span></span>
<span class="line"><span style="color:#73DACA">  plugins</span><span style="color:var(--shiki-punctuation)">: </span><span style="color:#9ABDF5">[</span></span>
<span class="line"><span style="color:#7AA2F7">    tailwindcss</span><span style="color:#9ABDF5">()</span></span>
<span class="line"><span style="color:#9ABDF5">  ]</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:#9ABDF5">&#125;)</span><span style="color:var(--shiki-punctuation)">;</span></span></code></pre>`),n(e);var i=s(e,4),F=s(a(i));t(F,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-attr-name)">@import </span><span style="color:var(--shiki-attr-value)">"tailwindcss"</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:var(--shiki-attr-name)">@plugin </span><span style="color:var(--shiki-attr-value)">"daisyui"</span><span style="color:var(--shiki-punctuation)">;</span></span></code></pre>`),n(i);var p=s(i,6),b=s(a(p));t(b,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#7DCFFF">import</span><span style="color:#9ABDF5"> &#123; </span><span style="color:#0DB9D7">LitElement</span><span style="color:var(--shiki-punctuation)">,</span><span style="color:#0DB9D7"> html</span><span style="color:#9ABDF5"> &#125;</span><span style="color:#7DCFFF"> from</span><span style="color:var(--shiki-punctuation)"> "</span><span style="color:var(--shiki-attr-value)">lit</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#7DCFFF">import</span><span style="color:#9ABDF5"> &#123; </span><span style="color:#0DB9D7">unsafeCSS</span><span style="color:#9ABDF5"> &#125;</span><span style="color:#7DCFFF"> from</span><span style="color:var(--shiki-punctuation)"> "</span><span style="color:var(--shiki-attr-value)">lit</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#7DCFFF">import</span><span style="color:#0DB9D7"> globalStyles</span><span style="color:#7DCFFF"> from</span><span style="color:var(--shiki-punctuation)"> "</span><span style="color:var(--shiki-attr-value)">./index.css?inline</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7DCFFF">export</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:#C0CAF5"> MyElement</span><span style="color:var(--shiki-attr-name);font-style:italic"> extends</span><span style="color:var(--shiki-attr-name)"> LitElement</span><span style="color:#9ABDF5"> &#123;</span></span>
<span class="line"><span style="color:var(--shiki-attr-name);font-style:italic">  static</span><span style="color:#C0CAF5"> styles</span><span style="color:var(--shiki-punctuation)"> = </span><span style="color:#9ABDF5">[</span><span style="color:#7AA2F7">unsafeCSS</span><span style="color:#9ABDF5">(</span><span style="color:#7DCFFF">globalStyles</span><span style="color:#9ABDF5">)]</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#7AA2F7">  render</span><span style="color:#9ABDF5">()</span><span style="color:#9ABDF5"> &#123;</span></span>
<span class="line"><span style="color:var(--shiki-attr-name);font-style:italic">    return</span><span style="color:#7AA2F7"> html</span><span style="color:var(--shiki-punctuation)">&#96;</span><span style="color:var(--shiki-attr-value)">&#x3C;button class="btn">daisyUI button&#x3C;/button> </span><span style="color:var(--shiki-punctuation)">&#96;</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#9ABDF5">  &#125;</span></span>
<span class="line"><span style="color:#9ABDF5">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C0CAF5">window</span><span style="color:var(--shiki-punctuation)">.</span><span style="color:#7DCFFF">customElements</span><span style="color:var(--shiki-punctuation)">.</span><span style="color:#7AA2F7">define</span><span style="color:#9ABDF5">(</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">my-element</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">, </span><span style="color:#C0CAF5">MyElement</span><span style="color:#9ABDF5">)</span><span style="color:var(--shiki-punctuation)">;</span></span></code></pre>`),n(p),D(2),f(h,r)},$$slots:{default:!0}}))}export{L as component};
