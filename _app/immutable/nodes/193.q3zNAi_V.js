import"../chunks/DsnmJJEf.js";import"../chunks/Bges_rYf.js";import{f as H,s as a,a as F,d as s,b as A,r as t}from"../chunks/C5Lvf5QI.js";import{h as e}from"../chunks/_YmywIHu.js";import{l as _,s as T}from"../chunks/nxaLWeL6.js";import{L}from"../chunks/BrdoAd09.js";import"../chunks/C-OQaP0T.js";const u={title:"Tailwind CSS without Node",desc:"How to use Tailwind CSS without Node.js and NPM",layout:"contentLanding",keywords:"standalone tailwindcss, tailwindcss without node, tailwindcss executable, daisyui without node.js"},{title:O,desc:P,layout:Z,keywords:z}=u;var E=H(`<p>Tailwind CSS runs in many setups. Most guides assume a Node toolchain. That works well for Vite and PostCSS projects. But adding Node just to build CSS can be heavy when your app runs on Rails, Go, Rust, PHP, or another server side environment.</p> <h3 id="common-ways-to-use-tailwind-css"><a href="#common-ways-to-use-tailwind-css" class="no-underline" aria-label="Link to heading"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Common ways to use Tailwind CSS</h3> <ul><li>Vite plugin — a fast dev server experience. It needs Node and Vite config.</li> <li>PostCSS plugin — integrates into many build pipelines; still requires Node tooling.</li> <li>CDN file — great for quick prototypes; it loads prebuilt styles and has limitations for production.</li></ul> <p>Each method has tradeoffs. Vite and PostCSS give full feature parity. They need Node. The CDN needs no build step; it limits customization and content scanning for unused classes.</p> <h3 id="why-adding-node-for-tailwind-can-be-inefficient"><a href="#why-adding-node-for-tailwind-can-be-inefficient" class="no-underline" aria-label="Link to heading"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Why adding Node for Tailwind can be inefficient</h3> <p>If your project already runs on Rails, Go, Rust, or PHP, adding Node just to run Tailwind creates extra complexity. You must install Node on developer machines and CI. You must keep Node deps up to date. That adds maintenance and build steps that are unrelated to your primary stack.</p> <p>For simple sites or server side apps, you want a small, dependable way to produce CSS without introducing a separate toolchain.</p> <h3 id="tailwind-css-standalone-executable"><a href="#tailwind-css-standalone-executable" class="no-underline" aria-label="Link to heading"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Tailwind CSS standalone executable</h3> <p>Tailwind provides a single-file standalone CLI. It runs without Node. You download the executable for your OS and run it to process CSS. It does the same content scanning and plugin support as the Node version.</p> <ol><li>Get the executable. Follow Tailwind's guide or run one of these commands for your OS.</li></ol> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">Terminal</div><!></div> <p>Make it executable on Linux and macOS:</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">Terminal</div><!></div> <ol start="2"><li>Create an input CSS file with Tailwind directives. Address your HTML and templates in the <code>--content</code> or <code>--scan</code> option when building.</li></ol> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">input.css</div><!></div> <ol start="3"><li>Build the CSS. Use <code>--watch</code> during development and omit it for CI.</li></ol> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">Terminal</div><!></div> <h3 id="use-daisyui-with-the-standalone-cli"><a href="#use-daisyui-with-the-standalone-cli" class="no-underline" aria-label="Link to heading"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Use daisyUI with the standalone CLI</h3> <p>daisyUI ships a small ESM bundle you can use with the standalone CLI. Download the bundle and add it as a plugin in your <code>input.css</code> file.</p> <ol><li>Download daisyUI bundle files next to the Tailwind executable:</li></ol> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">Terminal</div><!></div> <ol start="2"><li>Update <code>input.css</code> to load Tailwind and daisyUI as plugins.</li></ol> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">input.css</div><!></div> <ol start="3"><li>Build as shown earlier. The output CSS will include daisyUI utilities and components.</li></ol> <h3 id="update"><a href="#update" class="no-underline" aria-label="Link to heading"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Update:</h3> <p>daisyUI now has a fast way to automate the setup of Tailwind CSS standalone with daisyUI for various environments. It's a shell script that installs everything you need in one step.</p> <p>The command below,</p> <ul><li>Downloads latest version of Tailwind CSS Standalone executable file for your OS, <a href="https://github.com/tailwindlabs/tailwindcss/releases/latest" rel="nofollow" target="_blank">from GitHub</a></li> <li>Downloads latest version of daisyUI bundle file <a href="https://github.com/saadeghi/daisyui/releases/latest" rel="nofollow" target="_blank">from GitHub</a></li> <li>Creates <code>input.css</code> file with Tailwind CSS and daisyUI</li> <li>Generates <code>output.css</code> file for the first time</li></ul> <p><strong>Linux</strong> or <strong>MacOS</strong>: (see the <a href="https://raw.githubusercontent.com/saadeghi/daisyui/refs/heads/master/packages/docs/static/fast" rel="nofollow" target="_blank">install script</a>)</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">Terminal</div><!></div> <p><strong>Windows</strong>: (see the <a href="https://raw.githubusercontent.com/saadeghi/daisyui/refs/heads/master/packages/docs/static/fast.ps1" rel="nofollow" target="_blank">install script</a>)</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">PowerShell</div><!></div>`,1);function G(v,m){const y=_(m,["children","$$slots","$$events","$$legacy"]);L(v,T(()=>y,()=>u,{children:(w,I)=>{var d=E(),i=a(F(d),20),g=a(s(i));e(g,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-comment);font-style:italic"># Run the corresponding command for your OS</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic"># Linux</span></span>
<span class="line"><span style="color:#C0CAF5">curl</span><span style="color:#E0AF68"> -sLo</span><span style="color:var(--shiki-attr-value)"> tailwindcss</span><span style="color:var(--shiki-attr-value)"> https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-linux-arm64</span></span>
<span class="line"><span style="color:#C0CAF5">curl</span><span style="color:#E0AF68"> -sLo</span><span style="color:var(--shiki-attr-value)"> tailwindcss</span><span style="color:var(--shiki-attr-value)"> https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-linux-arm64-musl</span></span>
<span class="line"><span style="color:#C0CAF5">curl</span><span style="color:#E0AF68"> -sLo</span><span style="color:var(--shiki-attr-value)"> tailwindcss</span><span style="color:var(--shiki-attr-value)"> https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-linux-x64</span></span>
<span class="line"><span style="color:#C0CAF5">curl</span><span style="color:#E0AF68"> -sLo</span><span style="color:var(--shiki-attr-value)"> tailwindcss</span><span style="color:var(--shiki-attr-value)"> https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-linux-x64-musl</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic"># MacOS</span></span>
<span class="line"><span style="color:#C0CAF5">curl</span><span style="color:#E0AF68"> -sLo</span><span style="color:var(--shiki-attr-value)"> tailwindcss</span><span style="color:var(--shiki-attr-value)"> https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-macos-arm64</span></span>
<span class="line"><span style="color:#C0CAF5">curl</span><span style="color:#E0AF68"> -sLo</span><span style="color:var(--shiki-attr-value)"> tailwindcss</span><span style="color:var(--shiki-attr-value)"> https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-macos-x64</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic"># Windows</span></span>
<span class="line"><span style="color:#C0CAF5">curl</span><span style="color:#E0AF68"> -sLo</span><span style="color:var(--shiki-attr-value)"> tailwindcss.exe</span><span style="color:var(--shiki-attr-value)"> https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-windows-x64.exe</span></span></code></pre>`),t(i);var n=a(i,4),b=a(s(n));e(b,()=>'<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#C0CAF5">chmod</span><span style="color:var(--shiki-attr-value)"> +x</span><span style="color:var(--shiki-attr-value)"> tailwindcss</span></span></code></pre>'),t(n);var o=a(n,4),k=a(s(o));e(k,()=>'<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-attr-name)">@import </span><span style="color:var(--shiki-attr-value)">"tailwindcss"</span><span style="color:var(--shiki-punctuation)">;</span></span></code></pre>'),t(o);var l=a(o,4),f=a(s(l));e(f,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#C0CAF5">./tailwindcss</span><span style="color:#E0AF68"> -i</span><span style="color:var(--shiki-attr-value)"> input.css</span><span style="color:#E0AF68"> -o</span><span style="color:var(--shiki-attr-value)"> output.css</span><span style="color:#E0AF68"> --watch</span></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic"># Windows</span></span>
<span class="line"><span style="color:#C0CAF5">tailwindcss.exe</span><span style="color:#E0AF68"> -i</span><span style="color:var(--shiki-attr-value)"> input.css</span><span style="color:#E0AF68"> -o</span><span style="color:var(--shiki-attr-value)"> output.css</span><span style="color:#E0AF68"> --watch</span></span></code></pre>`),t(l);var r=a(l,8),x=a(s(r));e(x,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#C0CAF5">curl</span><span style="color:#E0AF68"> -sLO</span><span style="color:var(--shiki-attr-value)"> https://github.com/saadeghi/daisyui/releases/latest/download/daisyui.mjs</span></span>
<span class="line"><span style="color:#C0CAF5">curl</span><span style="color:#E0AF68"> -sLO</span><span style="color:var(--shiki-attr-value)"> https://github.com/saadeghi/daisyui/releases/latest/download/daisyui-theme.mjs</span></span></code></pre>`),t(r);var c=a(r,4),C=a(s(c));e(C,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-attr-name)">@import </span><span style="color:var(--shiki-attr-value)">"tailwindcss"</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-attr-name)">@source not </span><span style="color:var(--shiki-attr-value)">"./tailwindcss"</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:var(--shiki-attr-name)">@source not </span><span style="color:var(--shiki-attr-value)">"./daisyui&#123;,*&#125;.mjs"</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-attr-name)">@plugin </span><span style="color:var(--shiki-attr-value)">"./daisyui.mjs"</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">/* Optional: load custom theme bundle */</span></span>
<span class="line"><span style="color:var(--shiki-attr-name)">@plugin </span><span style="color:var(--shiki-attr-value)">"./daisyui-theme.mjs"</span><span style="color:var(--shiki-punctuation)"> &#123;</span></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">  /* custom theme settings */</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#125;</span></span></code></pre>`),t(c);var p=a(c,14),S=a(s(p));e(S,()=>'<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#0DB9D7">cd</span><span style="color:var(--shiki-attr-value)"> myapp/static/css</span><span style="color:var(--shiki-punctuation)"> &#x26;&#x26; </span><span style="color:#C0CAF5">curl</span><span style="color:#E0AF68"> -sL</span><span style="color:var(--shiki-attr-value)"> daisyui.com/fast</span><span style="color:var(--shiki-punctuation)"> | </span><span style="color:#C0CAF5">bash</span></span></code></pre>'),t(p);var h=a(p,4),V=a(s(h));e(V,()=>'<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#0DB9D7">cd</span><span style="color:var(--shiki-attr-value)"> myapp/static/css</span><span style="color:var(--shiki-punctuation)"> &#x26;&#x26; </span><span style="color:#C0CAF5">powershell</span><span style="color:#E0AF68"> -c</span><span style="color:var(--shiki-punctuation)"> "</span><span style="color:var(--shiki-attr-value)">irm daisyui.com/fast.ps1 | iex</span><span style="color:var(--shiki-punctuation)">"</span></span></code></pre>'),t(h),A(w,d)},$$slots:{default:!0}}))}export{G as component};
