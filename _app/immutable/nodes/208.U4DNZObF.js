import"../chunks/DsnmJJEf.js";import"../chunks/BJSFKXgS.js";import{f as Ht,a as kt,d as e,s as a,b as zt,r as t}from"../chunks/rBt4--9u.js";import{l as Ct,s as Ut}from"../chunks/BybNoomo.js";import{L as It}from"../chunks/DMHlhQJ2.js";import{T as o}from"../chunks/BsKyhxVZ.js";const ze={title:"Abstraction ownership",desc:"“With code ownership, comes great maintenance cost” - Uncle Ben probably.",published:!0,date:"2025-09-28T00:00:00.000Z",author:"Pouya Saadeghi",thumbnail:"https://img.daisyui.com/images/blog/atlas-carrying-the-world.webp",tags:["Insights"]},{title:qt,desc:Ft,published:jt,date:Et,author:Lt,thumbnail:At,tags:Ot}=ze;var Tt=Ht('<p><!></p> <blockquote class="alert not-italic items-start text-xs leading-loose *:m-0!"><p><!><br/><!><br/><!></p></blockquote> <h2 id="code-ownership-gives-you-maximum-customizability"><a href="#code-ownership-gives-you-maximum-customizability" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a><span data-heading-text="Code ownership gives you maximum customizability"><!></span></h2> <p><!></p> <p><!></p> <h2 id="cost-of-ownership-is-maintenance"><a href="#cost-of-ownership-is-maintenance" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a><span data-heading-text="Cost of ownership is maintenance"><!></span></h2> <p><!></p> <p><!></p> <table><thead><tr><th><!></th><th><!></th><th><!></th></tr></thead><tbody><tr><td><!></td><td><!></td><td><!></td></tr><tr><td><!></td><td><!></td><td><!></td></tr><tr><td><!></td><td><!></td><td><!></td></tr><tr><td><!></td><td><!></td><td><!></td></tr><tr><td><!></td><td><!></td><td><!></td></tr><tr><td><!></td><td><!></td><td><!></td></tr><tr><td><!></td><td><!></td><td><!></td></tr><tr><td><!></td><td><!></td><td><!></td></tr></tbody></table> <h2 id="the-real-cost-of-software-is-maintenance"><a href="#the-real-cost-of-software-is-maintenance" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a><span data-heading-text="The real cost of software is maintenance"><!></span></h2> <p><!></p> <blockquote class="alert not-italic items-start text-xs leading-loose *:m-0!"><p><!></p></blockquote> <h2 id="why-keeping-ui-components-in-your-codebase-fails-in-the-long-run"><a href="#why-keeping-ui-components-in-your-codebase-fails-in-the-long-run" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a><span data-heading-text="Why keeping UI components in your codebase fails in the long run"><!></span></h2> <p><!></p> <p><!><br/><!><br/><!><br/><!></p> <h2 id="using-a-customizable-ui-library-is-a-better-investment"><a href="#using-a-customizable-ui-library-is-a-better-investment" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a><span data-heading-text="Using a customizable UI library is a better investment"><!></span></h2> <p><!></p> <h2 id="what-do-you-want-to-spend-time-on"><a href="#what-do-you-want-to-spend-time-on" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a><span data-heading-text="What do you want to spend time on?"><!></span></h2> <ul><li><p><!></p></li> <li><p><!></p></li></ul> <p><!></p>',1);function Dt(Ce,Ue){const Ie=Ct(Ue,["children","$$slots","$$events","$$legacy"]);It(Ce,Ut(()=>Ie,()=>ze,{children:(Te,Zt)=>{var K=Tt(),n=kt(K),Ze=e(n);o(Ze,{text:`Every serious project needs an abstraction for the visual UI. Whether you build your own UI components or use a library, you're creating a layer between your app and the low level CSS styles, to make it easier to maintain. Even if you're "just writing CSS", you're still creating an abstraction when you name your classes and structure your styles into a consistent format.  `}),t(n);var r=a(n,2),Q=e(r),R=e(Q);o(R,{text:"The question is:"});var X=a(R,2);o(X,{text:"Should you own this abstraction in your codebase, or should you use an already maintained one?"});var Me=a(X,2);o(Me,{text:"Lets review the trade-offs and long-term impact of each choice."}),t(Q),t(r);var s=a(r,2),ee=a(e(s)),$e=e(ee);o($e,{text:"Code ownership gives you maximum customizability"}),t(ee),t(s);var i=a(s,2),Be=e(i);o(Be,{text:"Owning the code means you can change anything. You can tweak every detail. 100% control. This level of control is tempting, especially if you have obsessive design requirements. Example of this would be having the source code of all UI components in your own code base."}),t(i);var d=a(i,2),Se=e(d);o(Se,{text:"What's the catch?"}),t(d);var l=a(d,2),te=a(e(l)),We=e(te);o(We,{text:"Cost of ownership is maintenance"}),t(te),t(l);var h=a(l,2),Ye=e(h);o(Ye,{text:"Control comes with a cost: maintenance. Every bug, update, and new feature is now your job. The more you customize, the more you have to maintain. Over time, it will get harder and harder to maintain. "}),t(h);var v=a(h,2),qe=e(v);o(qe,{text:`There will be bugs and issues, and they won't get fixed unless you track them and resolve them manually. The tools and libraries you depend on will evolve and your code won't, unless you actively update it. This leads to technical debt and frustration. Alternatively, you should hire more people just to maintain the exisiting <a href="/pages/ui-library-for-hackaton/">UI library</a> which is direct financial cost.`}),t(v);var c=a(v,2),u=e(c),ae=e(u),m=e(ae),Fe=e(m);o(Fe,{text:"Aspect"}),t(m);var p=a(m),je=e(p);o(je,{text:"Owning the Code"}),t(p);var oe=a(p),Ee=e(oe);o(Ee,{text:"Using libraries"}),t(oe),t(ae),t(u);var ne=a(u),g=e(ne),b=e(g),Le=e(b);o(Le,{text:"Customization"}),t(b);var y=a(b),Ae=e(y);o(Ae,{text:"✅ Full control"}),t(y);var re=a(y),Oe=e(re);o(Oe,{text:"✅ Customization based on a design system"}),t(re),t(g);var w=a(g),_=e(w),De=e(_);o(De,{text:"Maintenance"}),t(_);var x=a(_),Pe=e(x);o(Pe,{text:"❌ You maintain everything"}),t(x);var se=a(x),Ne=e(se);o(Ne,{text:"✅ Maintained for you"}),t(se),t(w);var f=a(w),V=e(f),Ge=e(V);o(Ge,{text:"Updates"}),t(V);var H=a(V),Je=e(H);o(Je,{text:"❌ Manual or none"}),t(H);var ie=a(H),Ke=e(ie);o(Ke,{text:"✅ Updates are automatic"}),t(ie),t(f);var k=a(f),z=e(k),Qe=e(z);o(Qe,{text:"Bugfixes"}),t(z);var C=a(z),Re=e(C);o(Re,{text:"❌ You fix bugs"}),t(C);var de=a(C),Xe=e(de);o(Xe,{text:"✅ Bugfixes included"}),t(de),t(k);var U=a(k),I=e(U),et=e(I);o(et,{text:"Documentation"}),t(I);var T=a(I),tt=e(T);o(tt,{text:"❌ You write docs"}),t(T);var le=a(T),at=e(le);o(at,{text:"✅ Docs are provided"}),t(le),t(U);var Z=a(U),M=e(Z),ot=e(M);o(ot,{text:"Community support"}),t(M);var $=a(M),nt=e($);o(nt,{text:"❌ You are on your own"}),t($);var he=a($),rt=e(he);o(rt,{text:"✅ Community support"}),t(he),t(Z);var B=a(Z),S=e(B),st=e(S);o(st,{text:"Testing"}),t(S);var W=a(S),it=e(W);o(it,{text:"❌ You test it yourself"}),t(W);var ve=a(W),dt=e(ve);o(dt,{text:"✅ Maintainers do the testing"}),t(ve),t(B);var ce=a(B),Y=e(ce),lt=e(Y);o(lt,{text:"Learning curve"}),t(Y);var q=a(Y),ht=e(q);o(ht,{text:"❌ Must know all details"}),t(q);var ue=a(q),vt=e(ue);o(vt,{text:"✅ Focus on usage"}),t(ue),t(ce),t(ne),t(c);var F=a(c,2),me=a(e(F)),ct=e(me);o(ct,{text:"The real cost of software is maintenance"}),t(me),t(F);var j=a(F,2),ut=e(j);o(ut,{text:"Building software is exciting. Shipping new features feels great. But the real cost isn't in creating something new, it's in keeping it running in the long term. Maintenance is where most of the time and money goes."}),t(j);var E=a(j,2),pe=e(E),mt=e(pe);o(mt,{text:"Every line of code you own, is a line you have to maintain, test, fix, and update."}),t(pe),t(E);var L=a(E,2),ge=a(e(L)),pt=e(ge);o(pt,{text:"Why keeping UI components in your codebase fails in the long run"}),t(ge),t(L);var A=a(L,2),gt=e(A);o(gt,{text:"When you keep UI components in your own codebase, maintenance costs grow slowly at first. As your project grows, so does the burden. Eventually, the code becomes stale and outdated. No one wants to touch it. Updates and bugfixes feel risky. Unless you hire more people just for maintenance, the problem only gets worse."}),t(A);var O=a(A,2),be=e(O);o(be,{text:"This is going to happen to every project that uses Shadcn/ui CLI for example."});var ye=a(be,2);o(ye,{text:"Shadcn/ui is a fantastic CLI for generating components into your own code base, however if the source code lives in your own codebase, you are now responsible for maintaining it."});var we=a(ye,2);o(we,{text:"I doubt many people who are using it actually realize the long term cost of this decision."});var bt=a(we,2);o(bt,{text:"There's a reason the software industry has moved away from owning everything in-house, towards using libraries and services that are maintained by the community."}),t(O);var D=a(O,2),_e=a(e(D)),yt=e(_e);o(yt,{text:"Using a customizable UI library is a better investment"}),t(_e),t(D);var P=a(D,2),wt=e(P);o(wt,{text:"There's a better way. Use a UI library that allows customization. You get the flexibility to change things based on a design system, but you don't have to worry about the infrastructure. Someone else maintains the components, handles updates, and fixes bugs. You get to focus on building your product, not maintaining the foundation. In the long run, this is a smarter investment for your team."}),t(P);var N=a(P,2),xe=a(e(N)),_t=e(xe);o(_t,{text:"What do you want to spend time on?"}),t(xe),t(N);var G=a(N,2),J=e(G),fe=e(J),xt=e(fe);o(xt,{text:"You can own every line of every UI component in your own code base and maintain it yourself.  "}),t(fe),t(J);var Ve=a(J,2),He=e(Ve),ft=e(He);o(ft,{text:"Or you can use a package that provides the components for you, and focus on your own product instead."}),t(He),t(Ve),t(G);var ke=a(G,2),Vt=e(ke);o(Vt,{text:"What do you want to spend your time and energy on?"}),t(ke),zt(Te,K)},$$slots:{default:!0}}))}export{Dt as component};
