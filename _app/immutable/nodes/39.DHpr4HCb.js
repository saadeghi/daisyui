import"../chunks/DsnmJJEf.js";import"../chunks/BJSFKXgS.js";import{f as z,s as a,a as M,b as T,d as s,r as n,n as j}from"../chunks/rBt4--9u.js";import{h as t}from"../chunks/DxUf3ls0.js";import{l as L,s as Z}from"../chunks/BybNoomo.js";import{L as R}from"../chunks/CD7HBODr.js";import"../chunks/B1Uw_YEL.js";const g={title:"Scalable Component Library",desc:"Why heavy JavaScript component libraries fail at scale and how CSS-only solutions provide better performance, maintainability, and framework flexibility for large projects",layout:"contentLanding",keywords:"scalable component library, large scale projects, css-only components, framework agnostic ui, performance optimization, minimal dependencies"},{title:Q,desc:K,layout:aa,keywords:sa}=g;var q=z(`<p>Building large-scale applications presents unique challenges that most component libraries aren't designed to handle. What works for small projects often becomes a liability when you're managing dozens of pages, multiple teams, and diverse technology stacks. Let's explore why heavy JavaScript libraries crumble under scale and how embracing simplicity creates sustainable solutions.</p> <h2 id="the-scale-problem-with-javascript-component-libraries"><a href="#the-scale-problem-with-javascript-component-libraries" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>The scale problem with JavaScript component libraries</h2> <p>Small projects hide the problems that surface when applications grow. Modern JavaScript component libraries like Radix UI and React Aria promise better developer experience, but they introduce significant overhead when building at scale. Each <a href="/pages/css-library-for-html/" title="CSS Library for HTML">component library</a> brings massive dependencies and complexity that compounds as your application grows.</p> <p>Even minimal libraries like Radix UI require substantial JavaScript bundles. React Aria components need complex state management, focus handling, and accessibility implementations that add layers of abstraction. When you're building enterprise applications with hundreds of components and multiple teams, these abstractions become liabilities rather than benefits.</p> <p>The dependency chains run deep. Modern libraries create intricate webs of packages, each introducing potential security vulnerabilities, version conflicts, and maintenance overhead. A single broken dependency can break your entire application, and keeping everything updated becomes a full-time job.</p> <p>JavaScript component libraries also create framework lock-in that becomes problematic at scale. Large applications often need different technologies for different purposes - React for complex dashboards, Vue for customer-facing interfaces, vanilla JavaScript for landing pages. When your component library only works with one framework, you're forced to make suboptimal technology choices or maintain multiple design systems.</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>This framework dependency creates problems when you need technology diversity. Enterprise applications often require different frameworks for different parts - React for admin dashboards, Vue for customer portals, vanilla JavaScript for landing pages. When your component library only works with one framework, you're forced into suboptimal architectural decisions or maintaining multiple design systems.</p> <p>Modern JavaScript component libraries also add significant build complexity. Even with tools like Vite and Turbopack, the processing required for JavaScript components, CSS-in-JS systems, and complex dependency resolution creates friction in development workflows. Build tools need to understand framework-specific patterns, handle dynamic imports, and process styling systems that change at runtime.</p> <p>The runtime overhead compounds these problems. Every component render involves virtual DOM diffing, JavaScript execution, style injection, and event handler binding. Complex component trees accumulate memory over time, and JavaScript-driven animations struggle to maintain smooth performance across different devices and browsers.</p> <p>Security becomes a major concern with large dependency trees. Every package in your component library's dependency chain represents a potential attack vector. Security audits frequently reveal vulnerabilities that require immediate attention, and keeping everything patched becomes an ongoing maintenance burden that scales with your dependency count.</p> <h2 id="why-the-platform-is-the-answer"><a href="#why-the-platform-is-the-answer" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Why the platform is the answer</h2> <p>Modern web standards have evolved to handle most UI needs without heavy JavaScript libraries. CSS has become incredibly powerful, with features that eliminate the need for JavaScript in many cases:</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>These features handle most common UI patterns without requiring JavaScript execution.</p> <p>Semantic HTML elements provide built-in accessibility and functionality that works perfectly across browsers, screen readers, and mobile devices. Native form validation, disclosure widgets, and date pickers require no JavaScript while providing better user experiences than custom implementations.</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>Platform-native solutions deliver better performance through zero JavaScript execution cost, aggressive CSS caching, and smaller bundle sizes. Browsers parse CSS faster than JavaScript and compress it more efficiently, leading to faster page loads and smoother interactions.</p> <h2 id="the-framework-agnostic-imperative"><a href="#the-framework-agnostic-imperative" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>The framework-agnostic imperative</h2> <p>Large-scale applications rarely use a single technology stack. Framework agnosticism becomes crucial when you're building complex systems that need different technologies for different purposes. Real enterprise applications typically involve:</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>Each part might use different frameworks based on team expertise, performance requirements, third-party integrations, and legacy constraints. Framework-agnostic styling ensures consistency across this technology diversity. The same CSS classes work everywhere, ensuring visual consistency across your entire ecosystem:</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>Framework-agnostic tools also reduce hiring constraints and increase team flexibility. You can hire the best developers regardless of framework expertise, and developers can move between projects easily since core UI knowledge applies everywhere. Technology stacks evolve over time, and framework-agnostic CSS classes survive these migrations:</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>Framework-agnostic CSS classes survive technology migrations, protecting your design system investment.</p> <h2 id="how-daisyui-solves-scale-problems"><a href="#how-daisyui-solves-scale-problems" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>How daisyUI solves scale problems</h2> <p>daisyUI addresses every major scaling challenge while maintaining developer productivity. The entire library adds minimal dependencies to your project - just daisyUI and Tailwind CSS. No deep dependency trees, no security vulnerabilities from dozens of packages, no version conflicts. Your <code>node_modules</code> stays small and your security risks will be zero because neither Tailwind CSS nor daisyUI have any dependencies!</p> <p>Every component is pure CSS, working perfectly with keyboard navigation, screen readers, and touch devices without any JavaScript:</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>The same markup works in any environment, providing universal framework compatibility:</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>Your component knowledge transfers completely between frameworks and projects. daisyUI delivers superior performance through zero runtime JavaScript, optimal CSS caching, and smaller bundle sizes. Performance benefits compound as your application grows with faster page loads, smoother interactions, and better mobile experiences.</p> <p>daisyUI provides a complete design system with consistent spacing, colors, and typography. Professional-looking interfaces work out of the box, with themes that can instantly change your entire site's appearance. When you need custom styling, daisyUI doesn't get in the way:</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>You get the full power of Tailwind CSS for customization while keeping the semantic foundation.</p> <h2 id="real-world-scale-benefits"><a href="#real-world-scale-benefits" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Real-world scale benefits</h2> <p>Organizations using daisyUI report significant improvements across development velocity, maintenance overhead, and team flexibility. Teams build interfaces faster because there's no framework learning curve - standard HTML and CSS knowledge applies directly. Semantic class names reduce decision fatigue, and <a href="/pages/ui-library-for-hackaton/" title="UI library for hackaton">rapid prototyping</a> becomes possible without wrestling with complex component APIs.</p> <p>Long-term maintenance becomes manageable since CSS doesn't have breaking changes like JavaScript libraries. Design changes apply everywhere automatically, and <a href="/pages/best-component-library-for-2026/" title="Component Library for 2026">CSS-only components</a> have fewer failure modes to test. New developers contribute immediately without needing framework-specific training.</p> <p>Performance improvements come from smaller bundle sizes and better Core Web Vitals scores. Teams gain flexibility since any developer can contribute to UI work, developers move between projects easily, and framework choices don't constrain UI decisions. Design systems survive technology migrations, protecting long-term investments.</p> <h2 id="making-the-transition-at-scale"><a href="#making-the-transition-at-scale" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Making the transition at scale</h2> <p>Migrating large applications requires strategy. Start with new features and components, letting existing code continue working while new development gets the benefits immediately. Create migration guidelines that help teams gradually replace components consistently. Track improvements in bundle size, performance metrics, and development velocity to justify the migration effort and guide prioritization.</p> <p>Plan for coexistence during the transition period:</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>This prevents conflicts during the transition period.</p> <h2 id="the-scalability-advantage"><a href="#the-scalability-advantage" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>The scalability advantage</h2> <p>daisyUI provides sustainable scaling advantages through linear complexity growth. Unlike JavaScript libraries that create exponential complexity, adding components doesn't degrade performance, CSS compilation stays fast regardless of project size, and building the 100th component feels like building the first.</p> <p>CSS-based solutions outlast framework trends because they're built on web standards that evolve slowly and carefully. Framework independence means survival through technology migrations and team changes, with no risk of library abandonment or breaking changes.</p> <p>Large organizations need reliable, stable solutions. daisyUI provides security compliance through minimal dependencies, predictable behavior under load, integration flexibility with any technology stack, and stable long-term maintenance costs.</p> <h2 id="ready-to-scale-the-right-way"><a href="#ready-to-scale-the-right-way" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Ready to scale the right way?</h2> <p>Large-scale applications demand different approaches than small projects. Heavy JavaScript component libraries create more problems than they solve when you're building for scale.</p> <p>daisyUI offers a better path: CSS-only components that perform well, integrate everywhere, and maintain consistently across your entire technology ecosystem.</p> <p>Whether you're building a multi-team enterprise application or planning for long-term growth, daisyUI provides the foundation for sustainable scaling.</p> <p><a href="/docs/install/">Start building scalable UIs with daisyUI</a> and experience what component libraries should be: simple, fast, and built to last.</p> <p>Stop fighting framework complexity and start building for the long term.</p>`,1);function na(b,f){const x=L(f,["children","$$slots","$$events","$$legacy"]);R(b,Z(()=>x,()=>g,{children:(w,N)=>{var d=q(),o=a(M(d),12),F=s(o);t(F,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-comment);font-style:italic">// Radix UI components only work in React</span></span>
<span class="line"><span style="color:#7DCFFF">import</span><span style="color:#9ABDF5"> &#123; </span><span style="color:#0DB9D7">Button</span><span style="color:#9ABDF5"> &#125;</span><span style="color:#7DCFFF"> from</span><span style="color:var(--shiki-punctuation)"> '</span><span style="color:var(--shiki-attr-value)">@radix-ui/themes</span><span style="color:var(--shiki-punctuation)">'</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#7DCFFF">import</span><span style="color:#9ABDF5"> &#123; </span><span style="color:#0DB9D7">Card</span><span style="color:#9ABDF5"> &#125;</span><span style="color:#7DCFFF"> from</span><span style="color:var(--shiki-punctuation)"> '</span><span style="color:var(--shiki-attr-value)">@radix-ui/themes</span><span style="color:var(--shiki-punctuation)">'</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#7DCFFF">import</span><span style="color:#9ABDF5"> &#123; </span><span style="color:#0DB9D7">TextField</span><span style="color:#9ABDF5"> &#125;</span><span style="color:#7DCFFF"> from</span><span style="color:var(--shiki-punctuation)"> '</span><span style="color:var(--shiki-attr-value)">@radix-ui/themes</span><span style="color:var(--shiki-punctuation)">'</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-attr-name)">function</span><span style="color:#7AA2F7"> UserForm</span><span style="color:#9ABDF5">()</span><span style="color:#9ABDF5"> &#123;</span></span>
<span class="line"><span style="color:var(--shiki-attr-name);font-style:italic">  return</span><span style="color:#9ABDF5"> (</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;</span><span style="color:#DE5971">Card</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">      &#x3C;</span><span style="color:#DE5971">TextField </span><span style="color:var(--shiki-attr-name)">placeholder</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">Email</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)"> /></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">      &#x3C;</span><span style="color:#DE5971">Button</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Submit</span><span style="color:var(--shiki-punctuation)">&#x3C;/</span><span style="color:#DE5971">Button</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;/</span><span style="color:#DE5971">Card</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:#9ABDF5">  )</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#9ABDF5">&#125;</span></span></code></pre>`),n(o);var i=a(o,14),C=s(i);t(C,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-comment);font-style:italic">/* Complex layouts without JavaScript */</span></span>
<span class="line"><span style="color:#E0AF68">.</span><span style="color:var(--shiki-attr-value)">responsive-grid</span><span style="color:#9ABDF5"> &#123;</span></span>
<span class="line"><span style="color:#7AA2F7">  display</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:#FF9E64"> grid</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#7AA2F7">  grid-template-columns</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:#0DB9D7"> repeat</span><span style="color:#9ABDF5">(</span><span style="color:#FF9E64">auto-fit</span><span style="color:var(--shiki-punctuation)">,</span><span style="color:#0DB9D7"> minmax</span><span style="color:#9ABDF5">(</span><span style="color:#FF9E64">250</span><span style="color:var(--shiki-punctuation)">px,</span><span style="color:#FF9E64"> 1</span><span style="color:var(--shiki-punctuation)">fr</span><span style="color:#9ABDF5">))</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#7AA2F7">  gap</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:#FF9E64"> 1</span><span style="color:var(--shiki-punctuation)">rem;</span></span>
<span class="line"><span style="color:#9ABDF5">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">/* Interactive states without JavaScript */</span></span>
<span class="line"><span style="color:#E0AF68">.</span><span style="color:var(--shiki-attr-value)">dropdown</span><span style="color:#E0AF68">:</span><span style="color:var(--shiki-attr-name)">focus-within</span><span style="color:#E0AF68"> .</span><span style="color:var(--shiki-attr-value)">dropdown-content</span><span style="color:#9ABDF5"> &#123;</span></span>
<span class="line"><span style="color:#7AA2F7">  opacity</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:#FF9E64"> 1</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#7AA2F7">  visibility</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:#FF9E64"> visible</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#7AA2F7">  transform</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:#0DB9D7"> translateY</span><span style="color:#9ABDF5">(</span><span style="color:#FF9E64">0</span><span style="color:#9ABDF5">)</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#9ABDF5">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">/* Smooth animations without JavaScript */</span></span>
<span class="line"><span style="color:var(--shiki-attr-name)">@keyframes</span><span style="color:#E0AF68"> slideIn</span><span style="color:#9ABDF5"> &#123;</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  from </span><span style="color:#9ABDF5">&#123;</span></span>
<span class="line"><span style="color:#7AA2F7">    opacity</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:#FF9E64"> 0</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#7AA2F7">    transform</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:#0DB9D7"> translateX</span><span style="color:#9ABDF5">(</span><span style="color:#FF9E64">-100</span><span style="color:var(--shiki-punctuation)">%</span><span style="color:#9ABDF5">)</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#9ABDF5">  &#125;</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  to </span><span style="color:#9ABDF5">&#123;</span></span>
<span class="line"><span style="color:#7AA2F7">    opacity</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:#FF9E64"> 1</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#7AA2F7">    transform</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:#0DB9D7"> translateX</span><span style="color:#9ABDF5">(</span><span style="color:#FF9E64">0</span><span style="color:#9ABDF5">)</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#9ABDF5">  &#125;</span></span>
<span class="line"><span style="color:#9ABDF5">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">/* Dark mode without JavaScript */</span></span>
<span class="line"><span style="color:var(--shiki-attr-name)">@media</span><span style="color:#9ABDF5"> (</span><span style="color:var(--shiki-punctuation)">prefers-color-scheme: dark</span><span style="color:#9ABDF5">)</span><span style="color:#9ABDF5"> &#123;</span></span>
<span class="line"><span style="color:#E0AF68">  :</span><span style="color:var(--shiki-attr-name)">root</span><span style="color:#9ABDF5"> &#123;</span></span>
<span class="line"><span style="color:#C0CAF5">    --bg-color</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:var(--shiki-token)"> #1a1a1a</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#C0CAF5">    --text-color</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:var(--shiki-token)"> #ffffff</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#9ABDF5">  &#125;</span></span>
<span class="line"><span style="color:#9ABDF5">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">/* Container queries for responsive components */</span></span>
<span class="line"><span style="color:var(--shiki-attr-name)">@container</span><span style="color:var(--shiki-punctuation)"> (min-width: 400px) </span><span style="color:#9ABDF5">&#123;</span></span>
<span class="line"><span style="color:#E0AF68">  .</span><span style="color:var(--shiki-attr-value)">card</span><span style="color:#9ABDF5"> &#123;</span></span>
<span class="line"><span style="color:#7AA2F7">    display</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:#FF9E64"> flex</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#7AA2F7">    flex-direction</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:#FF9E64"> row</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#9ABDF5">  &#125;</span></span>
<span class="line"><span style="color:#9ABDF5">&#125;</span></span></code></pre>`),n(i);var e=a(i,6),A=s(e);t(A,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-comment);font-style:italic">&#x3C;!-- Native form validation --></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;form></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;input</span><span style="color:var(--shiki-attr-name)"> type</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">email</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> required</span><span style="color:var(--shiki-attr-name)"> aria-label</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">Email address</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;input</span><span style="color:var(--shiki-attr-name)"> type</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">password</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> minlength</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">8</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> required</span><span style="color:var(--shiki-attr-name)"> aria-label</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">Password</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;button</span><span style="color:var(--shiki-attr-name)"> type</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">submit</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Sign In</span><span style="color:var(--shiki-punctuation)">&#x3C;/button></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;/form></span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">&#x3C;!-- Native disclosure widget --></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;details></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;summary></span><span style="color:var(--shiki-token)">Show advanced options</span><span style="color:var(--shiki-punctuation)">&#x3C;/summary></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;div></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;label></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">      &#x3C;input</span><span style="color:var(--shiki-attr-name)"> type</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">checkbox</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)"> Enable notifications</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;/label></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;/div></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;/details></span></span></code></pre>`),n(e);var l=a(e,8),D=s(l);t(D,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span>┌─────────────────┐    ┌─────────────────┐     ┌─────────────────┐</span></span>
<span class="line"><span>│   Landing Page  │    │ Admin Dashboard │     │  Mobile App     │</span></span>
<span class="line"><span>│   (Svelte)      │    │ (Rails)         │     │  (Capacitor)    │</span></span>
<span class="line"><span>└─────────────────┘    └─────────────────┘     └─────────────────┘</span></span>
<span class="line"><span>         │                       │                       │</span></span>
<span class="line"><span>         ╰────────────────╮      │      ╭────────────────╯</span></span>
<span class="line"><span>                        Same Design System</span></span>
<span class="line"><span>         ╭────────────────╯      │      ╰────────────────╮</span></span>
<span class="line"><span>         │                       │                       │</span></span>
<span class="line"><span>┌─────────────────┐    ┌─────────────────┐     ┌─────────────────┐</span></span>
<span class="line"><span>│  E-commerce     │    │  Documentation  │     │  Analytics      │</span></span>
<span class="line"><span>│  (Wordpress)    │    │  (Vue)          │     │  (Go)           │</span></span>
<span class="line"><span>└─────────────────┘    └─────────────────┘     └─────────────────┘</span></span></code></pre>`),n(l);var p=a(l,4),S=s(p);t(S,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-comment);font-style:italic">&#x3C;!-- Next.js landing page --></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;button</span><span style="color:var(--shiki-attr-name)"> className</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">btn btn-primary</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Get Started</span><span style="color:var(--shiki-punctuation)">&#x3C;/button></span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">&#x3C;!-- React admin dashboard --></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;button</span><span style="color:var(--shiki-attr-name)"> className</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">btn btn-primary</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Save Changes</span><span style="color:var(--shiki-punctuation)">&#x3C;/button></span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">&#x3C;!-- Vue.js analytics --></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;button</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">btn btn-primary</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Export Data</span><span style="color:var(--shiki-punctuation)">&#x3C;/button></span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">&#x3C;!-- Svelte documentation --></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;button</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">btn btn-primary</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">View Docs</span><span style="color:var(--shiki-punctuation)">&#x3C;/button></span></span></code></pre>`),n(p);var r=a(p,4),B=s(r);t(B,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-comment);font-style:italic">&#x3C;!-- 2020: jQuery --></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;button</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">btn btn-primary</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> onclick</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:#7AA2F7">handleClick</span><span style="color:#9ABDF5">()</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Click Me</span><span style="color:var(--shiki-punctuation)">&#x3C;/button></span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">&#x3C;!-- 2022: React --></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;button</span><span style="color:var(--shiki-attr-name)"> className</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">btn btn-primary</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> onClick</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-attr-value)">&#123;handleClick&#125;</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Click Me</span><span style="color:var(--shiki-punctuation)">&#x3C;/button></span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">&#x3C;!-- 2024: Svelte --></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;button</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">btn btn-primary</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> on:click</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-attr-value)">&#123;handleClick&#125;</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Click Me</span><span style="color:var(--shiki-punctuation)">&#x3C;/button></span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">&#x3C;!-- 2026: Web Components --></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;button</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">btn btn-primary</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> @click</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">handleClick</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Click Me</span><span style="color:var(--shiki-punctuation)">&#x3C;/button></span></span></code></pre>`),n(r);var c=a(r,10),V=s(c);t(V,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-comment);font-style:italic">&#x3C;!-- Interactive dropdown without JavaScript --></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;div</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">dropdown</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;label</span><span style="color:var(--shiki-attr-name)"> tabindex</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">0</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">btn m-1</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Options</span><span style="color:var(--shiki-punctuation)">&#x3C;/label></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;ul</span><span style="color:var(--shiki-attr-name)"> tabindex</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">-1</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">dropdown-content menu bg-base-100 rounded-box w-52 p-2 shadow</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;li>&#x3C;a</span><span style="color:var(--shiki-attr-name)"> href</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">/profile</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Profile</span><span style="color:var(--shiki-punctuation)">&#x3C;/a>&#x3C;/li></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;li>&#x3C;a</span><span style="color:var(--shiki-attr-name)"> href</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">/settings</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Settings</span><span style="color:var(--shiki-punctuation)">&#x3C;/a>&#x3C;/li></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;li>&#x3C;a</span><span style="color:var(--shiki-attr-name)"> href</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">/logout</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Logout</span><span style="color:var(--shiki-punctuation)">&#x3C;/a>&#x3C;/li></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;/ul></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;/div></span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">&#x3C;!-- Modal dialog without JavaScript --></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;input</span><span style="color:var(--shiki-attr-name)"> type</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">checkbox</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> id</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">modal-1</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">modal-toggle</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)"> /></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;div</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">modal</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;div</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">modal-box</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;h3</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">font-bold text-lg</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Confirmation</span><span style="color:var(--shiki-punctuation)">&#x3C;/h3></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;p</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">py-4</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Are you sure you want to proceed?</span><span style="color:var(--shiki-punctuation)">&#x3C;/p></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;div</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">modal-action</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">      &#x3C;label</span><span style="color:var(--shiki-attr-name)"> for</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">modal-1</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">btn</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Cancel</span><span style="color:var(--shiki-punctuation)">&#x3C;/label></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">      &#x3C;label</span><span style="color:var(--shiki-attr-name)"> for</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">modal-1</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">btn btn-primary</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Confirm</span><span style="color:var(--shiki-punctuation)">&#x3C;/label></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;/div></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;/div></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;/div></span></span></code></pre>`),n(c);var u=a(c,4),H=s(u);t(H,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-comment);font-style:italic">&#x3C;!-- Plain HTML --></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;div</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">card w-96 bg-base-100 shadow-xl</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;div</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">card-body</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;h2</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">card-title</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Universal Card</span><span style="color:var(--shiki-punctuation)">&#x3C;/h2></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;p></span><span style="color:var(--shiki-token)">Works everywhere!</span><span style="color:var(--shiki-punctuation)">&#x3C;/p></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;/div></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;/div></span></span></code></pre>`),n(u);var h=a(u,2),E=s(h);t(E,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-comment);font-style:italic">// React</span></span>
<span class="line"><span style="color:var(--shiki-attr-name)">function</span><span style="color:#7AA2F7"> ProductCard</span><span style="color:#9ABDF5">(</span><span style="color:var(--shiki-punctuation)">&#123; </span><span style="color:#E0AF68">title</span><span style="color:var(--shiki-punctuation)">, </span><span style="color:#E0AF68">description</span><span style="color:var(--shiki-punctuation)"> &#125;</span><span style="color:#9ABDF5">)</span><span style="color:#9ABDF5"> &#123;</span></span>
<span class="line"><span style="color:var(--shiki-attr-name);font-style:italic">  return</span><span style="color:#9ABDF5"> (</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;div</span><span style="color:var(--shiki-attr-name)"> className</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">card w-96 bg-base-100 shadow-xl</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">      &#x3C;div</span><span style="color:var(--shiki-attr-name)"> className</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">card-body</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">        &#x3C;h2</span><span style="color:var(--shiki-attr-name)"> className</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">card-title</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:#7DCFFF">&#123;</span><span style="color:#C0CAF5">title</span><span style="color:#7DCFFF">&#125;</span><span style="color:var(--shiki-punctuation)">&#x3C;/h2></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">        &#x3C;p></span><span style="color:#7DCFFF">&#123;</span><span style="color:#C0CAF5">description</span><span style="color:#7DCFFF">&#125;</span><span style="color:var(--shiki-punctuation)">&#x3C;/p></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">      &#x3C;/div></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;/div></span></span>
<span class="line"><span style="color:#9ABDF5">  )</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#9ABDF5">&#125;</span></span></code></pre>`),n(h);var y=a(h,2),_=s(y);t(_,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-comment);font-style:italic">&#x3C;!-- Vue --></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;template></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;div</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">card w-96 bg-base-100 shadow-xl</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;div</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">card-body</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">      &#x3C;h2</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">card-title</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">&#123;&#123; title &#125;&#125;</span><span style="color:var(--shiki-punctuation)">&#x3C;/h2></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">      &#x3C;p></span><span style="color:var(--shiki-token)">&#123;&#123; description &#125;&#125;</span><span style="color:var(--shiki-punctuation)">&#x3C;/p></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;/div></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;/div></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;/template></span></span></code></pre>`),n(y);var v=a(y,2),J=s(v);t(J,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-comment);font-style:italic">&#x3C;!-- Svelte --></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;div</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">card w-96 bg-base-100 shadow-xl</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;div</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">card-body</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;h2</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">card-title</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:#7DCFFF">&#123;</span><span style="color:#C0CAF5">title</span><span style="color:#7DCFFF">&#125;</span><span style="color:var(--shiki-punctuation)">&#x3C;/h2></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;p></span><span style="color:#7DCFFF">&#123;</span><span style="color:#C0CAF5">description</span><span style="color:#7DCFFF">&#125;</span><span style="color:var(--shiki-punctuation)">&#x3C;/p></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;/div></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;/div></span></span></code></pre>`),n(v);var k=a(v,6),I=s(k);t(I,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-comment);font-style:italic">/* Customize existing components */</span></span>
<span class="line"><span style="color:#E0AF68">.</span><span style="color:var(--shiki-attr-value)">btn-custom</span><span style="color:#9ABDF5"> &#123;</span></span>
<span class="line"><span style="color:#9ABDF5">  @apply btn</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#7AA2F7">  background</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:#0DB9D7"> linear-gradient</span><span style="color:#9ABDF5">(</span><span style="color:#FF9E64">45</span><span style="color:var(--shiki-punctuation)">deg,</span><span style="color:var(--shiki-token)"> #667eea</span><span style="color:#FF9E64"> 0</span><span style="color:var(--shiki-punctuation)">%,</span><span style="color:var(--shiki-token)"> #764ba2</span><span style="color:#FF9E64"> 100</span><span style="color:var(--shiki-punctuation)">%</span><span style="color:#9ABDF5">)</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#7AA2F7">  border</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:#FF9E64"> none</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#7AA2F7">  color</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:#FF9E64"> white</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#9ABDF5">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">/* Create new component variants */</span></span>
<span class="line"><span style="color:#E0AF68">.</span><span style="color:var(--shiki-attr-value)">card-premium</span><span style="color:#9ABDF5"> &#123;</span></span>
<span class="line"><span style="color:#9ABDF5">  @apply card bg-gradient-to-br from-purple-400 to-purple-600 text-white</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#7AA2F7">  box-shadow</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:#FF9E64"> 0</span><span style="color:#FF9E64"> 20</span><span style="color:var(--shiki-punctuation)">px</span><span style="color:#FF9E64"> 25</span><span style="color:var(--shiki-punctuation)">px</span><span style="color:#FF9E64"> -5</span><span style="color:var(--shiki-punctuation)">px</span><span style="color:#0DB9D7"> rgba</span><span style="color:#9ABDF5">(</span><span style="color:#FF9E64">0</span><span style="color:var(--shiki-punctuation)">,</span><span style="color:#FF9E64"> 0</span><span style="color:var(--shiki-punctuation)">,</span><span style="color:#FF9E64"> 0</span><span style="color:var(--shiki-punctuation)">,</span><span style="color:#FF9E64"> 0.1</span><span style="color:#9ABDF5">)</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#9ABDF5">&#125;</span></span></code></pre>`),n(k);var m=a(k,18),U=s(m);t(U,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-comment);font-style:italic">/* Allow both old and new styles to coexist */</span></span>
<span class="line"><span style="color:#E0AF68">.</span><span style="color:var(--shiki-attr-value)">legacy-styles</span><span style="color:#9ABDF5"> &#123;</span></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">  /* Scope old component library styles */</span></span>
<span class="line"><span style="color:#9ABDF5">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">/* daisyUI styles apply globally */</span></span>
<span class="line"><span style="color:#E0AF68">.</span><span style="color:var(--shiki-attr-value)">btn</span><span style="color:#9ABDF5"> &#123;</span></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">  /* New semantic styles */</span></span>
<span class="line"><span style="color:#9ABDF5">&#125;</span></span></code></pre>`),n(m),j(22),T(w,d)},$$slots:{default:!0}}))}export{na as component};
