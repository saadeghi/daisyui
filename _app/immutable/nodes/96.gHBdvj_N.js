import{a as da,t as ia,b as t,s as a,f as ba}from"../chunks/disclose-version.CEbLymSa.js";import{h as n}from"../chunks/html.CRu8H1xh.js";import{l as ua,s as ga}from"../chunks/props.CBRLfZBG.js";import{M as xa}from"../chunks/mdsvex.B5TX9o5R.js";import{T as s}from"../chunks/Translate.DrWRpquh.js";var ma=ia('<h2 id=""><!></h2> <div class="max-w-3xl"><!> <!> <ul><li><span class="badge badge-xs bg-green-500"></span> bg-green-500</li> <li><span class="badge badge-xs bg-orange-600"></span> bg-orange-600</li> <li><span class="badge badge-xs bg-blue-700"></span> bg-blue-700</li> <li><!></li></ul> <!> <ul><li><span class="badge badge-xs bg-primary"></span> bg-primary</li> <li><span class="badge badge-xs bg-secondary"></span> bg-secondary</li> <li><span class="badge badge-xs bg-accent"></span> bg-accent</li> <li><!></li></ul> <!> <h2 id="-1"><a aria-hidden="true" tabindex="-1" href="#-1"><span class="mr-1 opacity-20 hover:opacity-60 text-base font-bold inline-block align-middle relative -mt-1">#</span></a><!></h2> <!> <!></div> <h2 id="-2"><a aria-hidden="true" tabindex="-1" href="#-2"><span class="mr-1 opacity-20 hover:opacity-60 text-base font-bold inline-block align-middle relative -mt-1">#</span></a><!></h2> <!> <div class="overflow-x-auto"><div class="whitespace-nowrap"><table><thead><tr><th></th><th><!></th><th><!></th><th><!></th></tr></thead><tbody><tr><td><span class="badge relative top-4 bg-primary"></span></td><td><span class="font-mono font-bold">primary</span> <br> <span class="text-xs opacity-60">Primary color</span></td><td><span class="badge badge-sm">required</span></td><td><span class="font-mono text-xs opacity-60">Class name: <code>bg-primary</code></span> <br> <span class="text-xs opacity-60 font-mono">CSS variable: <code>oklch(var(--p))</code></span></td></tr><tr><td><span class="badge relative top-4 bg-primary-content"></span></td><td><span class="font-mono font-bold">primary-content</span> <br> <span class="text-xs opacity-60">Foreground content color to use on primary color</span></td><td><span class="badge badge-sm badge-ghost">optional</span> <br> <span class="text-xs opacity-60">Will be a readable tone of primary if not specified</span></td><td><span class="font-mono text-xs opacity-60">Class name: <code>bg-primary-content</code></span> <br> <span class="text-xs opacity-60 font-mono">CSS variable: <code>oklch(var(--pc))</code></span></td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td><span class="badge relative top-4 bg-secondary"></span></td><td><span class="font-mono font-bold">secondary</span> <br> <span class="text-xs opacity-60">Secondary color</span></td><td><span class="badge badge-sm">required</span></td><td><span class="font-mono text-xs opacity-60">Class name: <code>bg-secondary</code></span> <br> <span class="text-xs opacity-60 font-mono">CSS variable: <code>oklch(var(--s))</code></span></td></tr><tr><td><span class="badge relative top-4 bg-secondary-content"></span></td><td><span class="font-mono font-bold">secondary-content</span> <br> <span class="text-xs opacity-60">Foreground content color to use on secondary color</span></td><td><span class="badge badge-sm badge-ghost">optional</span> <br> <span class="text-xs opacity-60">Will be a readable tone of secondary if not specified</span></td><td><span class="font-mono text-xs opacity-60">Class name: <code>bg-secondary-content</code></span> <br> <span class="text-xs opacity-60 font-mono">CSS variable: <code>oklch(var(--sc))</code></span></td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td><span class="badge relative top-4 bg-accent"></span></td><td><span class="font-mono font-bold">accent</span> <br> <span class="text-xs opacity-60">Accent color</span></td><td><span class="badge badge-sm">required</span></td><td><span class="font-mono text-xs opacity-60">Class name: <code>bg-accent</code></span> <br> <span class="text-xs opacity-60 font-mono">CSS variable: <code>oklch(var(--a))</code></span></td></tr><tr><td><span class="badge relative top-4 bg-accent-content"></span></td><td><span class="font-mono font-bold">accent-content</span> <br> <span class="text-xs opacity-60">Foreground content color to use on accent color</span></td><td><span class="badge badge-sm badge-ghost">optional</span> <br> <span class="text-xs opacity-60">Will be a readable tone of accent if not specified</span></td><td><span class="font-mono text-xs opacity-60">Class name: <code>bg-accent-content</code></span> <br> <span class="text-xs opacity-60 font-mono">CSS variable: <code>oklch(var(--ac))</code></span></td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td><span class="badge relative top-4 bg-neutral"></span></td><td><span class="font-mono font-bold">neutral</span> <br> <span class="text-xs opacity-60">Neutral color</span></td><td><span class="badge badge-sm">required</span></td><td><span class="font-mono text-xs opacity-60">Class name: <code>bg-neutral</code></span> <br> <span class="text-xs opacity-60 font-mono">CSS variable: <code>oklch(var(--n))</code></span></td></tr><tr><td><span class="badge relative top-4 bg-neutral-content"></span></td><td><span class="font-mono font-bold">neutral-content</span> <br> <span class="text-xs opacity-60">Foreground content color to use on neutral color</span></td><td><span class="badge badge-sm badge-ghost">optional</span> <br> <span class="text-xs opacity-60">Will be a readable tone of neutral if not specified</span></td><td><span class="font-mono text-xs opacity-60">Class name: <code>bg-neutral-content</code></span> <br> <span class="text-xs opacity-60 font-mono">CSS variable: <code>oklch(var(--nc))</code></span></td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td><span class="badge relative top-4 bg-base-100"></span></td><td><span class="font-mono font-bold">base-100</span> <br> <span class="text-xs opacity-60">Base color of page, used for blank backgrounds</span></td><td><span class="badge badge-sm">required</span></td><td><span class="font-mono text-xs opacity-60">Class name: <code>bg-base-100</code></span> <br> <span class="text-xs opacity-60 font-mono">CSS variable: <code>oklch(var(--b1))</code></span></td></tr><tr><td><span class="badge relative top-4 bg-base-200"></span></td><td><span class="font-mono font-bold">base-200</span> <br> <span class="text-xs opacity-60">Base color, a little darker</span></td><td><span class="badge badge-sm badge-ghost">optional</span> <br> <span class="text-xs opacity-60">Will be a darker tone of base-100 if not specified</span></td><td><span class="font-mono text-xs opacity-60">Class name: <code>bg-base-200</code></span> <br> <span class="text-xs opacity-60 font-mono">CSS variable: <code>oklch(var(--b2))</code></span></td></tr><tr><td><span class="badge relative top-4 bg-base-300"></span></td><td><span class="font-mono font-bold">base-300</span> <br> <span class="text-xs opacity-60">Base color, even more darker</span></td><td><span class="badge badge-sm badge-ghost">optional</span> <br> <span class="text-xs opacity-60">Will be a darker tone of base-200 if not specified</span></td><td><span class="font-mono text-xs opacity-60">Class name: <code>bg-base-300</code></span> <br> <span class="text-xs opacity-60 font-mono">CSS variable: <code>oklch(var(--b3))</code></span></td></tr><tr><td><span class="badge relative top-4 bg-base-content"></span></td><td><span class="font-mono font-bold">base-content</span> <br> <span class="text-xs opacity-60">Foreground content color to use on base color</span></td><td><span class="badge badge-sm badge-ghost">optional</span> <br> <span class="text-xs opacity-60">Will be a readable tone of base-100 if not specified</span></td><td><span class="font-mono text-xs opacity-60">Class name: <code>bg-base-content</code></span> <br> <span class="text-xs opacity-60 font-mono">CSS variable: <code>oklch(var(--bc))</code></span></td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td><span class="badge relative top-4 bg-info"></span></td><td><span class="font-mono font-bold">info</span> <br> <span class="text-xs opacity-60">Info color</span></td><td><span class="badge badge-sm badge-ghost">optional</span> <br> <span class="text-xs opacity-60">Will be a default blue color if not specified</span></td><td><span class="font-mono text-xs opacity-60">Class name: <code>bg-info</code></span> <br> <span class="text-xs opacity-60 font-mono">CSS variable: <code>oklch(var(--in))</code></span></td></tr><tr><td><span class="badge relative top-4 bg-info-content"></span></td><td><span class="font-mono font-bold">info-content</span> <br> <span class="text-xs opacity-60">Foreground content color to use on info color</span></td><td><span class="badge badge-sm badge-ghost">optional</span> <br> <span class="text-xs opacity-60">Will be a readable tone of info if not specified</span></td><td><span class="font-mono text-xs opacity-60">Class name: <code>bg-info-content</code></span> <br> <span class="text-xs opacity-60 font-mono">CSS variable: <code>oklch(var(--inc))</code></span></td></tr><tr><td><span class="badge relative top-4 bg-success"></span></td><td><span class="font-mono font-bold">success</span> <br> <span class="text-xs opacity-60">Success color</span></td><td><span class="badge badge-sm badge-ghost">optional</span> <br> <span class="text-xs opacity-60">Will be a default green color if not specified</span></td><td><span class="font-mono text-xs opacity-60">Class name: <code>bg-success</code></span> <br> <span class="text-xs opacity-60 font-mono">CSS variable: <code>oklch(var(--su))</code></span></td></tr><tr><td><span class="badge relative top-4 bg-success-content"></span></td><td><span class="font-mono font-bold">success-content</span> <br> <span class="text-xs opacity-60">Foreground content color to use on success color</span></td><td><span class="badge badge-sm badge-ghost">optional</span> <br> <span class="text-xs opacity-60">Will be a readable tone of success if not specified</span></td><td><span class="font-mono text-xs opacity-60">Class name: <code>bg-success-content</code></span> <br> <span class="text-xs opacity-60 font-mono">CSS variable: <code>oklch(var(--suc))</code></span></td></tr><tr><td><span class="badge relative top-4 bg-warning"></span></td><td><span class="font-mono font-bold">warning</span> <br> <span class="text-xs opacity-60">Warning color</span></td><td><span class="badge badge-sm badge-ghost">optional</span> <br> <span class="text-xs opacity-60">Will be a default orange color if not specified</span></td><td><span class="font-mono text-xs opacity-60">Class name: <code>bg-warning</code></span> <br> <span class="text-xs opacity-60 font-mono">CSS variable: <code>oklch(var(--wa))</code></span></td></tr><tr><td><span class="badge relative top-4 bg-warning-content"></span></td><td><span class="font-mono font-bold">warning-content</span> <br> <span class="text-xs opacity-60">Foreground content color to use on warning color</span></td><td><span class="badge badge-sm badge-ghost">optional</span> <br> <span class="text-xs opacity-60">Will be a readable tone of warning if not specified</span></td><td><span class="font-mono text-xs opacity-60">Class name: <code>bg-warning-content</code></span> <br> <span class="text-xs opacity-60 font-mono">CSS variable: <code>oklch(var(--wac))</code></span></td></tr><tr><td><span class="badge relative top-4 bg-error"></span></td><td><span class="font-mono font-bold">error</span> <br> <span class="text-xs opacity-60">Error color</span></td><td><span class="badge badge-sm badge-ghost">optional</span> <br> <span class="text-xs opacity-60">Will be a default red color if not specified</span></td><td><span class="font-mono text-xs opacity-60">Class name: <code>bg-error</code></span> <br> <span class="text-xs opacity-60 font-mono">CSS variable: <code>oklch(var(--er))</code></span></td></tr><tr><td><span class="badge relative top-4 bg-error-content"></span></td><td><span class="font-mono font-bold">error-content</span> <br> <span class="text-xs opacity-60">Foreground content color to use on error color</span></td><td><span class="badge badge-sm badge-ghost">optional</span> <br> <span class="text-xs opacity-60">Will be a readable tone of error if not specified</span></td><td><span class="font-mono text-xs opacity-60">Class name: <code>bg-error-content</code></span> <br> <span class="text-xs opacity-60 font-mono">CSS variable: <code>oklch(var(--erc))</code></span></td></tr></tbody></table></div></div> <h2 id="-3"><a aria-hidden="true" tabindex="-1" href="#-3"><span class="mr-1 opacity-20 hover:opacity-60 text-base font-bold inline-block align-middle relative -mt-1">#</span></a><!></h2> <!> <!>: <pre class="language-html"><!></pre> <!>: <pre class="language-html"><!></pre> <!> <!> <pre class="language-css"><!></pre> <!>',1);const fa={title:"Colors",desc:"How to use daisyUI colors?",published:!0};function $a(A,M){const L=ua(M,["children","$$slots","$$events","$$legacy"]);xa(A,ga(()=>L,fa,{children:(N,ya)=>{var e=ma(),o=ba(e),R=t(o);s(R,{text:"Introduction",$$legacy:!0});var c=a(a(o,!0)),p=t(c);s(p,{text:"daisyUI is fully themeable and colorable,",$$legacy:!0});var l=a(a(p,!0));s(l,{text:"So instead of using constant color utility classes like:",$$legacy:!0});var r=a(a(l,!0)),W=t(r),F=a(a(W,!0)),q=a(a(F,!0)),I=a(a(q,!0)),B=t(I);s(B,{text:"etc.",$$legacy:!0});var d=a(a(r,!0));s(d,{text:"It's suggested to use semantic color utility classes like:",$$legacy:!0});var i=a(a(d,!0)),U=t(i),T=a(a(U,!0)),j=a(a(T,!0)),Y=a(a(j,!0)),H=t(Y);s(H,{text:"etc.",$$legacy:!0});var b=a(a(i,!0));s(b,{text:"Each color name contains CSS variables and each daisyUI theme applies color values to the utility classes when it is applied.",$$legacy:!0});var u=a(a(b,!0)),P=t(u),z=a(P);s(z,{text:"Benefits",$$legacy:!0});var g=a(a(u,!0));s(g,{text:"Semantic color names make more sense because when we design interfaces, we don't just use any random color. We define a specific color palette with names like <code>primary</code>, <code>secondary</code>, etc. and we only use those specific colors in our interfaces.",$$legacy:!0});var D=a(a(g,!0));s(D,{text:"Also, using semantic color names makes theming easier. You wouldn't have to define dark-mode colors for every single element and you wouldn't be limited to only light/dark themes. you can have multiple themes available and each theme is just a few lines of CSS variables.",$$legacy:!0});var x=a(a(c,!0)),G=t(x),J=a(G);s(J,{text:"List of all daisyUI color names",$$legacy:!0});var m=a(a(x,!0));s(m,{text:"You can use these color names in your theme or in utility classes.",$$legacy:!0});var f=a(a(m,!0)),K=t(f),Q=t(K),V=t(Q),X=t(V),Z=t(X),y=a(Z),aa=t(y);s(aa,{text:"Color name + description",$$legacy:!0});var v=a(y),sa=t(v);s(sa,{text:"Required or optional for themes",$$legacy:!0});var ta=a(v),na=t(ta);s(na,{text:"Example use",$$legacy:!0});var k=a(a(f,!0)),ea=t(k),oa=a(ea);s(oa,{text:"How to use",$$legacy:!0});var h=a(a(k,!0));s(h,{text:"Some daisyUI components come with modifier class names and that modifier class name will apply a color.",$$legacy:!0});var _=a(a(h,!0));s(_,{text:"For example",$$legacy:!0});var C=a(a(_,!0)),ca=t(C);n(ca,()=>'<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span></code>');var $=a(a(C,!0));s($,{text:"Or",$$legacy:!0});var S=a(a($,!0)),pa=t(S);n(pa,()=>'<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox checkbox-secondary<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code>');var O=a(a(S,!0));s(O,{text:"You can also use color names in utility classes just like Tailwind's original color names.",$$legacy:!0});var w=a(a(O,!0));s(w,{text:"These are utility classes that can be used with a color name:",$$legacy:!0});var E=a(a(w,!0)),la=t(E);n(la,()=>`<code class="language-css"><span class="token selector">bg-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">to-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">via-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">from-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">text-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">ring-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">fill-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">caret-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">stroke-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">border-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">divide-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">accent-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">shadow-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">outline-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">decoration-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">placeholder-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">ring-offset-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span></code>`);var ra=a(a(E,!0));s(ra,{text:"So you can use <code>bg-primary</code>, <code>border-secondary</code>, etc.",$$legacy:!0}),da(N,e)},$$slots:{default:!0},$$legacy:!0}))}export{$a as component};
