import"../chunks/DsnmJJEf.js";import"../chunks/DHMwis4v.js";import{f as k,s,a as x,d as a,b as f,r as t,n as C}from"../chunks/DpCVmHgD.js";import{h as e}from"../chunks/DzKh18oq.js";import{l as F,s as V}from"../chunks/BPOyD3kM.js";import{L as S}from"../chunks/6PMu245Z.js";import"../chunks/D86VPNqY.js";const p={title:"Use daisyUI with Tailwind CSS Standalone CLI",desc:"How to run daisyUI with Tailwind CSS Standalone CLI without Node.js"},{title:j,desc:M}=p;var A=k(`<h3 id="1-get-tailwind-css-executable"><a href="#1-get-tailwind-css-executable" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>1. Get Tailwind CSS executable</h3> <p>Follow <a href="https://tailwindcss.com/blog/standalone-cli" rel="nofollow" target="_blank">Tailwind CSS guide</a> and get the latest version of <a href="/pages/tailwind-css/" title="Tailwind CSS">Tailwind CSS</a> executable for your OS.</p> <p>For example:</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">Terminal</div><!></div> <p>Make the file executable (For Linux and MacOS):</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">Terminal</div><!></div> <h3 id="2-get-daisyui-bundled-js-file"><a href="#2-get-daisyui-bundled-js-file" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>2. Get daisyUI bundled JS file</h3> <p>Run this code to download latest version of daisyUI as a single js file and put it next to Tailwind's executable file.</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">Terminal</div><!></div> <h3 id="3-add-tailwind-css-and-daisyui"><a href="#3-add-tailwind-css-and-daisyui" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>3. Add Tailwind CSS and daisyUI</h3> <p>Add Tailwind CSS and daisyUI to your CSS file.<br/> Address your HTML and other markup files in the <code>source</code> function.</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">input.css</div><!></div> <h3 id="4-build-css"><a href="#4-build-css" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>4. Build CSS</h3> <p>Run this command to build the CSS file using Tailwind CSS executable.<br/> Using <code>--watch</code> will automatically update the output.css file when you change the input.css file.<br/> For CI/CD, run the command without <code>--watch</code> to generate the output.css file once.</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><div class="p-1 -mb-6 italic opacity-60 text-xs code-tab">Terminal</div><!></div> <p>Now you can use daisyUI class names!</p>`,1);function Z(d,h){const v=F(h,["children","$$slots","$$events","$$legacy"]);S(d,V(()=>v,()=>p,{children:(u,H)=>{var r=A(),n=s(x(r),6),m=s(a(n));e(m,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-comment);font-style:italic"># Run the corresponding command for your OS</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic"># Linux</span></span>
<span class="line"><span style="color:#C0CAF5">curl</span><span style="color:#E0AF68"> -sLo</span><span style="color:var(--shiki-attr-value)"> tailwindcss</span><span style="color:var(--shiki-attr-value)"> https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-linux-arm64</span></span>
<span class="line"><span style="color:#C0CAF5">curl</span><span style="color:#E0AF68"> -sLo</span><span style="color:var(--shiki-attr-value)"> tailwindcss</span><span style="color:var(--shiki-attr-value)"> https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-linux-arm64-musl</span></span>
<span class="line"><span style="color:#C0CAF5">curl</span><span style="color:#E0AF68"> -sLo</span><span style="color:var(--shiki-attr-value)"> tailwindcss</span><span style="color:var(--shiki-attr-value)"> https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-linux-x64</span></span>
<span class="line"><span style="color:#C0CAF5">curl</span><span style="color:#E0AF68"> -sLo</span><span style="color:var(--shiki-attr-value)"> tailwindcss</span><span style="color:var(--shiki-attr-value)"> https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-linux-x64-musl</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic"># MacOS</span></span>
<span class="line"><span style="color:#C0CAF5">curl</span><span style="color:#E0AF68"> -sLo</span><span style="color:var(--shiki-attr-value)"> tailwindcss</span><span style="color:var(--shiki-attr-value)"> https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-macos-arm64</span></span>
<span class="line"><span style="color:#C0CAF5">curl</span><span style="color:#E0AF68"> -sLo</span><span style="color:var(--shiki-attr-value)"> tailwindcss</span><span style="color:var(--shiki-attr-value)"> https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-macos-x64</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic"># Windows</span></span>
<span class="line"><span style="color:#C0CAF5">curl</span><span style="color:#E0AF68"> -sLo</span><span style="color:var(--shiki-attr-value)"> tailwindcss.exe</span><span style="color:var(--shiki-attr-value)"> https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-windows-x64.exe</span></span></code></pre>`),t(n);var l=s(n,4),y=s(a(l));e(y,()=>'<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#C0CAF5">chmod</span><span style="color:var(--shiki-attr-value)"> +x</span><span style="color:var(--shiki-attr-value)"> tailwindcss</span></span></code></pre>'),t(l);var i=s(l,6),w=s(a(i));e(w,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#C0CAF5">curl</span><span style="color:#E0AF68"> -sLO</span><span style="color:var(--shiki-attr-value)"> https://github.com/saadeghi/daisyui/releases/latest/download/daisyui.js</span></span>
<span class="line"><span style="color:#C0CAF5">curl</span><span style="color:#E0AF68"> -sLO</span><span style="color:var(--shiki-attr-value)"> https://github.com/saadeghi/daisyui/releases/latest/download/daisyui-theme.js</span></span></code></pre>`),t(i);var o=s(i,6),b=s(a(o));e(b,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-attr-name)">@import </span><span style="color:var(--shiki-attr-value)">"tailwindcss"</span><span style="color:#0DB9D7"> source</span><span style="color:var(--shiki-punctuation)">(</span><span style="color:#FF9E64">none</span><span style="color:var(--shiki-punctuation)">);</span></span>
<span class="line"><span style="color:var(--shiki-attr-name)">@source </span><span style="color:var(--shiki-attr-value)">"./public/*.&#123;html,php,erb&#125;"</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:var(--shiki-attr-name)">@plugin </span><span style="color:var(--shiki-attr-value)">"./daisyui.js"</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">/* Optional for custom themes – Docs: https://daisyui.com/docs/themes/#how-to-add-a-new-custom-theme */</span></span>
<span class="line"><span style="color:var(--shiki-attr-name)">@plugin </span><span style="color:var(--shiki-attr-value)">"./daisyui-theme.js"</span><span style="color:var(--shiki-punctuation)">&#123;</span></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">  /* custom theme here */</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#125;</span></span></code></pre>`),t(o);var c=s(o,6),g=s(a(c));e(g,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#C0CAF5">./tailwindcss</span><span style="color:#E0AF68"> -i</span><span style="color:var(--shiki-attr-value)"> input.css</span><span style="color:#E0AF68"> -o</span><span style="color:var(--shiki-attr-value)"> output.css</span><span style="color:#E0AF68"> --watch</span></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic"># For Windows</span></span>
<span class="line"><span style="color:#C0CAF5">tailwindcss.exe</span><span style="color:#E0AF68"> -i</span><span style="color:var(--shiki-attr-value)"> input.css</span><span style="color:#E0AF68"> -o</span><span style="color:var(--shiki-attr-value)"> output.css</span><span style="color:#E0AF68"> --watch</span></span></code></pre>`),t(c),C(2),f(u,r)},$$slots:{default:!0}}))}export{Z as component};
