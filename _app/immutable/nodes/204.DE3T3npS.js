import{t as Sa,a as ja}from"../chunks/B6gcMpOX.js";import"../chunks/Bf2R1Ror.js";import{f as Ta,s as a,c as s,r as n,n as K}from"../chunks/JuJzXV1W.js";import{h as t}from"../chunks/CeU4FT2z.js";import{l as $a,s as Ba}from"../chunks/CmS9MtAn.js";import{L as Ea}from"../chunks/CYfEjR1c.js";import{T as o}from"../chunks/Bek5mljG.js";const O={title:"Mary UI: Laravel blade components made with daisyUI",desc:"Mary UI is a collection of Laravel blade components made for Livewire 3 and styled around daisyUI and Tailwind CSS",published:!0,date:"2023-9-13",author:"Pouya Saadeghi",thumbnail:"https://img.daisyui.com/images/blog/mary-ui.webp",tags:["Frameworks"]},{title:Ja,desc:Ka,published:Oa,date:Qa,author:Xa,thumbnail:as,tags:ss}=O;var Za=Sa('<h2 id="what-is-mary-ui"><a href="#what-is-mary-ui" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a><span data-heading-text="What is Mary UI?"><!></span></h2> <p><a href="https://mary-ui.com/" rel="nofollow" target="_blank">Mary UI</a><!> <!><a href="https://daisyui.com/" rel="nofollow" target="_blank">daisyUI</a><!><a href="https://tailwindcss.com/" rel="nofollow" target="_blank">Tailwind CSS</a><!> <!></p> <p><!></p> <h2 id="how-does-it-look-like"><a href="#how-does-it-look-like" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a><span data-heading-text="How does it look like?"><!></span></h2> <p><!></p> <p><!> <img src="https://img.daisyui.com/images/blog/mary-ui-form.webp" alt="Mary UI form"> <!></p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <h2 id="how-to-install-mary-ui-on-a-new-laravel-project"><a href="#how-to-install-mary-ui-on-a-new-laravel-project" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a><span data-heading-text="How to install Mary UI on a new Laravel project?"><!></span></h2> <p><!></p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p><!></p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p><!></p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p><!><a href="https://mary-ui.com/docs/installation" rel="nofollow" target="_blank">Mary UI installation</a><!></p> <h2 id="how-to-install-mary-ui-on-existing-laravel-project"><a href="#how-to-install-mary-ui-on-existing-laravel-project" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a><span data-heading-text="How to install Mary UI on existing Laravel project?"><!></span></h2> <p><!></p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p><!></p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p><!></p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p><!><code>resources/css/app.css</code></p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p><!></p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p><!><code>@vite</code><!><code>views/components/layouts/app.blade.php</code></p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p><!></p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p><!></p> <p><!><a href="https://mary-ui.com" rel="nofollow" target="_blank">Mary UI</a><!></p>',1);function ns(Q,X){const aa=$a(X,["children","$$slots","$$events","$$legacy"]);Ea(Q,Ba(()=>aa,O,{children:(sa,za)=>{var T=Za(),e=Ta(T),$=a(s(e)),na=s($);o(na,{text:"What is Mary UI?"}),n($),n(e);var i=a(e,2),B=a(s(i));o(B,{text:"is a collection of Laravel blade components made for Livewire 3."});var E=a(B,2);o(E,{text:"These components are built on top of"});var Z=a(E,2);o(Z,{text:"and"});var z=a(Z,2);o(z,{text:"."});var oa=a(z,2);o(oa,{text:"If you're a Laravel developer and you're using Livewire, you'll love Mary UI because it makes it faster and easier to build web pages."}),n(i);var r=a(i,2),ta=s(r);o(ta,{text:"Mary UI does not ship any custom CSS and relies on daisyUI and Tailwind for out-of-box styling. You can customize most of components styles, by inline overriding daisyUI and Tailwind CSS classes."}),n(r);var l=a(r,2),Y=a(s(l)),ea=s(Y);o(ea,{text:"How does it look like?"}),n(Y),n(l);var p=a(l,2),ia=s(p);o(ia,{text:"Mary UI allows you to use daisyUI components in your Laravel blade files using Livewire syntax."}),n(p);var c=a(p,2),q=s(c);o(q,{text:"To make a form like this:"});var ra=a(q,4);o(ra,{text:"All you need would be these few lines:"}),n(c);var v=a(c,2),la=s(v);t(la,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;</span><span style="color:#DE5971">x-form </span><span style="color:var(--shiki-attr-name)">wire:submit</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">save</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;</span><span style="color:#DE5971">x-input </span><span style="color:var(--shiki-attr-name)">label</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">Name</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> wire:model</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">name</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)"> /></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;</span><span style="color:#DE5971">x-input</span></span>
<span class="line"><span style="color:var(--shiki-attr-name)">    label</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">Amount</span><span style="color:var(--shiki-punctuation)">"</span></span>
<span class="line"><span style="color:var(--shiki-attr-name)">    wire:model</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">amount</span><span style="color:var(--shiki-punctuation)">"</span></span>
<span class="line"><span style="color:var(--shiki-attr-name)">    prefix</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">USD</span><span style="color:var(--shiki-punctuation)">"</span></span>
<span class="line"><span style="color:var(--shiki-attr-name)">    money</span></span>
<span class="line"><span style="color:var(--shiki-attr-name)">    hint</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">It submits an unmasked value</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)"> /></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;</span><span style="color:#FF5370">x-slot:actions</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;</span><span style="color:#DE5971">x-button </span><span style="color:var(--shiki-attr-name)">label</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">Cancel</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)"> /></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;</span><span style="color:#DE5971">x-button </span><span style="color:var(--shiki-attr-name)">label</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">Click me!</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">btn-primary</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> type</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">submit</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> spinner</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">save</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)"> /></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;/</span><span style="color:#FF5370">x-slot:actions</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;/</span><span style="color:#DE5971">x-form</span><span style="color:var(--shiki-punctuation)">></span></span></code></pre>`),n(v);var h=a(v,2),P=a(s(h)),pa=s(P);o(pa,{text:"How to install Mary UI on a new Laravel project?"}),n(P),n(h);var u=a(h,2),ca=s(u);o(ca,{text:"You can install Mary UI using composer:"}),n(u);var d=a(u,2),va=s(d);t(va,()=>'<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#C0CAF5">composer</span><span style="color:var(--shiki-attr-value)"> require</span><span style="color:var(--shiki-attr-value)"> robsontenorio/mary</span></span></code></pre>'),n(d);var y=a(d,2),ha=s(y);o(ha,{text:"If it's a new Laravel project, you can complete the setup by running the following command:"}),n(y);var k=a(y,2),ua=s(k);t(ua,()=>'<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#C0CAF5">php</span><span style="color:var(--shiki-attr-value)"> artisan</span><span style="color:var(--shiki-attr-value)"> mary:install</span></span></code></pre>'),n(k);var m=a(k,2),da=s(m);o(da,{text:"And start the dev server"}),n(m);var b=a(m,2),ya=s(b);t(ya,()=>'<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#C0CAF5">yarn</span><span style="color:var(--shiki-attr-value)"> dev</span></span></code></pre>'),n(b);var g=a(b,2),R=s(g);o(R,{text:"Read more about"});var ka=a(R,2);o(ka,{text:"."}),n(g);var x=a(g,2),W=a(s(x)),ma=s(W);o(ma,{text:"How to install Mary UI on existing Laravel project?"}),n(W),n(x);var w=a(x,2),ba=s(w);o(ba,{text:"Install Mary UI using composer:"}),n(w);var _=a(w,2),ga=s(_);t(ga,()=>'<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#C0CAF5">composer</span><span style="color:var(--shiki-attr-value)"> require</span><span style="color:var(--shiki-attr-value)"> robsontenorio/mary</span></span></code></pre>'),n(_);var f=a(_,2),xa=s(f);o(xa,{text:"If it's an existing Laravel project, Install daisyUI and Tailwind CSS and initialize Tailwind CSS config file:"}),n(f);var C=a(f,2),wa=s(C);t(wa,()=>'<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#C0CAF5">yarn</span><span style="color:var(--shiki-attr-value)"> add</span><span style="color:#E0AF68"> -D</span><span style="color:var(--shiki-attr-value)"> tailwindcss</span><span style="color:var(--shiki-attr-value)"> daisyui@latest</span><span style="color:var(--shiki-attr-value)"> postcss</span><span style="color:var(--shiki-attr-value)"> autoprefixer</span><span style="color:var(--shiki-punctuation)"> &#x26;&#x26; </span><span style="color:#C0CAF5">npx</span><span style="color:var(--shiki-attr-value)"> tailwindcss</span><span style="color:var(--shiki-attr-value)"> init</span><span style="color:#E0AF68"> -p</span></span></code></pre>'),n(C);var F=a(C,2),_a=s(F);o(_a,{text:"Change your tailwind.config.js file like this:"}),n(F);var H=a(F,2),fa=s(H);t(fa,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#7DCFFF">export</span><span style="color:#7DCFFF"> default</span><span style="color:#9ABDF5"> &#123;</span></span>
<span class="line"><span style="color:#73DACA">  content</span><span style="color:var(--shiki-punctuation)">: </span><span style="color:#9ABDF5">[</span></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">    // You will probably also need those lines</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    "</span><span style="color:var(--shiki-attr-value)">./resources/**/**/*.&#123;js,blade.php&#125;</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    "</span><span style="color:var(--shiki-attr-value)">./app/View/Components/**/**/*.php</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    "</span><span style="color:var(--shiki-attr-value)">./app/Livewire/**/**/*.php</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">    // Add mary</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    "</span><span style="color:var(--shiki-attr-value)">./vendor/robsontenorio/mary/src/View/Components/**/*.php</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:#9ABDF5">  ]</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">  // Add daisyUI</span></span>
<span class="line"><span style="color:#73DACA">  plugins</span><span style="color:var(--shiki-punctuation)">: </span><span style="color:#9ABDF5">[</span><span style="color:#7AA2F7">require</span><span style="color:#9ABDF5">(</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">daisyui</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:#9ABDF5">)]</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:#9ABDF5">&#125;</span></span></code></pre>`),n(H);var V=a(H,2),Ca=s(V);o(Ca,{text:"Add Tailwind directives to"}),K(),n(V);var I=a(V,2),Fa=s(I);t(Fa,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-attr-name)">@tailwind</span><span style="color:var(--shiki-punctuation)"> base;</span></span>
<span class="line"><span style="color:var(--shiki-attr-name)">@tailwind</span><span style="color:var(--shiki-punctuation)"> components;</span></span>
<span class="line"><span style="color:var(--shiki-attr-name)">@tailwind</span><span style="color:var(--shiki-punctuation)"> utilities;</span></span></code></pre>`),n(I);var A=a(I,2),Ha=s(A);o(Ha,{text:"Setup Livewire default app template."}),n(A);var U=a(A,2),Va=s(U);t(Va,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-comment);font-style:italic"># It creates &#96;views/components/layouts/app.blade.php&#96;</span></span>
<span class="line"><span style="color:#C0CAF5">php</span><span style="color:var(--shiki-attr-value)"> artisan</span><span style="color:var(--shiki-attr-value)"> livewire:layout</span></span></code></pre>`),n(U);var M=a(U,2),N=s(M);o(N,{text:"Then add"});var Ia=a(N,2);o(Ia,{text:"on default app template"}),K(),n(M);var D=a(M,2),Aa=s(D);t(Aa,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;head></span></span>
<span class="line"><span style="color:var(--shiki-token)">  ...</span></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">  &#x3C;!-- This --></span></span>
<span class="line"><span style="color:var(--shiki-token)">  @vite(['resources/css/app.css', 'resources/js/app.js'])</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;/head></span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;body></span></span>
<span class="line"><span style="color:var(--shiki-token)">  ...</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;/body></span></span></code></pre>`),n(D);var L=a(D,2),Ua=s(L);o(Ua,{text:"Finally, start dev server."}),n(L);var S=a(L,2),Ma=s(S);t(Ma,()=>'<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#C0CAF5">yarn</span><span style="color:var(--shiki-attr-value)"> dev</span></span></code></pre>'),n(S);var j=a(S,2),Da=s(j);o(Da,{text:"That's it! You can now use Mary UI components in your blade files."}),n(j);var G=a(j,2),J=s(G);o(J,{text:"Read more about"});var La=a(J,2);o(La,{text:"."}),n(G),ja(sa,T)},$$slots:{default:!0}}))}export{ns as component};
