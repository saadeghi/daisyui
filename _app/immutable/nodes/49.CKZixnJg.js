import"../chunks/DsnmJJEf.js";import"../chunks/DHMwis4v.js";import{f as J,s as a,a as E,b as T,d as s,r as n,n as _}from"../chunks/DpCVmHgD.js";import{h as t}from"../chunks/DzKh18oq.js";import{l as I,s as L}from"../chunks/BaDBjNzh.js";import{L as P}from"../chunks/Cz9atW-t.js";import"../chunks/DohBecrD.js";const k={title:"Component Library for 2026",desc:"Why 2026 is the year to ditch complex JavaScript frameworks and embrace CSS-only component libraries for faster, more maintainable web development",layout:"contentLanding",keywords:"component library 2026, css-only components, javascript-free ui, web development trends, platform-native development, modern css frameworks"},{title:Y,desc:G,layout:X,keywords:Q}=k;var U=J(`<p>The web development landscape is reaching a breaking point. Modern JavaScript-heavy component libraries have created a complex ecosystem that's slowing down development, bloating applications, and making maintenance a nightmare. As we approach 2026, it's time to return to the fundamentals and embrace the power of the web platform itself.</p> <h2 id="the-javascript-framework-overload-problem"><a href="#the-javascript-framework-overload-problem" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>The JavaScript Framework Overload Problem</h2> <p>Over the past decade, the web development community has embraced increasingly complex JavaScript frameworks and component libraries. What started as a solution has become the problem:</p> <h3 id="dependency-hell"><a href="#dependency-hell" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Dependency Hell</h3> <p>Modern JavaScript component libraries come with an overwhelming number of dependencies. A simple JS library can pull in dozens or even hundreds of packages:</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>Each dependency brings its own sub-dependencies, creating a fragile web of code that can break with any update. Security vulnerabilities in any one of these packages can compromise your entire application.</p> <h3 id="bundle-size-bloat"><a href="#bundle-size-bloat" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Bundle Size Bloat</h3> <p>All these dependencies add up. A typical React + Material-UI application can easily exceed 1MB of JavaScript just for the component library:</p> <ul><li><strong>React + ReactDOM</strong>: ~140KB gzipped</li> <li><strong>Material-UI core</strong>: ~350KB gzipped</li> <li><strong>Emotion styling engine</strong>: ~50KB gzipped</li> <li><strong>Various utilities and dependencies</strong>: ~200KB gzipped</li></ul> <p>That's over 740KB before you've written a single line of application code. Users on slower connections wait longer, and your Core Web Vitals suffer.</p> <h3 id="build-time-complexity"><a href="#build-time-complexity" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Build Time Complexity</h3> <p>JavaScript-heavy frameworks require complex build processes:</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>Development builds are slow, production builds are slower, and debugging build issues eats into your productivity. Hot reloading breaks, sourcemaps get corrupted, and you spend more time fighting tools than building features.</p> <h3 id="framework-lock-in"><a href="#framework-lock-in" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Framework Lock-in</h3> <p>Component libraries tied to specific frameworks create vendor lock-in:</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>Want to migrate to Vue, Svelte, or try a new framework? You'll need to rewrite every component. Your UI knowledge and markup become worthless outside that specific ecosystem.</p> <h3 id="runtime-performance-issues"><a href="#runtime-performance-issues" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Runtime Performance Issues</h3> <p>JavaScript component libraries add runtime overhead:</p> <ul><li><strong>Virtual DOM diffing</strong>: Extra computation on every render</li> <li><strong>JavaScript execution</strong>: Components must be parsed, compiled, and executed</li> <li><strong>Memory overhead</strong>: Each component instance consumes memory</li> <li><strong>Bundle parsing</strong>: Large JavaScript bundles block the main thread</li></ul> <p>The result? Janky scrolling, delayed interactions, and poor performance on mobile devices.</p> <h2 id="why-2026-is-the-year-of-simplicity"><a href="#why-2026-is-the-year-of-simplicity" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Why 2026 is the Year of Simplicity</h2> <p>Several trends are converging to make 2026 the perfect time to embrace simpler, CSS-only component libraries:</p> <h3 id="css-has-matured"><a href="#css-has-matured" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>CSS Has Matured</h3> <p>Modern CSS has evolved dramatically. Features that once required JavaScript are now native:</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>CSS Grid, Flexbox, custom properties, container queries, and advanced selectors handle most UI needs without JavaScript.</p> <h3 id="performance-is-paramount"><a href="#performance-is-paramount" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Performance is Paramount</h3> <p>Core Web Vitals are now a Google ranking factor. Users expect fast, responsive experiences:</p> <ul><li><strong>Largest Contentful Paint (LCP)</strong>: Should occur within 2.5 seconds</li> <li><strong>First Input Delay (FID)</strong>: Should be less than 100 milliseconds</li> <li><strong>Cumulative Layout Shift (CLS)</strong>: Should be less than 0.1</li></ul> <p>Heavy JavaScript frameworks make these targets harder to achieve. CSS-only solutions start with a performance advantage.</p> <h3 id="mobile-first-reality"><a href="#mobile-first-reality" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Mobile-First Reality</h3> <p>Over 60% of web traffic comes from mobile devices. Mobile users have:</p> <ul><li>Slower processors</li> <li>Limited memory</li> <li>Intermittent connectivity</li> <li>Battery constraints</li></ul> <p>CSS-only component libraries respect these constraints by minimizing JavaScript execution and reducing battery drain.</p> <h3 id="developer-experience-fatigue"><a href="#developer-experience-fatigue" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Developer Experience Fatigue</h3> <p>Developers are experiencing fatigue from complex toolchains:</p> <ul><li>Webpack configuration hell</li> <li>Package version conflicts</li> <li>Breaking changes in major updates</li> <li>Learning curves for new abstractions</li></ul> <p>The industry is ready for simpler solutions that "just work."</p> <h3 id="platform-native-development"><a href="#platform-native-development" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Platform-Native Development</h3> <p>Web standards are advancing rapidly. Why reinvent the wheel when the platform provides solutions?</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>Using platform features means better accessibility, consistent behavior across browsers, and no maintenance burden.</p> <h2 id="why-developers-choose-daisyui-in-2026"><a href="#why-developers-choose-daisyui-in-2026" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Why developers choose daisyUI in 2026</h2> <p>daisyUI represents the future of component libraries: CSS-only, framework-agnostic, and built on web standards.</p> <h3 id="zero-javascript-dependencies"><a href="#zero-javascript-dependencies" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Zero JavaScript Dependencies</h3> <p>daisyUI is pure CSS. Your entire component library adds zero runtime JavaScript:</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>This dropdown works perfectly with keyboard navigation, screen readers, and mobile touch, all through CSS and semantic HTML.</p> <h3 id="framework-freedom"><a href="#framework-freedom" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Framework Freedom</h3> <p>Use daisyUI with any framework or no framework at all:</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>The same markup works everywhere. Your UI knowledge transfers between projects and frameworks.</p> <h3 id="minimal-bundle-impact"><a href="#minimal-bundle-impact" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Minimal Bundle Impact</h3> <p>daisyUI's CSS is highly optimized and tree-shakeable:</p> <ul><li><strong>Full library</strong>: ~50KB gzipped (90% smaller than typical JS libraries)</li> <li><strong>With purging</strong>: Often under 10KB for real applications</li> <li><strong>No runtime overhead</strong>: Zero JavaScript execution cost</li></ul> <h3 id="built-in-accessibility"><a href="#built-in-accessibility" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Built-in Accessibility</h3> <p>daisyUI components follow WCAG guidelines and use semantic HTML:</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>Screen readers, keyboard navigation, and assistive technologies work perfectly without extra JavaScript.</p> <h3 id="theme-system-that-scales"><a href="#theme-system-that-scales" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Theme System That Scales</h3> <p>daisyUI's CSS custom property-based theming is more powerful than JavaScript solutions:</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>Themes apply instantly without JavaScript, work with SSR, and respect user preferences automatically.</p> <h3 id="developer-experience-without-compromise"><a href="#developer-experience-without-compromise" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Developer Experience Without Compromise</h3> <p>daisyUI provides excellent DX without complexity:</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>Semantic class names, predictable behavior, and zero configuration required.</p> <h2 id="the-benefits-of-going-css-only-in-2026"><a href="#the-benefits-of-going-css-only-in-2026" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>The Benefits of Going CSS-Only in 2026</h2> <h3 id="lightning-fast-performance"><a href="#lightning-fast-performance" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Lightning-Fast Performance</h3> <p>CSS-only libraries load and render faster:</p> <ul><li><strong>No JavaScript parsing time</strong>: Components display immediately</li> <li><strong>Smaller bundle sizes</strong>: Less network overhead</li> <li><strong>Better caching</strong>: CSS files cache more effectively than JavaScript</li> <li><strong>Reduced main thread blocking</strong>: No JavaScript execution delays</li></ul> <h3 id="improved-seo-and-core-web-vitals"><a href="#improved-seo-and-core-web-vitals" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Improved SEO and Core Web Vitals</h3> <p>Search engines prefer fast, lightweight sites:</p> <ul><li><strong>Better LCP scores</strong>: Content renders immediately without JavaScript</li> <li><strong>Lower FID</strong>: No JavaScript framework overhead</li> <li><strong>Improved CLS</strong>: Stable layouts without dynamic rendering</li></ul> <h3 id="reduced-maintenance-burden"><a href="#reduced-maintenance-burden" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Reduced Maintenance Burden</h3> <p>CSS-only libraries require less maintenance:</p> <ul><li><strong>Fewer dependencies to update</strong>: No security vulnerabilities in JavaScript packages</li> <li><strong>No breaking changes</strong>: CSS is backward compatible</li> <li><strong>Simpler debugging</strong>: Fewer layers of abstraction</li> <li><strong>Longer lifespan</strong>: CSS outlasts JavaScript framework churn</li></ul> <h3 id="better-accessibility-by-default"><a href="#better-accessibility-by-default" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Better Accessibility by Default</h3> <p>Platform-native solutions work better with assistive technologies:</p> <ul><li><strong>Screen reader compatibility</strong>: Semantic HTML works perfectly</li> <li><strong>Keyboard navigation</strong>: Native focus management</li> <li><strong>High contrast mode</strong>: Respects user system preferences</li> <li><strong>Reduced motion</strong>: CSS media queries handle user preferences</li></ul> <h3 id="cross-framework-compatibility"><a href="#cross-framework-compatibility" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Cross-Framework Compatibility</h3> <p>Invest in skills that transfer:</p> <ul><li><strong>Portable markup</strong>: Same HTML works in any framework</li> <li><strong>Transferable knowledge</strong>: CSS skills apply everywhere</li> <li><strong>Future-proof</strong>: Not tied to framework lifecycles</li> <li><strong>Team flexibility</strong>: Any developer can contribute</li></ul> <h2 id="making-the-transition"><a href="#making-the-transition" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Making the Transition</h2> <p>Moving to CSS-only component libraries doesn't mean sacrificing functionality:</p> <h3 id="start-small"><a href="#start-small" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Start Small</h3> <p>Begin with simple components:</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <h3 id="progressive-enhancement"><a href="#progressive-enhancement" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Progressive Enhancement</h3> <p>Add JavaScript only when necessary:</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <h3 id="measure-the-impact"><a href="#measure-the-impact" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Measure the Impact</h3> <p>Track the improvements:</p> <ul><li><strong>Bundle size reduction</strong>: Often 70-90% smaller</li> <li><strong>Build time improvement</strong>: 2-5x faster builds</li> <li><strong>Performance gains</strong>: Better Core Web Vitals scores</li> <li><strong>Development speed</strong>: Faster iteration cycles</li></ul> <h2 id="the-future-is-css-only"><a href="#the-future-is-css-only" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>The Future is CSS-Only</h2> <p>2026 represents a turning point. The web platform has matured, performance requirements have tightened, and developer fatigue with complex toolchains has reached a peak.</p> <p>CSS-only component libraries like daisyUI offer a path forward:</p> <ul><li><strong>Better performance</strong>: Faster loading, smoother interactions</li> <li><strong>Reduced complexity</strong>: Simpler builds, fewer dependencies</li> <li><strong>Greater longevity</strong>: Platform-based solutions outlast framework trends</li> <li><strong>Improved accessibility</strong>: Native HTML works better with assistive technologies</li> <li><strong>Cross-framework compatibility</strong>: Invest in transferable skills</li></ul> <p>The question isn't whether to adopt CSS-only component libraries, but how quickly you can make the transition.</p> <p>Ready to embrace the future of web development? <a href="/docs/install/">Start with daisyUI</a> and experience what component libraries should be: simple, fast, and built on web standards.</p> <p>The web platform is ready. The tools are mature. 2026 is the year to simplify and win.</p>`,1);function aa(g,b){const w=I(b,["children","$$slots","$$events","$$legacy"]);P(g,L(()=>w,()=>k,{children:(f,R)=>{var d=U(),o=a(E(d),10),x=s(o);t(x,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#9ABDF5">&#123;</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  "</span><span style="color:#7AA2F7">dependencies</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">: </span><span style="color:#9ABDF5">&#123;</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    "</span><span style="color:#0DB9D7">@emotion/react</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">: </span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">^11.10.5</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    "</span><span style="color:#0DB9D7">@emotion/styled</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">: </span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">^11.10.5</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    "</span><span style="color:#0DB9D7">@mui/base</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">: </span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">^5.0.0-beta.8</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    "</span><span style="color:#0DB9D7">@mui/material</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">: </span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">^5.10.9</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    "</span><span style="color:#0DB9D7">@mui/system</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">: </span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">^5.10.9</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    "</span><span style="color:#0DB9D7">@mui/types</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">: </span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">^7.2.4</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    "</span><span style="color:#0DB9D7">@mui/utils</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">: </span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">^5.10.9</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    "</span><span style="color:#0DB9D7">@popperjs/core</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">: </span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">^2.11.6</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    "</span><span style="color:#0DB9D7">@types/react-transition-group</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">: </span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">^4.4.5</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    "</span><span style="color:#0DB9D7">clsx</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">: </span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">^1.2.1</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    "</span><span style="color:#0DB9D7">csstype</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">: </span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">^3.1.1</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    "</span><span style="color:#0DB9D7">prop-types</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">: </span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">^15.8.1</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    "</span><span style="color:#0DB9D7">react-is</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">: </span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">^18.2.0</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    "</span><span style="color:#0DB9D7">react-transition-group</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">: </span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">^4.4.5</span><span style="color:var(--shiki-punctuation)">"</span></span>
<span class="line"><span style="color:#9ABDF5">  &#125;</span></span>
<span class="line"><span style="color:#9ABDF5">&#125;</span></span></code></pre>`),n(o);var e=a(o,16),V=s(e);t(V,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-comment);font-style:italic"># Typical modern build pipeline</span></span>
<span class="line"><span style="color:#C0CAF5">npm</span><span style="color:var(--shiki-attr-value)"> run</span><span style="color:var(--shiki-attr-value)"> build:css</span></span>
<span class="line"><span style="color:#C0CAF5">npm</span><span style="color:var(--shiki-attr-value)"> run</span><span style="color:var(--shiki-attr-value)"> build:js</span><span style="color:var(--shiki-punctuation)"> </span></span>
<span class="line"><span style="color:#C0CAF5">npm</span><span style="color:var(--shiki-attr-value)"> run</span><span style="color:var(--shiki-attr-value)"> optimize:images</span></span>
<span class="line"><span style="color:#C0CAF5">npm</span><span style="color:var(--shiki-attr-value)"> run</span><span style="color:var(--shiki-attr-value)"> bundle:analyze</span></span>
<span class="line"><span style="color:#C0CAF5">npm</span><span style="color:var(--shiki-attr-value)"> run</span><span style="color:var(--shiki-attr-value)"> test:unit</span></span>
<span class="line"><span style="color:#C0CAF5">npm</span><span style="color:var(--shiki-attr-value)"> run</span><span style="color:var(--shiki-attr-value)"> test:e2e</span></span>
<span class="line"><span style="color:#C0CAF5">npm</span><span style="color:var(--shiki-attr-value)"> run</span><span style="color:var(--shiki-attr-value)"> build:prod</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic"># Total build time: 3-8 minutes for a medium-sized app</span></span></code></pre>`),n(e);var i=a(e,8),C=s(i);t(C,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-comment);font-style:italic">// Material-UI (React only)</span></span>
<span class="line"><span style="color:#7DCFFF">import</span><span style="color:#9ABDF5"> &#123; </span><span style="color:#0DB9D7">Button</span><span style="color:var(--shiki-punctuation)">,</span><span style="color:#0DB9D7"> Card</span><span style="color:var(--shiki-punctuation)">,</span><span style="color:#0DB9D7"> TextField</span><span style="color:#9ABDF5"> &#125;</span><span style="color:#7DCFFF"> from</span><span style="color:var(--shiki-punctuation)"> '</span><span style="color:var(--shiki-attr-value)">@mui/material</span><span style="color:var(--shiki-punctuation)">'</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-attr-name)">function</span><span style="color:#7AA2F7"> MyComponent</span><span style="color:#9ABDF5">()</span><span style="color:#9ABDF5"> &#123;</span></span>
<span class="line"><span style="color:var(--shiki-attr-name);font-style:italic">  return</span><span style="color:#9ABDF5"> (</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;</span><span style="color:#DE5971">Card</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">      &#x3C;</span><span style="color:#DE5971">TextField </span><span style="color:var(--shiki-attr-name)">label</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">Email</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> variant</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">outlined</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)"> /></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">      &#x3C;</span><span style="color:#DE5971">Button </span><span style="color:var(--shiki-attr-name)">variant</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">contained</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> color</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">primary</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Submit</span><span style="color:var(--shiki-punctuation)">&#x3C;/</span><span style="color:#DE5971">Button</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;/</span><span style="color:#DE5971">Card</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:#9ABDF5">  )</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#9ABDF5">&#125;</span></span></code></pre>`),n(i);var r=a(i,20),H=s(r);t(H,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-comment);font-style:italic">/* Modern CSS can do what JavaScript used to handle */</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">/* Smooth animations */</span></span>
<span class="line"><span style="color:var(--shiki-attr-name)">@keyframes</span><span style="color:#E0AF68"> slideIn</span><span style="color:#9ABDF5"> &#123;</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  from </span><span style="color:#9ABDF5">&#123; </span><span style="color:#7AA2F7">transform</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:#0DB9D7"> translateX</span><span style="color:#9ABDF5">(</span><span style="color:#FF9E64">-100</span><span style="color:var(--shiki-punctuation)">%</span><span style="color:#9ABDF5">)</span><span style="color:var(--shiki-punctuation)">;</span><span style="color:#9ABDF5"> &#125;</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  to </span><span style="color:#9ABDF5">&#123; </span><span style="color:#7AA2F7">transform</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:#0DB9D7"> translateX</span><span style="color:#9ABDF5">(</span><span style="color:#FF9E64">0</span><span style="color:#9ABDF5">)</span><span style="color:var(--shiki-punctuation)">;</span><span style="color:#9ABDF5"> &#125;</span></span>
<span class="line"><span style="color:#9ABDF5">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">/* Complex layouts */</span></span>
<span class="line"><span style="color:#E0AF68">.</span><span style="color:var(--shiki-attr-value)">grid</span><span style="color:#9ABDF5"> &#123;</span></span>
<span class="line"><span style="color:#7AA2F7">  display</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:#FF9E64"> grid</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#7AA2F7">  grid-template-columns</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:#0DB9D7"> repeat</span><span style="color:#9ABDF5">(</span><span style="color:#FF9E64">auto-fit</span><span style="color:var(--shiki-punctuation)">,</span><span style="color:#0DB9D7"> minmax</span><span style="color:#9ABDF5">(</span><span style="color:#FF9E64">250</span><span style="color:var(--shiki-punctuation)">px,</span><span style="color:#FF9E64"> 1</span><span style="color:var(--shiki-punctuation)">fr</span><span style="color:#9ABDF5">))</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#7AA2F7">  gap</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:#FF9E64"> 1</span><span style="color:var(--shiki-punctuation)">rem;</span></span>
<span class="line"><span style="color:#9ABDF5">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">/* Interactive states */</span></span>
<span class="line"><span style="color:#E0AF68">.</span><span style="color:var(--shiki-attr-value)">dropdown</span><span style="color:#E0AF68">:</span><span style="color:var(--shiki-attr-name)">focus-within</span><span style="color:#E0AF68"> .</span><span style="color:var(--shiki-attr-value)">dropdown-content</span><span style="color:#9ABDF5"> &#123;</span></span>
<span class="line"><span style="color:#7AA2F7">  opacity</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:#FF9E64"> 1</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#7AA2F7">  transform</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:#0DB9D7"> translateY</span><span style="color:#9ABDF5">(</span><span style="color:#FF9E64">0</span><span style="color:#9ABDF5">)</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#9ABDF5">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">/* Dark mode support */</span></span>
<span class="line"><span style="color:var(--shiki-attr-name)">@media</span><span style="color:#9ABDF5"> (</span><span style="color:var(--shiki-punctuation)">prefers-color-scheme: dark</span><span style="color:#9ABDF5">)</span><span style="color:#9ABDF5"> &#123;</span></span>
<span class="line"><span style="color:#E0AF68">  :</span><span style="color:var(--shiki-attr-name)">root</span><span style="color:#9ABDF5"> &#123;</span></span>
<span class="line"><span style="color:#C0CAF5">    --bg-color</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:var(--shiki-token)"> #1a1a1a</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#C0CAF5">    --text-color</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:var(--shiki-token)"> #ffffff</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#9ABDF5">  &#125;</span></span>
<span class="line"><span style="color:#9ABDF5">&#125;</span></span></code></pre>`),n(r);var l=a(r,32),F=s(l);t(F,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-comment);font-style:italic">&#x3C;!-- Native form validation --></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;input</span><span style="color:var(--shiki-attr-name)"> type</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">email</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> required</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">&#x3C;!-- Native date picker --></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;input</span><span style="color:var(--shiki-attr-name)"> type</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">date</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">&#x3C;!-- Native disclosure widget --></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;details></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;summary></span><span style="color:var(--shiki-token)">Click to expand</span><span style="color:var(--shiki-punctuation)">&#x3C;/summary></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;p></span><span style="color:var(--shiki-token)">This content is hidden by default</span><span style="color:var(--shiki-punctuation)">&#x3C;/p></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;/details></span></span></code></pre>`),n(l);var p=a(l,12),B=s(p);t(B,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-comment);font-style:italic">&#x3C;!-- Complete interactive dropdown - no JavaScript required --></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;div</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">dropdown</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;label</span><span style="color:var(--shiki-attr-name)"> tabindex</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">0</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">btn m-1</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Menu</span><span style="color:var(--shiki-punctuation)">&#x3C;/label></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;ul</span><span style="color:var(--shiki-attr-name)"> tabindex</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">0</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">dropdown-content menu bg-base-100 rounded-box w-52 p-2 shadow</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;li>&#x3C;a</span><span style="color:var(--shiki-attr-name)"> href</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">/home</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Home</span><span style="color:var(--shiki-punctuation)">&#x3C;/a>&#x3C;/li></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;li>&#x3C;a</span><span style="color:var(--shiki-attr-name)"> href</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">/about</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">About</span><span style="color:var(--shiki-punctuation)">&#x3C;/a>&#x3C;/li></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;li>&#x3C;a</span><span style="color:var(--shiki-attr-name)"> href</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">/contact</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Contact</span><span style="color:var(--shiki-punctuation)">&#x3C;/a>&#x3C;/li></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;/ul></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;/div></span></span></code></pre>`),n(p);var c=a(p,8),S=s(c);t(S,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-comment);font-style:italic">&#x3C;!-- Plain HTML --></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;button</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">btn btn-primary</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Click me</span><span style="color:var(--shiki-punctuation)">&#x3C;/button></span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">&#x3C;!-- React --></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;button</span><span style="color:var(--shiki-attr-name)"> className</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">btn btn-primary</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Click me</span><span style="color:var(--shiki-punctuation)">&#x3C;/button></span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">&#x3C;!-- Vue --></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;button</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">btn btn-primary</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Click me</span><span style="color:var(--shiki-punctuation)">&#x3C;/button></span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">&#x3C;!-- Svelte --></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;button</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">btn btn-primary</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Click me</span><span style="color:var(--shiki-punctuation)">&#x3C;/button></span></span></code></pre>`),n(c);var h=a(c,14),D=s(h);t(D,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-comment);font-style:italic">&#x3C;!-- Properly accessible modal --></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;input</span><span style="color:var(--shiki-attr-name)"> type</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">checkbox</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> id</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">modal-toggle</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">modal-toggle</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)"> /></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;div</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">modal</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;div</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">modal-box</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> role</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">dialog</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> aria-labelledby</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">modal-title</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;h3</span><span style="color:var(--shiki-attr-name)"> id</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">modal-title</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">font-bold text-lg</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Confirmation</span><span style="color:var(--shiki-punctuation)">&#x3C;/h3></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;p</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">py-4</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Are you sure you want to delete this item?</span><span style="color:var(--shiki-punctuation)">&#x3C;/p></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;div</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">modal-action</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">      &#x3C;label</span><span style="color:var(--shiki-attr-name)"> for</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">modal-toggle</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">btn</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Cancel</span><span style="color:var(--shiki-punctuation)">&#x3C;/label></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">      &#x3C;label</span><span style="color:var(--shiki-attr-name)"> for</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">modal-toggle</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">btn btn-error</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Delete</span><span style="color:var(--shiki-punctuation)">&#x3C;/label></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;/div></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;/div></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;/div></span></span></code></pre>`),n(h);var u=a(h,8),A=s(u);t(A,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-comment);font-style:italic">/* Define a theme in pure CSS */</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">[</span><span style="color:var(--shiki-attr-name)">data-theme</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">corporate</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">] </span><span style="color:#9ABDF5">&#123;</span></span>
<span class="line"><span style="color:#C0CAF5">  --primary</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:var(--shiki-token)"> #4f46e5</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#C0CAF5">  --primary-content</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:var(--shiki-token)"> #ffffff</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#C0CAF5">  --secondary</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:var(--shiki-token)"> #7c3aed</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#C0CAF5">  --accent</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:var(--shiki-token)"> #f59e0b</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#C0CAF5">  --neutral</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:var(--shiki-token)"> #374151</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#C0CAF5">  --base-100</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:var(--shiki-token)"> #ffffff</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#C0CAF5">  --base-200</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:var(--shiki-token)"> #f3f4f6</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#C0CAF5">  --base-300</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:var(--shiki-token)"> #e5e7eb</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#9ABDF5">&#125;</span></span></code></pre>`),n(u);var v=a(u,8),Z=s(v);t(Z,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-comment);font-style:italic">&#x3C;!-- Responsive card layout --></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;div</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">card w-96 bg-base-100 shadow-xl</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;figure>&#x3C;img</span><span style="color:var(--shiki-attr-name)"> src</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">photo.jpg</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> alt</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">Photo</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)"> />&#x3C;/figure></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;div</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">card-body</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;h2</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">card-title</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Card Title</span><span style="color:var(--shiki-punctuation)">&#x3C;/h2></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;p></span><span style="color:var(--shiki-token)">Card description goes here.</span><span style="color:var(--shiki-punctuation)">&#x3C;/p></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;div</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">card-actions justify-end</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">      &#x3C;button</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">btn btn-primary</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Action</span><span style="color:var(--shiki-punctuation)">&#x3C;/button></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;/div></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;/div></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;/div></span></span></code></pre>`),n(v);var y=a(v,44),M=s(y);t(M,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-comment);font-style:italic">&#x3C;!-- Replace complex JavaScript buttons --></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;button</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">btn btn-primary</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Primary Action</span><span style="color:var(--shiki-punctuation)">&#x3C;/button></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;button</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">btn btn-secondary</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Secondary</span><span style="color:var(--shiki-punctuation)">&#x3C;/button></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;button</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">btn btn-outline</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Outline</span><span style="color:var(--shiki-punctuation)">&#x3C;/button></span></span></code></pre>`),n(y);var m=a(y,6),z=s(m);t(z,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-comment);font-style:italic">&#x3C;!-- Base functionality in CSS --></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;div</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">dropdown</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;label</span><span style="color:var(--shiki-attr-name)"> tabindex</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">0</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">btn</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Menu</span><span style="color:var(--shiki-punctuation)">&#x3C;/label></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;ul</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">dropdown-content menu</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;li>&#x3C;a></span><span style="color:var(--shiki-token)">Item 1</span><span style="color:var(--shiki-punctuation)">&#x3C;/a>&#x3C;/li></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    &#x3C;li>&#x3C;a></span><span style="color:var(--shiki-token)">Item 2</span><span style="color:var(--shiki-punctuation)">&#x3C;/a>&#x3C;/li></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">  &#x3C;/ul></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;/div></span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">&#x3C;!-- Enhanced with minimal JavaScript if needed --></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;script></span></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">// Optional: Close dropdown when clicking outside</span></span>
<span class="line"><span style="color:#C0CAF5">document</span><span style="color:var(--shiki-punctuation)">.</span><span style="color:#7AA2F7">addEventListener</span><span style="color:#9ABDF5">(</span><span style="color:var(--shiki-punctuation)">'</span><span style="color:var(--shiki-attr-value)">click</span><span style="color:var(--shiki-punctuation)">'</span><span style="color:var(--shiki-punctuation)">,</span><span style="color:#9ABDF5"> (</span><span style="color:#E0AF68">e</span><span style="color:#9ABDF5">)</span><span style="color:var(--shiki-attr-name)"> =></span><span style="color:#9ABDF5"> &#123;</span></span>
<span class="line"><span style="color:var(--shiki-attr-name)">  if</span><span style="color:#9ABDF5"> (</span><span style="color:var(--shiki-attr-name)">!</span><span style="color:#C0CAF5">e</span><span style="color:var(--shiki-punctuation)">.</span><span style="color:#7DCFFF">target</span><span style="color:var(--shiki-punctuation)">.</span><span style="color:#7AA2F7">closest</span><span style="color:#9ABDF5">(</span><span style="color:var(--shiki-punctuation)">'</span><span style="color:var(--shiki-attr-value)">.dropdown</span><span style="color:var(--shiki-punctuation)">'</span><span style="color:#9ABDF5">)) &#123;</span></span>
<span class="line"><span style="color:#C0CAF5">    document</span><span style="color:var(--shiki-punctuation)">.</span><span style="color:#7DCFFF">activeElement</span><span style="color:var(--shiki-punctuation)">.</span><span style="color:#7AA2F7">blur</span><span style="color:#9ABDF5">()</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:#9ABDF5">  &#125;</span></span>
<span class="line"><span style="color:#9ABDF5">&#125;)</span><span style="color:var(--shiki-punctuation)">;</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;/script></span></span></code></pre>`),n(m),_(20),T(f,d)},$$slots:{default:!0}}))}export{aa as component};
