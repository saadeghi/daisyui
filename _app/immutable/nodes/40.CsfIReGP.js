import"../chunks/DsnmJJEf.js";import"../chunks/DHMwis4v.js";import{f as ea,a as ta,s as t,d as a,b as sa,r as e}from"../chunks/DpCVmHgD.js";import{h as S}from"../chunks/DzKh18oq.js";import{l as na,s as ia}from"../chunks/BPOyD3kM.js";import{L as ra}from"../chunks/CXOZIPbH.js";import{T as s}from"../chunks/DS0p07N7.js";const U={title:"daisyUI is a minimal CSS framework",desc:"Why daisyUI is the simple, minimal alternative to heavy component libraries and complex CSS frameworks",layout:"contentLanding"},{title:ya,desc:ba,layout:fa}=U;var oa=ea('<p><!></p> <ul><li><!></li> <li><!></li> <li><!></li> <li><!></li></ul> <p><!></p> <h2 id="why-daisyui-is-different"><a href="#why-daisyui-is-different" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a><span data-heading-text="Why daisyUI is different"><!></span></h2> <p><!></p> <ul><li><!></li> <li><!></li> <li><!></li> <li><!></li> <li><!></li></ul> <h2 id="see-the-difference-before-and-after-daisyui"><a href="#see-the-difference-before-and-after-daisyui" class="no-underline"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a><span data-heading-text="See the difference: before and after daisyUI"><!></span></h2> <p><!></p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p><!></p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p><!></p> <p><!></p>',1);function ga($,L){const M=na(L,["children","$$slots","$$events","$$legacy"]);ra($,ia(()=>M,()=>U,{children:(T,la)=>{var _=oa(),n=ta(_),W=a(n);s(W,{text:'Building modern UIs often means dealing with a lot of bloat. Many <a href="/pages/easy-component-library/">component libraries</a> are tied to a specific framework, come with a pile of dependencies, and add a lot of weight to your project. You end up with:'}),e(n);var i=t(n,2),r=a(i),Z=a(r);s(Z,{text:"Huge bundle sizes that slow down your site"}),e(r);var o=t(r,2),B=a(o);s(B,{text:"Dozens of dependencies to keep updated (and hope they don't break)"}),e(o);var l=t(o,2),N=a(l);s(N,{text:"Locked-in markup that's hard to reuse outside that framework"}),e(l);var z=t(l,2),j=a(z);s(j,{text:"Complex build steps and configuration"}),e(z),e(i);var p=t(i,2),A=a(p);s(A,{text:"All of this makes your project harder to manage and slows down your workflow."}),e(p);var d=t(p,2),H=t(a(d)),F=a(H);s(F,{text:"Why daisyUI is different"}),e(H),e(d);var c=t(d,2),Y=a(c);s(Y,{text:'daisyUI is a minimal CSS framework built on top of <a href="/pages/tailwind-css/">Tailwind CSS</a>. It gives you the building blocks you need—like buttons, cards, and alerts—without the baggage:'}),e(c);var h=t(c,2),v=a(h),q=a(v);s(q,{text:"No JavaScript required"}),e(v);var u=t(v,2),D=a(u);s(D,{text:"No framework lock-in (works with any frontend stack)"}),e(u);var m=t(u,2),J=a(m);s(J,{text:"Tiny footprint compared to big libraries"}),e(m);var y=t(m,2),P=a(y);s(P,{text:"Simple class names that are easy to remember"}),e(y);var V=t(y,2),E=a(V);s(E,{text:"No extra dependencies to manage"}),e(V),e(h);var b=t(h,2),C=t(a(b)),G=a(C);s(G,{text:"See the difference: before and after daisyUI"}),e(C),e(b);var f=t(b,2),K=a(f);s(K,{text:"Here's what a real-world button with dark mode support looks like with plain Tailwind CSS:"}),e(f);var g=t(f,2),O=a(g);S(O,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;button</span></span>
<span class="line"><span style="color:var(--shiki-attr-name)">  class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">bg-zinc-100 border font-semibold text-zinc-900 </span></span>
<span class="line"><span style="color:var(--shiki-attr-value)">  text-sm px-4 duration-200 py-2.5 transition-all hover:border-zinc-300 </span></span>
<span class="line"><span style="color:var(--shiki-attr-value)">  hover:bg-zinc-200 focus-visible:outline-2 focus-visible:outline-offset-2 </span></span>
<span class="line"><span style="color:var(--shiki-attr-value)">  focus-visible:outline-zinc-900 active:translate-y-[0.5px] inline-flex gap-2 </span></span>
<span class="line"><span style="color:var(--shiki-attr-value)">  rounded-sm active:border-zinc-300 active:bg-zinc-200 active:shadow-none </span></span>
<span class="line"><span style="color:var(--shiki-attr-value)">  text-center align-middle cursor-pointer border-zinc-200 dark:border-zinc-700 </span></span>
<span class="line"><span style="color:var(--shiki-attr-value)">  dark:bg-neutral-700 dark:text-zinc-300 dark:hover:border-zinc-950 </span></span>
<span class="line"><span style="color:var(--shiki-attr-value)">  dark:hover:bg-zinc-950 dark:focus-visible:outline-zinc-200 </span></span>
<span class="line"><span style="color:var(--shiki-attr-value)">  dark:active:border-zinc-950 dark:active:bg-zinc-900</span><span style="color:var(--shiki-punctuation)">"</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">></span></span>
<span class="line"><span style="color:var(--shiki-token)">  Click Me</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;/button></span></span></code></pre>`),e(g);var k=t(g,2),Q=a(k);s(Q,{text:"And here's the same button with daisyUI:"}),e(k);var w=t(k,2),R=a(w);S(R,()=>'<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;button</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">btn</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">></span><span style="color:var(--shiki-token)">Click Me</span><span style="color:var(--shiki-punctuation)">&#x3C;/button></span></span></code></pre>'),e(w);var x=t(w,2),X=a(x);s(X,{text:"With daisyUI, you get the same features—hover, focus, disabled states, and more—without the wall of class names. Your code is easier to read and maintain."}),e(x);var I=t(x,2),aa=a(I);s(aa,{text:"If you want a minimal, practical way to build UIs—without the headaches—daisyUI is a great choice."}),e(I),sa(T,_)},$$slots:{default:!0}}))}export{ga as component};
