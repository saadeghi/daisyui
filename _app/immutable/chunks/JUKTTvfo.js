const Ae="ZH",_e="ltr",Me="中文",je="",e="Code 代码",Le="或",He="个组件",Re="组件",o="Join 组合",ze="组件",De="安装",Ne="文档",We="个主题",Fe="主题",Be="页面",Ye="商店",t="Button 按钮",a="Swap 交换",s="Alert 警告",i="Stat 统计",n="Checkbox 复选框",r="Toggle 开关",l="Drawer 抽屉",d="Mask 遮罩",c="Toast 轻提示",Ee="导航",u="Link 链接",h="Menu 菜单",m="Navbar 导航栏",Ve="警告",Je="类型",Oe="搜索",Ge="告别",qe="您",Ke="自己的",p="Browser 浏览器",Ze="博客",Qe="统计",Xe="链接",$e="使用",eo="颜色",y="Avatar 头像",g="Card 卡片",b="Progress 进度条",f="Tooltip 文字提示",S="Radio 单选框",w="Range 范围滑块",I="Select 选择器",C="Divider 分隔线",k="Footer 页脚",v="Hero 广告栏",T="Tab 选项卡",U="Mockup 模型",x="Window 窗口",oo="上一页",to="下一页",ao="选项卡",so="预览",P="更快、更简洁、更简单的<br/>Tailwind&nbsp;CSS 开发。",A="daisyUI 是一个你一定会喜欢的 Tailwind CSS 插件。<br/>它提供了丰富的组件类名，<br/>帮助你用更少的代码，更快地构建应用程序。",io="特性",no="链接",ro="消息",lo="可定制",_="可主题化",co="仪表盘",uo="通知",ho="消息",mo="用户",po="产品",yo="结果",go="丑陋的",M="HTML",bo="！",fo="点击",So="保存",wo="应用",Io="设计",Co="决策",j="Loading 加载",L="Glass 玻璃拟物",ko="配置",H="全局配置",R="Modal 对话框",vo="布局",To="排版",Uo="介绍",z="更新日志",D="贡献指南",xo="操作",N="Dropdown 下拉菜单",Po="更新",W="Diff 对比",Ao="赞助商",F="Rating 评分",_o="已更新",Mo="反馈",B="Badge 徽章",Y="Table 表格",jo="响应式",E="Steps 步骤条",Lo="重置",Ho="许可证",V="Skeleton 骨架屏",Ro="修饰类",zo="优点",J="Collapse 折叠面板",O="Accordion 手风琴",G="Indicator 指示器",q="Breadcrumbs 面包屑",K="Carousel 走马灯",Z="Countdown 倒计时",Q="Phone 手机",X="Kbd 键盘按键",$="Pagination 分页",ee="Stack 堆叠",oe="Textarea 多行文本框",te="Timeline 时间轴",Do="排除",ae="Artboard 画板",se="随机主题",No="资源",ie="root",ne="include",re="exclude",le="prefix",de="logs",Wo="描述",Fo="字符串",Bo="布尔值",Yo="输入",Eo="列表",ce="primary",ue="secondary",he="accent",me="neutral",pe="info",ye="success",ge="warning",be="error",Vo="块引用",Jo="图片",Oo="结论",Go="斜体",qo="粗体",Ko="功能",Zo="状态",Qo="激活",fe="daisyUI",Se="Markdown",Xo="流行",$o="可用",we="properties",Ie="rootcolor",Ce="scrollbar",ke="rootscrolllock",ve="rootscrollgutter",et="svg",ot="名称",Te="Cursor",tt="Zed",at="千",st="位置",it="修饰符",nt="结构",rt="功能",lt="默认",dt="宽",ct="块",Ue="即将推出",ut="一",ht="二",mt="三",pt="特小",yt="小",gt="中",bt="大",ft="特大",St="新",wt="收件箱",It="请求",Ct="在线",kt="必填",vt="订阅",Tt="查看",Ut="中性色",xt="主色",Pt="次要色",At="强调色",_t="信息色",Mt="成功色",xe="幽灵按钮",jt="喜欢",Lt="加载中",Ht="标题",Rt="别名",zt="作者",Pe="电子邮件",Dt="密码",Nt="登录",Wt="合成波",Ft="可选",Bt="收件箱",Yt={__code:"ZH",__direction:"ltr",__name:"中文",__status:"",Code:e,Or:"或","cta-1-mobile":"组件","components-btn":"组件",components:"个组件",Component:"组件",Join:o,Components:"组件",Install:"安装",Docs:"文档","change-theme-btn":"主题",themes:"个主题",Themes:"主题",pages:"页面",Store:"商店",Button:t,Swap:a,Alert:s,Stat:i,Checkbox:n,Toggle:r,Drawer:l,Mask:d,Toast:c,Navigation:"导航",Link:u,Menu:h,Navbar:m,new:"新增",Warning:"警告",Type:"类型",Search:"搜索",No_more_ugly_HTML_part_1:"告别",Apply_your_own_design_decisions_part_2:"您",Apply_your_own_design_decisions_part_3:"自己的",Browser:p,Blog:"博客","etc.":"等。",Stats:"统计","cta-1":"浏览组件","cta-2":"查看使用方法","all-components-btn":"查看所有组件","npm-installs":"NPM 安装次数","install-title":"安装 daisyUI","install-btn":"安装指南","how-to-customize":"如何自定义",links:"链接",Use:"使用",Colors:"颜色","Theme Generator":"主题生成器",Avatar:y,Card:g,"Chat bubble":"Chat bubble 聊天气泡",Progress:b,Tooltip:f,Radio:S,Range:w,Select:I,Divider:C,Footer:k,Hero:v,Tab:T,Mockup:U,Window:x,"Install daisyUI":"安装 daisyUI",Prev:"上一页",Next:"下一页",Tabs:"选项卡","All daisyUI components":"所有 daisyUI 组件","Class name":"类名",Preview:"预览",homepage_h1:P,homepage_h2:A,"In a Tailwind CSS project, you need to write utility class names for every element. Thousands of class names just to style the most basic elements.":"在 Tailwind CSS 项目中，你需要为每个元素编写大量工具类名。仅仅是为最基础的元素设计样式，就可能需要成百上千个类名。","instead of writing<br /> <span class='text-error'><span class='font-black'>100</span> class names</span>":"代替编写<br /> <span class='text-error'><span class='font-black'>100</span> 个类名</span>","For every element, every page, every project,<br/>again and again":"为每个元素、每个页面、每个项目，<br/>一遍又一遍地重复。","use <span class='text-success'><span class='font-black'>semantic</span> <br />class names</span>":"使用<span class='text-success'><span class='font-black'>语义化</span> <br />的类名</span>","It's descriptive, faster, cleaner and easier to maintain.":"它具有描述性，更快、更简洁，且易于维护。",Features:"特性",Links:"链接",Message:"消息","Cleaner HTML":"更简洁的 HTML",Customizable:"可定制",Themeable:_,"Pure CSS":"纯 CSS",Dashboard:"仪表盘",Notifications:"通知",Messages:"消息",People:"用户",Products:"产品","Use Tailwind CSS but write fewer class names.":"使用 Tailwind CSS，但编写更少的类名。","Pure CSS. <br />No JS dependency":"纯 CSS。<br />无 JS 依赖","Works on all frameworks":"适用于所有框架","Design system":"设计系统","Styling a simple button":"为一个简单按钮设置样式",Result:"结果","Take Tailwind CSS":"让 Tailwind CSS","to the next level":"更上一层楼","daisyUI adds class names to Tailwind CSS<br />for all common UI components.<br />Class names like":"daisyUI 为 Tailwind CSS 添加了<br/>适用于所有常见 UI 组件的类名，<br/>例如","and many more.":"等等。","This allows us to focus on important things<br />instead of styling basic elements for every project.":"这让我们能专注于重要的事情，<br/>而不是为每个项目的基本元素重复设计样式。",No_more_ugly_HTML_part_2:"丑陋的",No_more_ugly_HTML_part_3:M,No_more_ugly_HTML_part_4:"！","Write fewer class names<br />Use component class names<br />modify them using Tailwind CSS utilities.":"编写更少的类名，<br />使用组件类名，<br />并使用 Tailwind CSS 工具类进行修改。",Click:"点击","Tailwind only":"仅使用 Tailwind CSS","Tailwind + daisyUI":"Tailwind CSS + daisyUI",Save:"保存","Accept terms of use":"接受使用条款","Submit to newsletter":"订阅新闻邮件","Fewer class names":"更少的类名","Faster development":"更快的开发速度","Smaller file size":"更小的文件体积","With daisyUI, you write 88% fewer class names<br />And your HTML size will be about 79% smaller.":"使用 daisyUI，您可以少写 88% 的类名，<br />HTML 文件大小将减小约 79%。","CSS Class names":"CSS 类名","fewer class names":"更少的类名","HTML size":"HTML 大小","smaller DOM size":"更小的 DOM 大小","Highly customizable":"高度可定制","Powered by Tailwind&nbsp;CSS utility&nbsp;classes":"由 Tailwind CSS 工具类驱动","daisyUI is built on top of Tailwind&nbsp;CSS so you can customize everything using utility classes.":"daisyUI 基于 Tailwind&nbsp;CSS 构建，<br />因此您可以使用工具类定制一切。","Pure CSS.":"纯 CSS。","Framework agnostic.":"框架无关。","Works everywhere.":"随处可用。","daisyUI is a plugin for Tailwind CSS. It works on all JS frameworks and doesn't need a JS bundle file.":"daisyUI 是一个 Tailwind CSS 插件。它适用于所有 JS 框架，且无需额外的 JS 文件。","Install daisyUI as a dev dependency and use the class names just like any other Tailwind CSS class name.":"将 daisyUI 作为开发依赖项安装，并像使用其他 Tailwind CSS 工具类一样使用它的类名。",Apply_your_own_design_decisions_part_1:"应用",Apply_your_own_design_decisions_part_4:"设计",Apply_your_own_design_decisions_part_5:"决策","Your website should be unique. Create a custom theme for yourself using daisyUI theme generator. The colors you pick will be applied to all daisyUI components.":"您的网站应当独一无二。使用 daisyUI 主题生成器为自己创建一个定制主题。您选择的颜色将应用于所有 daisyUI 组件。","Learn more about themes":"了解更多关于主题的信息","utility classes":"个工具类","endless possibilities":"无限可能","Mix and match daisyUI class names to create unique web pages.":"混合搭配 daisyUI 类名，创建独特的网页。","daisyUI is the most popular<br />component library for Tailwind&nbsp;CSS":"daisyUI 是最流行的<br /> Tailwind&nbsp;CSS 组件库","open-source projects using daisyUI":"个使用 daisyUI 的开源项目","Try daisyUI":"尝试 daisyUI","on your favorite framework":"在您最喜欢的框架上","See all examples":"查看所有示例","Or play with daisyUI on":"或者在线尝试 daisyUI","Semantic colors":"语义化颜色","Get started":"开始使用",Loading:j,Glass:L,"how-to-install":"如何安装",config:"配置",Config:H,Modal:R,Layout:"布局","For example":"例如：","Read more":"阅读更多",Typography:"排版",Introduction:"介绍","How to use":"如何使用","color-system":"颜色系统",changelog:z,contributing:D,Actions:"操作",Dropdown:N,"daisyUI themes":"daisyUI 主题",Updates:"更新",Diff:W,Sponsors:"赞助商","Tailwind CSS Components":"Tailwind CSS 组件",Rating:F,updated:"已更新",Feedback:"反馈",Badge:B,Table:Y,Responsive:"响应式","CSS variables":"CSS 变量",Steps:E,Reset:"重置","Also, using semantic color names makes theming easier. You wouldn't have to define dark-mode colors for every single element and you wouldn't be limited to only light/dark themes. you can have multiple themes available and each theme is just a few lines of CSS variables.":"此外，使用语义化颜色名称使主题化变得更容易。您不必为每个元素都定义深色模式的颜色，也不再局限于仅有浅色/深色主题。您可以拥有多个可用主题，每个主题都只是一些 CSS 变量。",license:"许可证","created-by":"创建者","Free and open-source":"免费且开源","Default config":"默认配置",Skeleton:V,Modifier:"修饰类","available-on":"获取渠道","Border radius":"边框半径",Benefits:"优点",Collapse:J,Accordion:O,"Accordion is used for showing and hiding content but only one item can stay open at a time.":"手风琴用于显示和隐藏内容，但一次只能展开一个项目。","Using Accordion and Join together":"Accordion 手风琴和 Join 组合一起使用","All radio inputs with the same name work together and only one of them can be open at a time. If you have more than one set of accordion items on a page, use different names for the radio inputs on each set.":"所有同名的单选框（radio）协同工作，一次只能展开一个。如果页面上有多个手风琴组件，请为每组手风琴中的单选框使用不同的 `name` 属性。","Alert informs users about important events.":"警告框（Alert）用于向用户提示重要的事件信息。","Container element":"容器元素",Indicator:G,"Avatars are used to show a thumbnail representation of an individual or business in the interface.":"头像（Avatar）用于在界面中显示个人或企业的缩略图。","Badges are used to inform the user of the status of specific data.":"徽章（Badge）用于告知用户特定数据的状态。",Breadcrumbs:q,"Breadcrumbs helps users to navigate through the website.":"面包屑（Breadcrumbs）可以帮助用户在网站中导航。","Buttons allow the user to take actions or make choices.":"按钮（Button）允许用户执行操作或做出选择。","Cards are used to group and display content in a way that is easily readable.":"卡片（Card）用于以易于阅读的方式对内容进行分组和展示。",Carousel:K,"Carousel show images or content in a scrollable area.":"走马灯（Carousel）在一个可滚动的区域内展示图片或内容。","Chat bubbles are used to show one line of conversation and all its data, including the author image, author name, time, etc.":"聊天气泡（Chat bubble）用于显示一行对话及其所有数据，包括作者头像、姓名、时间等。","Checkboxes are used to select or deselect a value.":"复选框（Checkbox）用于选中或取消选中一个值。","Collapse is used for showing and hiding content.":"折叠面板（Collapse）用于显示和隐藏内容。",Countdown:Z,"Diff component shows a side-by-side comparison of two items.":"对比组件（Diff）并排展示两个项目的差异。","Divider will be used to separate content vertically or horizontally.":"分隔线（Divider）用于垂直或水平地分隔内容。","Bottom navigation":"Bottom navigation 底部导航","Drawer is a grid layout that can show/hide a sidebar on the left or right side of the page.":"抽屉（Drawer）是一种网格布局，可以在页面的左侧或右侧显示/隐藏侧边栏。","Dropdown can open a menu or any other element when the button is clicked.":"下拉菜单（Dropdown）可以在按钮被点击时打开一个菜单或任何其他元素。","More examples":"更多示例","File Input is a an input field for uploading files.":"文件输入框是用于上传文件的输入字段。","File Input":"File Input 文件输入框",Phone:Q,"Footer can contain logo, copyright notice, and links to other pages.":"页脚（Footer）可以包含标志、版权声明以及指向其他页面的链接。","Hero is a component for displaying a large box or image with a title and description.":"广告栏（Hero）是用于展示一个带有标题和描述的大尺寸区块或图片的组件。","Indicators are used to place an element on the corner of another element.":"指示器（Indicator）用于将一个元素放置在另一个元素的角落。",Kbd:X,"Text input":"Text input 文本输入框","Text Input is a simple input field.":"文本输入框（Text input）是一个简单的输入字段。","Text Input":"文本输入框","Kbd is used to display keyboard shortcuts.":"键盘按键（Kbd）用于展示键盘快捷键的样式。","Link adds the missing underline style to links.":"链接（Link）为 a 标签添加了缺失的下划线样式。","Loading shows an animation to indicate that something is loading.":"加载（Loading）动画用于指示某些内容正在加载。","Mask crops the content of the element to common shapes.":"遮罩（Mask）将元素的内容裁剪成常见的形状。","Menu is used to display a list of links vertically or horizontally.":"菜单（Menu）用于垂直或水平地显示一个链接列表。","Browser mockup":"浏览器模型","Browser mockup shows a box that looks like a browser window.":"浏览器模型（Browser mockup）展示一个看起来像浏览器窗口的框体。","Code mockup is used to show a block of code in a box that looks like a code editor.":"代码模型（Code mockup）用于在一个看起来像代码编辑器的框体中展示代码块。","Code mockup":"代码模型","Phone mockup shows a mockup of an iPhone.":"手机模型（Phone mockup）展示一个 iPhone 样式的模型。","Phone mockup":"手机模型","Window mockup shows a box that looks like an operating system window.":"窗口模型（Window mockup）展示一个看起来像操作系统窗口的框体。","Window mockup":"窗口模型","Modal is used to show a dialog or a box when you click a button.":"对话框（Modal）用于在点击按钮时显示一个对话框或弹窗。","Navbar is used to show a navigation bar on the top of the page.":"导航栏（Navbar）用于在页面顶部显示一个导航区域。",Pagination:$,"Pagination is a group of buttons that allow the user to navigate between a set of related content.":"分页（Pagination）是一组按钮，允许用户在一系列相关内容之间进行导航。","Progress bar can be used to show the progress of a task or to show the passing of time.":"进度条（Progress）可以用来显示任务的进展，或表示时间的流逝。","Radial progress":"Radial progress 环形进度条","Radial progress can be used to show the progress of a task or to show the passing of time.":"环形进度条（Radial progress）可以用来显示任务的进展，或表示时间的流逝。","Radio buttons allow the user to select one option from a set.":"单选框（Radio）允许用户从一组选项中选择一个。","Range slider is used to select a value by sliding a handle.":"范围滑块（Range slider）用于通过滑动滑块来选择一个值。","Range slider":"范围滑块","Rating is a set of radio buttons that allow the user to rate something.":"评分（Rating）是一组单选框，允许用户对某事物进行评分。","Select is used to pick a value from a list of options.":"选择器（Select）用于从选项列表中选择一个值。","Skeleton is a component that can be used to show a loading state of a component.":"骨架屏（Skeleton）是用于展示组件加载状态的占位组件。",Stack:ee,"Stack visually puts elements on top of each other.":"堆叠（Stack）在视觉上将元素堆叠在一起。","Steps can be used to show a list of steps in a process.":"步骤条（Steps）可以用来显示一个流程中的步骤列表。","Swap allows you to toggle the visibility of two elements using a checkbox or a class name.":"交换（Swap）允许您使用复选框或类名来切换两个元素的可见性。","Tabs can be used to show a list of links in a tabbed format.":"选项卡（Tab）可以用来以选项卡的形式显示一个链接列表。","Table can be used to show a list of data in a table format.":"表格（Table）可以用来以表格的形式展示数据列表。",Textarea:oe,"Textarea allows users to enter text in multiple lines.":"多行文本框（Textarea）允许用户输入多行文本。","Theme Controller":"Theme Controller 主题控制器","If a checked checkbox input or a checked radio input with theme-controller class exists in the page, The page will have the same theme as that input's value.":"如果页面中存在带有 `theme-controller` 类的已选中复选框或单选框，页面将应用与该输入框的 `value` 值相同的主题。",Timeline:te,"Timeline component shows a list of events in chronological order.":"时间轴（Timeline）组件按时间顺序显示事件列表。","Toast is a wrapper to stack elements, positioned on the corner of page.":"轻提示（Toast）是一个用于堆叠元素的包装器，通常位于页面的角落。","Toggle is a checkbox that is styled to look like a switch button.":"开关（Toggle）是一种样式类似开关按钮的复选框。","Tooltip can be used to show a message when hovering over an element.":"文字提示（Tooltip）用于在鼠标悬停或点击某个元素时显示一条消息。","You don't need to install anything.":"您无需安装任何东西。","Just add one of these to the <code>head</code> tag of your HTML":"只需将以下任一代码添加到您 HTML 的 <code>&lt;head&gt;</code> 标签中","Use daisyUI from CDN":"通过 CDN 使用 daisyUI","How to use daisyUI from a CDN?":"如何通过 CDN 使用 daisyUI？","How to use daisyUI colors?":"如何使用 daisyUI 的颜色？","daisyUI is fully themeable and colorable,":"daisyUI 是完全可主题化和可着色的，","So instead of using constant color utility classes like:":"因此，与其使用像下面这样的固定颜色工具类：","It's suggested to use semantic color utility classes like:":"我们建议使用语义化的颜色工具类，例如：","Each color name contains CSS variables and each daisyUI theme applies color values to the utility classes when it is applied.":"每个颜色名称都包含 CSS 变量，当应用某个 daisyUI 主题时，它会为这些工具类赋予相应的颜色值。","Semantic color names make more sense because when we design interfaces, we don't just use any random color. We define a specific color palette with names like <code>primary</code>, <code>secondary</code>, etc. and we only use those specific colors in our interfaces.":"语义化的颜色名称更有意义，因为在设计界面时，我们不会随意使用颜色。我们会定义一个特定的调色板，并使用 <code>primary</code>、<code>secondary</code> 等名称来命名，然后在界面中只使用这些特定的颜色。","List of all daisyUI color names":"所有 daisyUI 颜色名称列表","You can use these color names in your theme or in utility classes.":"您可以在您的主题或工具类中使用这些颜色名称。","Some daisyUI components come with modifier class names and that modifier class name will apply a color.":"一些 daisyUI 组件带有修饰类名，这些修饰类名会应用一种颜色。","You can also use color names in utility classes just like Tailwind's original color names.":"您也可以像使用 Tailwind 的原生颜色名称一样，在工具类中使用这些颜色名称。","These are utility classes that can be used with a color name:":"以下是可与颜色名称一起使用的工具类：","Unlimited themes":"无限主题","Color utility classes":"颜色工具类",excluded:"排除","How to change the default configuration of daisyUI?":"如何更改 daisyUI 的默认配置？","List of themes":"主题列表","Customize daisyUI components":"自定义 daisyUI 组件","How to customize daisyUI?":"如何自定义 daisyUI？","daisyUI components come with many variants necessary for design systems and you won't usually need to customize anything.":"daisyUI 组件自带了设计系统所需的多种变体，通常您不需要自定义任何东西。","But you can still customize components in many ways.":"但是，您仍然可以通过多种方式自定义组件。","Let's say, you want to customize this button:":"比方说，您想自定义这个按钮：","You can use daisyUI utility classes:":"您可以使用 daisyUI 的工具类：","You can use Tailwind's utility classes:":"您可以使用 Tailwind 的工具类：","You can customize components on your CSS file, using Tailwind's @apply directive:":"您可以在 CSS 文件中，使用 Tailwind 的 @apply 指令来自定义组件：","You need <a target=_blank' href='https://nodejs.org/en/download/'>Node.js</a> and <a target='_blank' href='https://tailwindcss.com/docs/installation/'>Tailwind CSS</a> installed.":"您需要先安装 <a target='_blank' href='https://nodejs.org/en/download/'>Node.js</a> 和 <a target='_blank' href='https://tailwindcss.com/docs/installation/'>Tailwind CSS</a>。","How to install daisyUI as a Tailwind CSS plugin?":"如何将 daisyUI 作为 Tailwind CSS 插件安装？","See example setup of daisyUI and Tailwind CSS on different frameworks and build tools.":"查看在不同框架和构建工具中设置 daisyUI 和 Tailwind CSS 的示例项目。","Layout and Typography":"布局和排版","How to use layouts and typography in daisyUI":"如何在 daisyUI 中使用布局和排版","Layout, sizing, grids, spacing, etc. all will be handled by Tailwind CSS's utility classes.":"布局、尺寸、网格、间距等，都将由 Tailwind CSS 的工具类来处理。","Try them:":"试试看：","How to use a theme only for a section of a page?":"如何仅在页面的某个部分使用主题？","Add <code>data-theme='THEME_NAME'</code> to any element and everything inside will have your theme.":"为任何元素添加 <code>data-theme='THEME_NAME'</code> 属性，其内部的所有内容都将应用该主题。","You can nest themes and there is no limit!":"您可以嵌套主题，没有限制！","You can force a section of your HTML to only use a specific theme.":"您可以强制让 HTML 的某个部分只使用一个特定的主题。","How to add a new custom theme?":"如何添加新的自定义主题？","How to customize an existing theme?":"如何自定义现有主题？","How to use daisyUI themes?":"如何使用 daisyUI 主题？","How to add custom styles for a specific theme?":"如何为特定主题添加自定义样式？","You can write custom style for your elements only for a specific theme.":"您可以只为特定主题的元素编写自定义样式。","Add component classes to your HTML":"为您的 HTML 添加组件类","How to use daisyUI classes to style your page?":"如何使用 daisyUI 的类来为您的页面设计样式？","Once you <a href='/docs/install/'>installed daisyUI</a>, you can use component classes like <code>btn</code>, <code>card</code>, etc.":"一旦您 <a href='/docs/install/'>安装了 daisyUI</a>，就可以使用像 <code>btn</code>、<code>card</code> 这样的组件类。","So instead of making a button using only utility classes":"因此，无需再像这样只用工具类来创建一个按钮：","You can just use a component class like this":"您可以只使用一个组件类，像这样：","Then you can modify the component with daisyUI additional utility classes":"然后您可以使用 daisyUI 的附加工具类来修改该组件：","Or you can modify the component with Tailwind CSS utility classes":"或者您也可以使用 Tailwind CSS 的工具类来修改该组件：","Utility classes and CSS variables":"工具类和 CSS 变量","Component specific CSS variables":"组件特定的 CSS 变量","These CSS variables are being used internally for a specific component":"这些 CSS 变量在特定组件内部使用",Artboard:ae,Randomize:se,"To use a custom prefix, <a class='link' href='/docs/config/#prefix'>add your prefix string to config</a>":"要使用自定义前缀，请<a class='link' href='/docs/config/#prefix'>在配置中添加您的前缀字符串</a>","Do you have a question?":"您有问题吗？","Do you see a bug?":"您发现了一个 bug 吗？","Do you like daisyUI?":"您喜欢 daisyUI 吗？","Edit this page on GitHub":"在 GitHub 上编辑此页","open an issue on GitHub":"在 GitHub 上提交 issue","Contribute to translation":"贡献翻译","Support daisyUI's development":"支持 daisyUI 的开发","footer-tagline":"免费的组件库<br/>为工具类优先的 CSS 框架而生","how-to-use-components":"如何使用组件","how-to-use-themes":"如何使用主题","try-online":"在线试用","related projects":"相关项目","Become a sponsor":"成为赞助商","Make your theme":"制作您的主题","Admin panel":"管理面板","with zero effort":"毫不费力","daisyUI adds a set of customizable color names to Tailwind CSS and these new colors use CSS variables for the values. Using daisyUI color names, you get Dark Mode and even more themes without adding a new class name.":"daisyUI 为 Tailwind CSS 添加了一组可自定义的颜色名称，这些新颜色使用 CSS 变量作为其值。通过使用 daisyUI 的颜色名称，您无需添加任何新的类名即可获得深色模式以及更多主题。","See all themes":"查看所有主题","Learn more about colors":"了解更多关于颜色的信息","install-step-1":"将 daisyUI 作为 Node 包安装","install-step-2":"在您的 app.css 文件中添加 daisyUI 的指令","Built by the community":"由社区构建","daisyUI welcomes contributions from developers around the world":"daisyUI 欢迎来自世界各地的开发者贡献","Sponsors and backers":"赞助商和支持者",Resources:"资源","Active buttons":"激活状态的按钮","Outline buttons":"轮廓按钮","Button sizes":"按钮尺寸","Responsive button":"响应式按钮","This button will have different sizes on different browser viewpoints":"在不同大小的浏览器视口中，这个按钮将会有不同的大小","Wide button":"宽按钮","Disabled buttons":"禁用按钮","Square button":"方形按钮","Button with loading spinner":"带加载动画的按钮","Click outside to close":"点击外部区域关闭","Dropdown menu":"下拉菜单","Support daisyUI":"支持 daisyUI","Button block":"块级按钮","Modal that closes when clicked outside":"点击外部区域即可关闭的对话框","Modal using anchor link":"使用锚链接的对话框","If you set max-width or the list gets larger than the container it will scroll":"如果您设置了最大宽度，或者列表变得比容器大，它将会滚动。","to join the items together and handle border radius automatically":"将项目连接在一起，并自动处理边框半径。","This collapse works with focus. When div loses focus, it gets closed":"这个折叠面板通过焦点工作。当 div 失去焦点时，它就会关闭。","This collapse works with checkbox instead of focus. It needs to get clicked again to get closed.":"这个折叠面板通过复选框而不是焦点工作。需要再次点击才能关闭。","Use Tailwind CSS `group` and `group-focus` utilities to apply style when parent div is focused":"当父 div 获得焦点时，使用 Tailwind CSS 的 `group` 和 `group-focus` 工具类来应用样式。","Use Tailwind CSS `peer` and `peer-checked` utilities to apply style when sibling checkbox is checked":"当同级的复选框被选中时，使用 Tailwind CSS 的 `peer` 和 `peer-checked` 工具类来应用样式。","opens on click using ID.showModal() method. can be closed using ID.close() method":"通过调用 ID.showModal() 方法打开。可以通过调用 ID.close() 方法关闭。","there is a second form with 'modal-backdrop' class and it covers the screen so we can close the modal when clicked outside":"这里有一个带有 'modal-backdrop' 类的第二个表单，它会覆盖整个屏幕，所以我们可以在点击外部时关闭对话框。","Dialog modal with custom width":"自定义宽度的对话框","You can use any w-* and max-w-* utility class to customize the width":"您可以使用任何 w-* 和 max-w-* 工具类来自定义宽度。","Modal works with a hidden checkbox and labels can toggle the checkbox so we can use another label tag with 'modal-backdrop' class that covers the screen so we can close the modal when clicked outside":"对话框通过一个隐藏的复选框工作，标签可以切换复选框的状态。因此，我们可以使用另一个带有 'modal-backdrop' 类的标签来覆盖屏幕，这样当点击对话框外部时就可以关闭它。","Dialog modal with a close button at corner":"在角落带有关闭按钮的对话框","Instead of working with click, it shows swap-on item if you add swap-active class name. You can add or remove swap-active class using JS":"此方式不依赖于点击，而是通过添加 `swap-active` 类名来显示 `swap-on` 项。您可以使用 JS 来添加或移除 `swap-active` 类。","Install daisyUI as a Tailwind plugin":"作为 Tailwind 插件安装 daisyUI","Framework install tutorials":"框架安装教程","daisyUI base style":"daisyUI 基础样式","daisyUI adds a few base styles to your page.":"daisyUI 为您的页面添加了一些基础样式。","daisyUI provides a few useful utility classes and CSS variables to help you use the library more effectively.":"daisyUI 提供了一些有用的工具类和 CSS 变量，以帮助您更有效地使用该库。","1. Create a new Rsbuild project":"1. 创建一个新的 Rsbuild 项目","2. Install Tailwind CSS and daisyUI":"2. 安装 Tailwind CSS 和 daisyUI","Create a new Rsbuild project in the current directory":"在当前目录中创建一个新的 Rsbuild 项目","Rsbuild has built-in support for PostCSS":"Rsbuild 已内置对 PostCSS 的支持","Create a postcss.config.mjs file and add Tailwind CSS to it":"创建一个 `postcss.config.mjs` 文件并添加 Tailwind CSS","Now you can use daisyUI class names!":"现在您就可以使用 daisyUI 的类名了！","1. Create a new WordPress project":"1. 创建一个新的 WordPress 项目","2. Install the WindPress plugin":"2. 安装 WindPress 插件","3. Install daisyUI":"3. 安装 daisyUI","1. Get Tailwind CSS executable":"1. 获取 Tailwind CSS 可执行文件","2. Get daisyUI bundled JS file":"2. 获取 daisyUI 打包后的 JS 文件","3. Add Tailwind CSS and daisyUI":"3. 添加 Tailwind CSS 和 daisyUI","4. Build CSS":"4. 构建 CSS","Run this code to download latest version of daisyUI as a single js file and put it next to Tailwind's executable file.":"运行此代码以下载最新版的 daisyUI 单个 JS 文件，并将其放置在 Tailwind 可执行文件旁边。","Run this command to build the CSS file using Tailwind CSS executable":"运行此命令以使用 Tailwind CSS 可执行文件构建 CSS 文件。","1. Create a new React Router project":"1. 创建一个新的 React Router 项目","2. Install daisyUI":"2. 安装 daisyUI","3. Add daisyUI":"3. 添加 daisyUI","Create a new React Router project in the current directory":"在当前目录中创建一个新的 React Router 项目","Put Tailwind CSS and daisyUI in your CSS file (and remove old styles)":"将 Tailwind CSS 和 daisyUI 添加到您的 CSS 文件中（并移除旧样式）","1. Create a new Vue project":"1. 创建一个新的 Vue 项目","Create a new Vite Vue project in the current directory":"在当前目录中创建一个新的 Vite + Vue 项目","Add Tailwind CSS to Vite config":"将 Tailwind CSS 添加到 Vite 配置中","1. Install":"1. 安装","2. Add Tailwind CSS and daisyUI":"2. 添加 Tailwind CSS 和 daisyUI","3. Build CSS":"3. 构建 CSS","Install PostCSS, Tailwind CSS, and daisyUI":"安装 PostCSS、Tailwind CSS 和 daisyUI","Add a script to your package.json to build the CSS.":"在您的 `package.json` 中添加一个脚本来构建 CSS。","Run the script to build the CSS file":"运行脚本来构建 CSS 文件","1. Create a new Angular project":"1. 创建一个新的 Angular 项目","2. Install Tailwind CSS, PostCSS, and daisyUI":"2. 安装 Tailwind CSS、PostCSS 和 daisyUI","Install Angular CLI globally":"全局安装 Angular CLI","Run the Angular development server":"运行 Angular 开发服务器","1. Create a new Solid project":"1. 创建一个新的 Solid 项目","Create a new Solid project in the current directory":"在当前目录中创建一个新的 Solid 项目","1. Create a new Qwik project":"1. 创建一个新的 Qwik 项目","Create a new Qwik project in the current directory":"在当前目录中创建一个新的 Qwik 项目",":INFO:":"提示：","Install Tailwind CSS CLI and daisyUI":"安装 Tailwind CSS CLI 和 daisyUI","1. Create a new Bun project":"1. 创建一个新的 Bun 项目","2. Install bun-plugin-tailwind and daisyUI":"2. 安装 bun-plugin-tailwind 和 daisyUI","3. Add HTML and CSS files":"3. 添加 HTML 和 CSS 文件","Serve the HTML file":"运行 HTML 文件","Create a new Bun project in the current directory":"在当前目录中创建一个新的 Bun 项目","1. Create a new SvelteKit project":"1. 创建一个新的 SvelteKit 项目","Create a new SvelteKit project in the current directory":"在当前目录中创建一个新的 SvelteKit 项目","Import the CSS file in your Svelte page (or layout)":"在您的 Svelte 页面（或布局）中导入 CSS 文件","1. Create a new Vite project":"1. 创建一个新的 Vite 项目","Create a new Vite project in the current directory":"在当前目录中创建一个新的 Vite 项目","1. Create a new Nuxt project":"1. 创建一个新的 Nuxt 项目","Create a new Nuxt project in the current directory":"在当前目录中创建一个新的 Nuxt 项目","1. Create a new Next.js project":"1. 创建一个新的 Next.js 项目","Create a new Next.js project in the current directory":"在当前目录中创建一个新的 Next.js 项目","Add Tailwind CSS to your PostCSS config file":"将 Tailwind CSS 添加到您的 PostCSS 配置文件中","1. Create a new Vike project":"1. 创建一个新的 Vike 项目","Create a new Vike project in the current directory":"在当前目录中创建一个新的 Vike 项目","1. Create a new Solid Start project":"1. 创建一个新的 Solid Start 项目","Create a new Solid Start project in the current directory":"在当前目录中创建一个新的 Solid Start 项目","1. Create a new Astro project":"1. 创建一个新的 Astro 项目","Create a new Astro project in the current directory":"在当前目录中创建一个新的 Astro 项目","Add Tailwind CSS to Astro config":"将 Tailwind CSS 添加到 Astro 配置中","Import the CSS file on top of your astro Layout file":"在您的 Astro 布局文件的顶部导入 CSS 文件","1. Create a new React project":"1. 创建一个新的 React 项目","Create a new Vite React project in the current directory":"在当前目录中创建一个新的 Vite + React 项目","1. Create a new Laravel project":"1. 创建一个新的 Laravel 项目","3. Run your project":"3. 运行您的项目","Create a new Laravel project":"创建一个新的 Laravel 项目","Add daisyUI in your CSS file":"在您的 CSS 文件中添加 daisyUI","Run your Laravel project":"运行您的 Laravel 项目","And on another terminal tab, run Vite":"然后在另一个终端标签页中，运行 Vite","1. Create a new Rails project":"1. 创建一个新的 Rails 项目","2. Install Tailwind CSS for Rails":"2. 为 Rails 安装 Tailwind CSS","4. Create a homepage in Rails":"4. 在 Rails 中创建一个主页","5. Start Rails":"5. 启动 Rails","Create a new Rails project":"创建一个新的 Rails 项目","There are 3 ways to add daisyUI to your Rails project":"有 3 种方法可以将 daisyUI 添加到您的 Rails 项目中","Initialize a package.json (if you don't have one) and install daisyUI":"初始化一个 `package.json` 文件（如果还没有的话）并安装 daisyUI","Run this code to download latest version of daisyUI as a single js file":"运行此代码以下载最新版的 daisyUI 单个 JS 文件","This method is recommended if you want to quickly add daisyUI without adding any file.":"如果您想快速添加 daisyUI 而不添加任何文件，推荐使用此方法。","Now you can use daisyUI class names! Let's create a simple page and try a button":"现在您就可以使用 daisyUI 的类名了！让我们创建一个简单的页面并尝试一个按钮","What is daisyUI?":"什么是 daisyUI？","How does daisyUI work?":"daisyUI 如何工作？","Why should I use daisyUI?":"我为什么要使用 daisyUI？","What's the difference between daisyUI and Tailwind CSS?":"daisyUI 和 Tailwind CSS 有什么区别？","Is daisyUI aligned with Tailwind CSS' utility-first philosophy?":"daisyUI 是否符合 Tailwind CSS 的“工具类优先”理念？","How does daisyUI fit in Atomic Design principles?":"daisyUI 如何融入原子化设计原则？","Is daisyUI free?":"daisyUI 是免费的吗？","How can I support daisyUI?":"我如何支持 daisyUI？","Can I use daisyUI without Tailwind CSS?":"我可以在没有 Tailwind CSS 的情况下使用 daisyUI 吗？","Can I use daisyUI with other UI frameworks?":"我能将 daisyUI 与其他 UI 框架一起使用吗？","Which frameworks can I use daisyUI with?":"我能在哪些框架中使用 daisyUI？","daisyUI uses the Tailwind CSS plugin API to extend the available Tailwind CSS class names. This means that daisyUI is fully compatible with Tailwind CSS and you can use it with any Tailwind CSS project.":"daisyUI 使用 Tailwind CSS 插件 API 来扩展可用的类名。这意味着 daisyUI 与 Tailwind CSS 完全兼容，您可以在任何 Tailwind CSS 项目中使用它。","daisyUI is for you if you:":"如果您有以下需求，daisyUI 非常适合您：","Are tired of writing thousands of utility class names repeatedly":"厌倦了重复编写成千上万的工具类名","Want more readable and maintainable code":"想要更易读、更易维护的代码","Need to design interfaces faster with less code":"需要用更少的代码来更快地设计界面","Want a consistent design system across projects":"希望在不同项目中拥有一致的设计系统","Want to use standard UI parts, without making design decisions for every single detail":"希望使用标准的 UI 组件，而无需为每个细节都做设计决策","Want dark mode and many other themes available out of the box":"希望开箱即用地获得深色模式和许多其他主题","Want to use a design system that is based on real-world UI design principles":"希望使用一个基于真实世界 UI 设计原则的设计系统","Want development speed and customization at the same time":"希望同时拥有开发速度和定制能力","daisyUI is not for you if you:":"如果您有以下情况，daisyUI 可能不适合您：","Want to waste time re-inventing all the standard UI parts like buttons, cards, checkboxes, etc, for each project.":"想在每个项目中浪费时间重复造轮子，重新发明按钮、卡片、复选框等所有标准 UI 组件。","Want to swim in the ocean of thousands of class names and never find your way out.":"想迷失在成千上万个类名的海洋中，无法自拔。","Want to make your codebase a mess and spend hours figuring out what part of the code is responsible for what part of the UI.":"想把您的代码库搞得一团糟，并花费数小时来弄清楚哪部分代码对应哪部分 UI。","Want to waste your time and money re-inventing the wheel instead of shipping your actual project.":"想浪费时间和金钱去重复造轮子，而不是交付您的实际项目。","For example Tailwind CSS class names decide if padding should be 4px or 8px. daisyUI class names decide if a HTML element should look like a `card`, a `button`, a `toggle`, etc, just like what we would call them semantically in a design system.":"例如，Tailwind CSS 的类名决定了内边距是 4px 还是 8px。而 daisyUI 的类名决定了一个 HTML 元素看起来应该像一个 `card`、一个 `button`、一个 `toggle` 等等，就像我们在设计系统中语义化地称呼它们一样。","This makes it easier to design interfaces with less code and more consistency. For example if you want to make a card using Tailwind CSS you would have to write one or multiple utility class names for each single CSS rule. Doing this over and over again for each element, for each page, for each project is time consuming and hard to manage. It also makes it harder to maintain your code as you have to always figure out what part of the code is responsible for what part of the UI.":"这使得用更少的代码和更好的一致性来设计界面变得更容易。例如，如果您想用 Tailwind CSS 制作一个卡片，您需要为每一条 CSS 规则编写一个或多个工具类名。为每个元素、每个页面、每个项目反复这样做，既耗时又难以管理。这也使得维护代码变得更加困难，因为您总是需要弄清楚哪部分代码对应哪部分 UI。","daisyUI is not a replacement for Tailwind CSS, it's a plugin that makes Tailwind CSS more powerful and easier to use.":"daisyUI 不是 Tailwind CSS 的替代品，而是一个使其更强大、更易于使用的插件。","Yes! It's utility-first, not utility-only.":"是的！它是“工具类优先”，而非“仅有工具类”。","We need customization development speed at the same time. daisyUI is here to make this possible.":"我们需要同时兼顾定制化和开发速度。daisyUI 让这成为可能。","Atomic Design is a methodology for creating design systems. It breaks down the UI into smaller parts, like atoms, molecules, organisms, etc.":"原子化设计是一种创建设计系统的方法论。它将 UI 分解成更小的部分，如原子、分子、组织等。","You can think of Tailwind CSS utility classes as atoms. They are the smallest parts of the UI that you can use to build larger parts. daisyUI classes are like molecules and organisms. They are higher-level abstractions of the UI parts that are made of atoms.":"您可以将 Tailwind CSS 的工具类看作是原子。它们是构成 UI 的最小部分，您可以用来构建更大的部分。而 daisyUI 的类就像是分子和组织。它们是由原子构成的、更高层次的 UI 组件抽象。","Larger parts of the UI, like templates and pages are quickly possible by putting these molecules and organisms together in layouts, using grid or flexbox, and adding functionality and content to them.":"通过将这些分子和组织组合到布局中，使用网格或弹性盒子，并为它们添加功能和内容，可以快速构建出 UI 的更大部分，如模板和页面。","Yes, daisyUI is free and open-source, under the MIT license. You can use it in any project, commercial or non-commercial, without any restrictions.":"是的，daisyUI 是免费和开源的，遵循 MIT 许可证。您可以在任何项目中使用它，无论是商业还是非商业项目，没有任何限制。","Why is it free? daisyUI's goal is to improve the web development experience for everyone. I believe web development is already complex enough with all the different technologies, frameworks and tools. It takes a lot of time and effort to learn and master all these tools. daisyUI is here to make the design part of web development easier and faster, so you can focus on the actual product you are building.":"为什么免费？daisyUI 的目标是改善每个人的 Web 开发体验。我相信 Web 开发已经因各种技术、框架和工具而变得足够复杂了。学习和掌握所有这些工具需要大量的时间和精力。daisyUI 的出现是为了让 Web 开发的设计部分变得更简单、更快，这样您就可以专注于您正在构建的实际产品。","You can support daisyUI by using it in your projects, sharing it with your friends and colleagues, and contributing to the project on GitHub. You can also support daisyUI by becoming a sponsor on GitHub or Open Collective.":"您可以通过在您的项目中使用 daisyUI、与朋友和同事分享、以及在 GitHub 上为项目做出贡献来支持 daisyUI。您也可以通过成为 GitHub 或 Open Collective 上的赞助商来支持 daisyUI。","Alternatively if you don't want to use Tailwind CSS, you can use daisyUI for components and write your own styles for layout, spacing, etc.":"或者，如果您不想使用 Tailwind CSS，您可以使用 daisyUI 来构建组件，并为布局、间距等编写自己的样式。","Yes, you can mix and match daisyUI with any UI framework that add styles based on class names. If there's any class name conflict, you can use prefix to avoid conflicts between two libraries.":"是的，您可以将 daisyUI 与任何基于类名添加样式的 UI 框架混合使用。如果存在任何类名冲突，您可以使用前缀来避免两个库之间的冲突。","ALL of them! daisyUI is framework agnostic. You can use it anywhere you can use CSS.":"所有框架！daisyUI 是框架无关的。您可以在任何可以使用 CSS 的地方使用它。",root:ie,include:ne,exclude:re,prefix:le,logs:de,"daisyUI can be configured from your CSS file.":"daisyUI 可以通过您的 CSS 文件进行配置。","Default config:":"默认配置：","In above example, we enable all themes.":"在上面的示例中，我们启用了所有主题。","In above example, we disable all themes. it's useful to disable all themes and add custom themes using":"在上面的示例中，我们禁用了所有主题。这在您想禁用所有主题并使用...来添加自定义主题时非常有用","In above example, we set dracula as the default theme. setting one value like this means only one theme will be available. Unless you add custom themes using":"在上面的示例中，我们将 `dracula` 设置为默认主题。像这样设置一个值意味着只有一个主题可用，除非您使用...来添加自定义主题。","In above example, we disable the logs of daisyUI. This is useful if you want to clean up the console output.":"在上面的示例中，我们禁用了 daisyUI 的日志。如果您想清理控制台输出，这会很有用。","Default value":"默认值",Description:"描述","light --default, dark --prefersdark":"light --default, dark --prefersdark","string or comma separated list or `false` or `all`":"`string` (字符串)、逗号分隔的列表、`false` 或 `all`","List of themes to enable. Use `false` to disable all themes. Use `all` to enable all themes. Add `--default` flag next to a theme name to set it as default theme. Add `--prefersdark` flag next to a theme name to set it as default theme for dark mode.":"要启用的主题列表。使用 `false` 禁用所有主题。使用 `all` 启用所有主题。在主题名称旁边添加 `--default` 标志以将其设置为默认主题。在主题名称旁边添加 `--prefersdark` 标志以将其设置为深色模式下的默认主题。",'":root"':'":root"',string:"字符串","The CSS selector to receive the CSS variables.":"用于接收 CSS 变量的 CSS 选择器。","comma separated list":"逗号分隔的列表","List of components to include.":"要包含的组件列表。","List of components to exclude.":"要排除的组件列表。",'""':'""',"Prefix for all daisyUI classes.":"所有 daisyUI 类的前缀。",true:"true",boolean:"布尔值","Enable or disable logs.":"启用或禁用日志。","Class names are not working":"类名不生效","CSS files is too big":"CSS 文件过大","checkbox/toggle/radio styles are broken":"复选框/开关/单选框样式损坏","Themes are not working":"主题不生效","Add the themes you want":"添加您想要的主题",":":"：","Theme CSS variables":"主题 CSS 变量","You can also control the opacity of the color like":"您也可以像这样控制颜色的不透明度：","Change the theme to see the border radius changes:":"更改主题以查看边框半径的变化：","creates a glass effect on the element.":"在元素上创建玻璃拟物效果。","For advanced use: These CSS variables are being used internally for a specific components. You probably won't need to customize them, but you can if you want to.":"高级用法：这些 CSS 变量在特定组件内部使用。您可能不需要自定义它们，但如果需要，也可以进行自定义。","These variables are for internal use. They are not subject of semantic versioning and some of them may be modified or removed in future minor versions, in which case your custom styles might lose their effect, so if you want to modify these variables and your UI really depends on the customized value, make sure you are using a fixed version of daisyUI, not the latest version.":"这些变量供内部使用，不受语义化版本控制的约束。其中一些可能会在未来的次要版本中被修改或移除，这可能导致您的自定义样式失效。因此，如果您要修改这些变量，并且您的 UI 强依赖于这些自定义值，请确保使用 daisyUI 的固定版本，而不是最新版本。","Class Name":"类名","bg-primary":"bg-primary","Sets the background color to the primary color":"将背景颜色设置为 primary 颜色","to-primary":"to-primary","Sets the ending color for a gradient to the primary color":"将渐变的结束颜色设置为 primary 颜色","via-primary":"via-primary","Sets the middle color for a gradient to the primary color":"将渐变的中间颜色设置为 primary 颜色","from-primary":"from-primary","Sets the starting color for a gradient to the primary color":"将渐变的起始颜色设置为 primary 颜色","text-primary":"text-primary","Sets the text color to the primary color":"将文本颜色设置为 primary 颜色","ring-primary":"ring-primary","Sets the ring color to the primary color":"将轮廓环颜色设置为 primary 颜色","fill-primary":"fill-primary","Sets the fill color for SVG elements to the primary color":"将 SVG 元素的填充颜色设置为 primary 颜色","caret-primary":"caret-primary","Sets the caret color to the primary color":"将光标颜色设置为 primary 颜色","stroke-primary":"stroke-primary","Sets the stroke color for SVG elements to the primary color":"将 SVG 元素的描边颜色设置为 primary 颜色","border-primary":"border-primary","Sets the border color to the primary color":"将边框颜色设置为 primary 颜色","divide-primary":"divide-primary","Sets the color for dividing borders to the primary color":"将分隔边框的颜色设置为 primary 颜色","accent-primary":"accent-primary","Sets the accent color to the primary color":"将强调颜色设置为 primary 颜色","shadow-primary":"shadow-primary","Sets the shadow color to the primary color":"将阴影颜色设置为 primary 颜色","outline-primary":"outline-primary","Sets the outline color to the primary color":"将外边框颜色设置为 primary 颜色","decoration-primary":"decoration-primary","Sets the text decoration color to the primary color":"将文本装饰颜色设置为 primary 颜色","placeholder-primary":"placeholder-primary","Sets the placeholder text color to the primary color":"将占位符文本颜色设置为 primary 颜色","ring-offset-primary":"ring-offset-primary","Sets the ring offset color to the primary color":"将轮廓环偏移颜色设置为 primary 颜色","CSS Variable":"CSS 变量","rounded-box":"rounded-box","var(--radius-box)":"var(--radius-box)","For large sized components like card, modal, alert, etc.":"用于大型组件，如卡片、对话框、警告框等。","rounded-field":"rounded-field","var(--radius-field)":"var(--radius-field)","For medium sized components like button, input, select, tab, etc.":"用于中型组件，如按钮、输入框、选择器、选项卡等。","rounded-selector":"rounded-selector","var(--radius-selector)":"var(--radius-selector)","For small sized components like checkbox, toggle, badge, etc.":"用于小型组件，如复选框、开关、徽章等。","Primary brand color":"主品牌色","Foreground content color to use on primary color":"用于 `primary` 颜色之上的前景色","Secondary brand color":"次要品牌色","Foreground content color to use on secondary color":"用于 `secondary` 颜色之上的前景色","Accent brand color":"强调品牌色","Foreground content color to use on accent color":"用于 `accent` 颜色之上的前景色","Neutral dark color":"中性深色","Foreground content color to use on neutral color":"用于 `neutral` 颜色之上的前景色","Base color of page, used for blank backgrounds":"页面基色，用于空白背景","Base color, darker shade":"基色，较深的色度","Base color, even more darker shade":"基色，更深的色度","Foreground content color to use on base color":"用于基色之上的前景色","Info color":"信息色","Foreground content color to use on info color":"用于 `info` 颜色之上的前景色","Success color":"成功色","Foreground content color to use on success color":"用于 `success` 颜色之上的前景色","Warning color":"警告色","Foreground content color to use on warning color":"用于 `warning` 颜色之上的前景色","Error color":"错误色","Foreground content color to use on error color":"用于 `error` 颜色之上的前景色","Border radius for selectors like checkbox, toggle, badge, etc":"用于选择器（如复选框、开关、徽章等）的边框半径","Border radius for fields like input, select, tab, etc":"用于字段（如输入框、选择器、选项卡等）的边框半径","Border radius for boxes like card, modal, alert, etc":"用于框体（如卡片、对话框、警告框等）的边框半径","Base scale size for selectors like checkbox, toggle, badge, etc":"用于选择器（如复选框、开关、徽章等）的基础缩放尺寸","Base scale size for fields like input, select, tab, etc":"用于字段（如输入框、选择器、选项卡等）的基础缩放尺寸","Border width of all components":"所有组件的边框宽度","(binary) Adds a depth effect for relevant components":"（二进制）为相关组件添加深度效果","(binary) Adds a background noise effect for relevant components":"（二进制）为相关组件添加背景噪点效果","color of the alert":"警告框的颜色","color of the badge":"徽章的颜色","size of the badge":"徽章的尺寸","background color of the button":"按钮的背景颜色","foreground color of the button":"按钮的前景颜色","shadow of the button":"按钮的阴影","noise background of the button if enabled":"启用时按钮的噪点背景","padding of the button":"按钮的内边距","size of the button":"按钮的尺寸","padding of the card body":"卡片主体的内边距","font size of the card body":"卡片主体的字体大小","font size of the card title":"卡片标题的字体大小","size of the checkbox":"复选框的尺寸","value of the countdown":"倒计时的值","margin of the divider":"分隔线的边距","vertical position of the anchor":"锚点的垂直位置","horizontal position of the anchor":"锚点的水平位置","File input":"文件输入","color of the file input":"文件输入框的颜色","size of the file input":"文件输入框的尺寸","top position of the indicator":"指示器的顶部位置","bottom position of the indicator":"指示器的底部位置","start position of the indicator":"指示器的起始位置","end position of the indicator":"指示器的结束位置","vertical position of the indicator":"指示器的垂直位置","horizontal position of the indicator":"指示器的水平位置",Input:"输入","color of the input":"输入框的颜色","size of the input":"输入框的尺寸","size of the kbd":"键盘按键的尺寸",List:"列表","grid columns of the list":"列表的网格列数","foreground color of the active menu item":"激活菜单项的前景颜色","background color of the active menu item":"激活菜单项的背景颜色","top left border radius of the modal":"对话框的左上边框半径","top right border radius of the modal":"对话框的右上边框半径","bottom left border radius of the modal":"对话框的左下边框半径","bottom right border radius of the modal":"对话框的右下边框半径","value of the radial progress":"环形进度条的值","size of the radial progress":"环形进度条的尺寸","thickness of the radial progress":"环形进度条的厚度","for calculating the radial progress position":"用于计算环形进度条位置","size of the radio":"单选框的尺寸","background color of the range slider thumb":"范围滑块滑块的背景颜色","color of the range slider thumb":"范围滑块滑块的颜色","size of the range slider thumb":"范围滑块滑块的尺寸","color of the range slider progress":"范围滑块进度条的颜色","binary, whether to fill the range slider progress or not":"二进制，是否填充范围滑块进度条","padding of the range slider thumb":"范围滑块滑块的内边距","size of the range slider":"范围滑块的尺寸","size of the select":"选择器的尺寸","height of the tabs":"选项卡的高度","direction of the tabs":"选项卡的方向","padding of the tab":"选项卡的内边距","background color of the tab":"选项卡的背景颜色","border color of the tab":"选项卡的边框颜色","start start border radius of the tab":"选项卡的起始-起始边框半径","start end border radius of the tab":"选项卡的起始-结束边框半径","end start border radius of the tab":"选项卡的结束-起始边框半径","end end border radius of the tab":"选项卡的结束-结束边框半径","Order of the tab":"选项卡的顺序","minimum border radius of the lift tab":"悬浮选项卡的最小边框半径","all padding values of the lift tab":"悬浮选项卡的所有内边距值","all border color values of the lift tab":"悬浮选项卡的所有边框颜色值","corner width of the lift tab":"悬浮选项卡角部的宽度","corner height of the lift tab":"悬浮选项卡角部的高度","corner position of the lift tab":"悬浮选项卡角部的位置","inset position of the lift tab":"悬浮选项卡的内嵌位置","border radius for the corner of the lift tab":"悬浮选项卡角部的边框半径","margin of the tab content":"选项卡内容的边距","start start border radius of the tab content":"选项卡内容的起始-起始边框半径","start end border radius of the tab content":"选项卡内容的起始-结束边框半径","end start border radius of the tab content":"选项卡内容的结束-起始边框半径","end end border radius of the tab content":"选项卡内容的结束-结束边框半径","order of the tab content":"选项卡内容的顺序","size of the textarea":"多行文本框的尺寸","start position of the timeline row":"时间轴行的起始位置","end position of the timeline row":"时间轴行的结束位置","start position of the timeline column":"时间轴列的起始位置","end position of the timeline column":"时间轴列的结束位置","horizontal position of the toast":"轻提示的水平位置","vertical position of the toast":"轻提示的垂直位置","padding of the toggle":"开关的内边距","size of the toggle":"开关的尺寸","background color of the tooltip":"文字提示的背景颜色","offset of the tooltip":"文字提示的偏移量","position of the tooltip tail":"文字提示尾部的位置","blur of the glass effect":"玻璃拟物效果的模糊度","opacity of the glass effect":"玻璃拟物效果的不透明度","degree of the glass reflection":"玻璃拟物效果的反射角度","opacity of the glass reflection":"玻璃拟物效果的反射不透明度","opacity of the glass border":"玻璃拟物效果的边框不透明度","opacity of the glass text shadow":"玻璃拟物效果的文本阴影不透明度","start start border radius of the join":"组合项的起始-起始边框半径","start end border radius of the join":"组合项的起始-结束边框半径","end start border radius of the join":"组合项的结束-起始边框半径","end end border radius of the join":"组合项的结束-结束边框半径","Color opacity and muted colors":"颜色透明度与柔和色","bg-green-500":"bg-green-500","bg-orange-600":"bg-orange-600","bg-blue-700":"bg-blue-700","bg-secondary":"bg-secondary","bg-accent":"bg-accent","Example of theming a div with hardcoded color values":"使用硬编码颜色值对 div 进行主题化的示例","Using hardcoded color names":"使用硬编码颜色名称","🪦 Fixed color names, hardcoded based on the value":"🪦 固定的颜色名称，基于值硬编码","🚫 No automatic dark mode":"🚫 无自动深色模式","😵‍💫 You have to add dark-mode colors for every element":"😵‍💫 您必须为每个元素添加深色模式的颜色","💸 high maintenance cost":"💸 维护成本高","🐢 slow development":"🐢 开发速度慢","😩 hard to change a theme":"😩 难以更换主题","⛓️‍💥 high chance of inconsistency":"⛓️‍💥 极易出现不一致","😰 You are limited to 2 themes only: light and dark":"😰 您只能使用浅色和深色两种主题","Using semantic color names":"使用语义化颜色名称","🎯 Semantic names, based on the purpose of the color":"🎯 语义化名称，基于颜色用途","✨ Automatic dark mode":"✨ 自动深色模式","🌓 No need to add any dark-mode class names":"🌓 无需添加任何深色模式的类名","🤑 Zero maintenance cost to add a theme":"🤑 添加主题的维护成本为零","🚀 Fast development":"🚀 开发速度快","⚡️ Easy to change themes":"⚡️ 轻松更换主题","📘 All colors are consistent based on the design system":"📘 所有颜色基于设计系统保持一致","♾️ Unlimited themes, easy to switch":"♾️ 无限主题，轻松切换","Color name":"颜色名称","css variable":"CSS 变量","Where to use":"使用场景",primary:ce,"Primary brand color, The main color of your brand":"主品牌色，您品牌的主色调","primary-content":"primary-content",secondary:ue,"Secondary brand color, The optional, secondary color of your brand":"次要品牌色，您品牌的可选次要色调","secondary-content":"secondary-content",accent:he,"Accent brand color, The optional, accent color of your brand":"强调品牌色，您品牌的可选强调色调","accent-content":"accent-content",neutral:me,"Neutral dark color, For not-saturated parts of UI":"中性深色，用于 UI 中非饱和的部分","neutral-content":"neutral-content","base-100":"base-100","Base surface color of page, used for blank backgrounds":"页面基础表面色，用于空白背景","base-200":"base-200","Base color, darker shade, to create elevations":"基色，较深的色度，用于创建层次感","base-300":"base-300","Base color, even more darker shade, to create elevations":"基色，更深的色度，用于创建层次感","base-content":"base-content",info:pe,"Info color, For informative/helpful messages":"信息色，用于信息性/帮助性消息","info-content":"info-content","Foreground content color to use on `info` color":"用于 `info` 颜色之上的前景色",success:ye,"Success color, For success/safe messages":"成功色，用于成功/安全消息","success-content":"success-content","Foreground content color to use on `success` color":"用于 `success` 颜色之上的前景色",warning:ge,"Warning color, For warning/caution messages":"警告色，用于警告/注意消息","warning-content":"warning-content","Foreground content color to use on `warning` color":"用于 `warning` 颜色之上的前景色",error:be,"Error color, For error/danger/destructive messages":"错误色，用于错误/危险/破坏性消息","error-content":"error-content","Foreground content color to use on `error` color":"用于 `error` 颜色之上的前景色","CSS Class":"CSS 类","Also available on CDN [/colors/properties.css](https://cdn.jsdelivr.net/npm/daisyui@5/colors/properties.css)":"也可在 CDN 上获取 [/colors/properties.css](https://cdn.jsdelivr.net/npm/daisyui@5/colors/properties.css)","Also available on CDN [/colors/properties-extended.css](https://cdn.jsdelivr.net/npm/daisyui@5/colors/properties-extended.css)":"也可在 CDN 上获取 [/colors/properties-extended.css](https://cdn.jsdelivr.net/npm/daisyui@5/colors/properties-extended.css)","Enable a built-in theme":"启用一个内置主题","Enable all themes":"启用所有主题","Disable a theme":"禁用一个主题","All the other values will be inherited from the original theme.":"所有其他值将从原始主题继承。","Tailwind CSS Typography plugin demo":"Tailwind CSS Typography 插件演示","Headers: Making a Statement":"标题：声明观点","The Big Heading, for the Page Title":"大标题，用于页面标题","Second Heading, for the Page Subtitle":"二级标题，用于页面副标题","Third Heading, usually for the Section Title":"三级标题，通常用于章节标题","Fourth Heading, usually for the Subsection Title":"四级标题，通常用于子章节标题","Fifth Heading, for the Subsubsection Title":"五级标题，用于子子章节标题","Sixth Heading, for the Paragraph Title":"六级标题，用于段落标题","Text Formatting: Adding Emphasis":"文本格式化：添加强调","Bold and Italic":"粗体和斜体",Blockquotes:"块引用","Lists: Organizing Information":"列表：组织信息","Unordered Lists":"无序列表","Ordered Lists":"有序列表","Links and Images: Adding Interactivity":"链接和图片：增加交互性",Images:"图片","Code: Showcasing Your Work":"代码：展示您的作品","Inline Code":"行内代码","Code Blocks":"代码块","Tables: Organizing Data":"表格：组织数据","Colors: Adding Vibrancy":"颜色：增添活力",Conclusion:"结论","Here's a demo text to demonstrate the Tailwind CSS Typography plugin in combination with daisyUI colors:":"这是一个演示文本，用于展示 Tailwind CSS Typography 插件与 daisyUI 颜色的结合效果：","This is a demo of the Tailwind CSS Typography plugin in action. The plugin provides a set of prose classes that can be used to style your HTML content with minimal effort. When combined with daisyUI, you get access to a variety of themes that are fully compatible with the Typography plugin.":"这是 Tailwind CSS Typography 插件的实际演示。该插件提供了一组 `prose` 类，可以轻松地为您的 HTML 内容设置样式。与 daisyUI 结合使用时，您可以获得多种与 Typography 插件完全兼容的主题。","Headers are essential for structuring your content and making it easy to read. With Tailwind CSS Typography and daisyUI, you can create headers that stand out and match your chosen theme.":"标题对于构建内容结构和提高可读性至关重要。使用 Tailwind CSS Typography 和 daisyUI，您可以创建引人注目且与所选主题匹配的标题。","Text formatting is crucial for emphasizing important information. Tailwind CSS Typography makes it simple to apply bold, italic, and other text styles.":"文本格式化对于强调重要信息至关重要。Tailwind CSS Typography 使应用粗体、斜体和其他文本样式变得简单。","Blockquotes are an excellent way to highlight quotes or important information. They are styled beautifully with the Typography plugin.":"块引用是突出引用或重要信息的绝佳方式。Typography 插件为它们提供了精美的样式。","Lists are a great way to organize information in a structured manner. Tailwind CSS Typography makes it easy to create both unordered and ordered lists.":"列表是以结构化方式组织信息的好方法。Tailwind CSS Typography 使创建无序和有序列表变得容易。","Unordered lists use bullet points to list items. They are perfect for listing items without a specific order.":"无序列表使用项目符号来列出条目。它们非常适合列出没有特定顺序的项目。","First item":"第一项","Second item":"第二项","Subitem one":"子项一","Subitem two":"子项二","Ordered lists use numbers to list items. They are ideal for steps or items that need to be in a specific order.":"有序列表使用数字来列出条目。它们非常适合需要按特定顺序排列的步骤或项目。","Step one":"第一步","Step two":"第二步","Substep one":"子步骤一","Substep two":"子步骤二","Links are essential for navigation and adding interactivity to your content. Tailwind CSS Typography ensures that links are styled consistently.":"链接对于导航和为您的内容增加交互性至关重要。Tailwind CSS Typography 确保链接样式一致。","Visit daisyUI":"访问 daisyUI","Images are a great way to enhance your content visually. The Typography plugin makes sure they are displayed beautifully.":"图片是增强内容视觉效果的好方法。Typography 插件确保它们精美地显示。","Code snippets are crucial for technical content. Tailwind CSS Typography provides excellent styling for both inline code and code blocks.":"代码片段对于技术内容至关重要。Tailwind CSS Typography 为行内代码和代码块提供了出色的样式。","Inline code is perfect for highlighting small pieces of code within a sentence.":"行内代码非常适合在句子中突出显示小段代码。","Here is an example of inline code:":"这是一个行内代码的例子：","Code blocks are ideal for displaying larger pieces of code. You can use Shiki, Prism or other libraries for code highlighting.":"代码块非常适合显示大段代码。您可以使用 Shiki、Prism 或其他库进行代码高亮。","Tables are essential for organizing data in rows and columns. Tailwind CSS Typography ensures that tables are styled consistently and look great.":"表格对于以行和列的形式组织数据至关重要。Tailwind CSS Typography 确保表格样式一致且美观。","daisyUI provides various color schemes that you can use to add vibrancy to your content. Here are some examples:":"daisyUI 提供了多种配色方案，您可以用它们为内容增添活力。以下是一些示例：","Primary text":"主色文本","Secondary text":"次要色文本","Accent text":"强调色文本","Info text":"信息色文本","Success text":"成功色文本","Warning text":"警告色文本","Error text":"错误色文本","Styling your Markdown-generated HTML has never been easier, thanks to the Tailwind CSS Typography plugin and daisyUI themes. By using headers, text formatting, lists, links, images, code snippets, tables, and colors, you can create rich and visually appealing content with minimal effort. Experiment with these elements and see how they look with different daisyUI themes. Happy styling!":"借助 Tailwind CSS Typography 插件和 daisyUI 主题，为 Markdown 生成的 HTML 设计样式从未如此简单。通过使用标题、文本格式、列表、链接、图片、代码片段、表格和颜色，您可以毫不费力地创建出内容丰富、视觉效果出众的内容。请尽情尝试这些元素，体验它们在不同 daisyUI 主题下的外观。祝您设计愉快！",Italic:"斜体",Bold:"粗体",Feature:"功能",Status:"状态","Tailwind CSS":"Tailwind CSS","Utility-first CSS framework":"工具类优先的 CSS 框架",Active:"激活",daisyUI:fe,"Tailwind CSS component library":"Tailwind CSS 组件库","Tailwind CSS plugin for styling HTML":"用于设置 HTML 样式的 Tailwind CSS 插件",Markdown:Se,"Lightweight markup language":"轻量级标记语言",Popular:"流行","Various themes for styling":"用于设置样式的各种主题",Available:"可用","Source code":"源代码","These are the tiny base styles that daisyUI adds to your page. These styles are less than a kilobyte in total, so you don't need to worry about the size":"这些是 daisyUI 添加到您页面的微小基础样式。这些样式总共不到 1KB，所以您不必担心体积问题。",properties:we,rootcolor:Ie,scrollbar:Ce,rootscrolllock:ke,rootscrollgutter:ve,svg:"svg",Name:"名称","For necessary at-rules, like variable type for `--radialprogress`":"用于必要的 at-rules，例如 `--radialprogress` 的变量类型","For `:root` and `[data-theme]` it sets background-color to `base-100` and text color to `base-content`":"为 `:root` 和 `[data-theme]` 设置 `background-color` 为 `base-100`，`color` 为 `base-content`","Sets scrollbar-color for `:root`":"为 `:root` 设置 `scrollbar-color`","Sets `:root` to `overflow: hidden` when modal or drawer is open":"当对话框或抽屉打开时，将 `:root` 的 `overflow` 设置为 `hidden`","Adds a `scrollbar-gutter` to `:root` when modal or drawer is open, to avoid layout shift":"当对话框或抽屉打开时，为 `:root` 添加 `scrollbar-gutter` 以避免布局偏移","Contains small SVG images for noise filter, chat bubble tail mask, and tooltip tail mask. Can be disabled to use custom images.":"包含用于噪点滤镜、聊天气泡尾部遮罩和文字提示尾部遮罩的小型 SVG 图像。可以禁用以使用自定义图像。","VSCode and Copilot":"VSCode 和 Copilot",Cursor:Te,Zed:"Zed","Run this command to save the llms.txt file to":"运行此命令将 llms.txt 文件保存到","Add this:":"添加这个：",K:"千","There are 3 methods to use a dropdowns":"有 3 种方法可以使用下拉菜单","Method 1. details and summary":"方法 1. details 和 summary 标签","Method 2. popover API and anchor positioning":"方法 2. Popover API 和锚点定位","Method 3. CSS focus":"方法 3. CSS focus",Positions:"位置",Modifiers:"修饰符","details and summary elements":"details 和 summary 元素","popover API and anchor positioning":"Popover API 和锚点定位","CSS focus":"CSS focus","The content gets displayed when the button is focused.":"当按钮获得焦点时，内容会显示出来。","Resize screen to see changes":"调整屏幕大小以查看变化",Structure:"结构",Functionality:"功能","Change screen size to show/hide menu":"更改屏幕尺寸以显示/隐藏菜单","Sidebar is always visible on large screen, can be toggled on small screen because of lg:drawer-open class":"侧边栏在大屏幕上始终可见，在小屏幕上由于 `lg:drawer-open` 类的存在可以切换显示/隐藏","is a hidden radio at the start to allow users to remove their rating.":"是一个位于开头的隐藏单选按钮，用于允许用户清除他们的评分。","daisyUI supports 3 calendar libraries":"daisyUI 支持 3 个日历库","1. Cally Calendar":"1. Cally 日历","Example using daisyUI styles":"使用 daisyUI 样式的示例","Example using daisyUI styles and daisyUI dropdown":"使用 daisyUI 样式和 daisyUI 下拉菜单的示例","2. Pikaday Calendar":"2. Pikaday 日历","Pikaday CDN Example":"Pikaday CDN 示例","Pikaday Svelte Example":"Pikaday Svelte 示例","Pikaday Vue Example":"Pikaday Vue 示例","Pikaday React Example":"Pikaday React 示例","3. React Day Picker calendar":"3. React Day Picker 日历","React Day Picker Example":"React Day Picker 示例","svelte:head":"svelte:head","writing an invalid email address applies error color to the input. Valid email address applies success color.":"输入无效的电子邮件地址会对输入框应用错误颜色。有效的电子邮件地址则应用成功颜色。","If value is invalid, a hint text appears below the input.":"如果值无效，输入框下方会出现提示文本。","Click the button before picking an option to see the error color.":"在选择选项之前点击按钮，以查看错误颜色。","changes position based on resolution":"根据分辨率改变位置","Even if join-item is not a direct child of the group, it still gets the style":"即使 `join-item` 不是组的直接子元素，它仍然会获得样式","We can use input class for the parent and put anything inside it":"我们可以为父元素使用 `input` 类，并在其中放置任何内容","Input types":"输入类型","collapse-open and collapse-close doesn't work with this method. You can add/remove open attribute to the details instead":"`collapse-open` 和 `collapse-close` 不适用于此方法。您可以改为对 `details` 元素添加/移除 `open` 属性","This slider works with anchor links so the browser will snap vertically to the image when you click buttons.":"此滑块与锚链接配合使用，因此当您点击按钮时，浏览器将垂直滚动到图像。","Use toggle class for a label, put a checkbox and 2 icons inside it.":"为 `label` 标签使用 `toggle` 类，并在其中放置一个复选框和 2 个图标。","square aspect ratio or with rounded corners":"正方形宽高比或带圆角",Default:"默认",Wide:"宽",block:"块",soon:Ue,"Click me":"点我","you can open/close the submenu by adding/removing menu-dropdown-show class using JS":"您可以通过使用 JS 添加/移除 `menu-dropdown-show` 类来打开/关闭子菜单","A HTML from for filtering items":"一个用于筛选项目的 HTML 表单","Use this if you can't use a HTML form for some reason":"如果您因某些原因无法使用 HTML 表单，请使用此方法","There are 3 methods to use modals":"有 3 种方法可以使用对话框","Method 1. HTML dialog element":"方法 1. HTML `dialog` 元素","Modal goes bottom on SM screen size, goes middle on MD screen size":"对话框在 SM 屏幕尺寸下位于底部，在 MD 屏幕尺寸下位于中间","Method 2. checkbox":"方法 2. 复选框","Method 3. using anchor links":"方法 3. 使用锚链接","A hidden checkbox can control the state of modal and labels can toggle the checkbox so we can open/close the modal.":"一个隐藏的复选框可以控制对话框的状态，标签可以切换该复选框，从而实现打开/关闭对话框。","open modal":"打开对话框","is required for responsivness of the dock in iOS.":"对于 iOS 中 dock 的响应式是必需的。","Put Tailwind CSS and daisyUI in your CSS file at `src/` (and remove old styles).":"将 Tailwind CSS 和 daisyUI 放入 `src/` 目录下的 CSS 文件中（并移除旧样式）。","Install WordPress according to the [Official WordPress guide](https://wordpress.org/download/).":"根据 [WordPress 官方指南](https://wordpress.org/download/) 安装 WordPress。","In this guide, we will use the [WindPress](https://wind.press) plugin to install Tailwind CSS and daisyUI in a WordPress project.":"在本指南中，我们将使用 [WindPress](https://wind.press) 插件在 WordPress 项目中安装 Tailwind CSS 和 daisyUI。","Navigate to the `Plugins → Add New Plugin` sub-menu.":"导航到 `插件 → 安装插件` 子菜单。","Search for the WordPress plugin by typing `WindPress` in the search bar.":"在搜索栏中输入 `WindPress` 来搜索该 WordPress 插件。","Click the `Install Now` button to install the WordPress plugin.":"点击 `现在安装` 按钮来安装该 WordPress 插件。","Once the plugin is installed, click the `Activate` button to activate the WindPress plugin.":"插件安装完成后，点击 `启用` 按钮来激活 WindPress 插件。","Navigate to the WindPress dashboard by clicking the `WindPress` menu item in the WordPress admin sidebar.":"通过点击 WordPress 管理侧边栏中的 `WindPress` 菜单项，导航到 WindPress 仪表盘。","Then, click the `main.css` file on the explorer sidebar to open the file editor.":"然后，点击资源管理器侧边栏中的 `main.css` 文件以打开文件编辑器。","Add daisyUI at the end of code in the `main.css` file":"在 `main.css` 文件的代码末尾添加 daisyUI","Follow [Tailwind CSS guide](https://tailwindcss.com/blog/standalone-cli) and get the latest version of Tailwind CSS executable.":"遵循 [Tailwind CSS 指南](https://tailwindcss.com/blog/standalone-cli) 并获取最新版本的 Tailwind CSS 可执行文件。","Add Tailwind CSS and daisyUI to your CSS file.":"将 Tailwind CSS 和 daisyUI 添加到您的 CSS 文件中。","Address your HTML and other markup files in the `source` function.":"在 `source` 函数中指定您的 HTML 和其他标记文件的路径。","Initialize a new Node project in the current directory using `npm init -y` if it's not a Node project already.":"如果当前目录还不是 Node 项目，使用 `npm init -y` 初始化一个新的 Node 项目。","This command creates a `public/output.css` file with the compiled CSS. You can link this file to your HTML file.":"此命令会创建一个包含已编译 CSS 的 `public/output.css` 文件。您可以将此文件链接到您的 HTML 文件。","Create a new Angular project called `my-project` and navigate to it":"创建一个名为 `my-project` 的新 Angular 项目并进入该目录","Add Tailwind CSS plugin for PostCSS to a new `.postcssrc.json` file at root":"在根目录创建一个新的 `.postcssrc.json` 文件，并添加 PostCSS 的 Tailwind CSS 插件","This guide uses daisyUI as a Node.js dependency. If you don't want to use Node.js, try the [CDN version of daisyUI](/docs/cdn/).":"本指南使用 daisyUI 作为 Node.js 依赖。如果您不想使用 Node.js，可以尝试 [daisyUI 的 CDN 版本](/docs/cdn/)。","Using Bun 1.2.4+ you can serve HTML and CSS files directly in a [dev server](https://bun.sh/docs/bundler/fullstack). Here's how to setup daisyUI for it.":"使用 Bun 1.2.4+，您可以直接在[开发服务器](https://bun.sh/docs/bundler/fullstack)中提供 HTML 和 CSS 文件。以下是如何为其设置 daisyUI。","Create a `bunfig.toml` file at root and add bun-plugin-tailwind as a plugin":"在根目录创建 `bunfig.toml` 文件，并添加 `bun-plugin-tailwind` 作为插件","Create `index.html` at root":"在根目录创建 `index.html`","Create `style.css` at root, add Tailwind CSS and daisyUI":"在根目录创建 `style.css`，并添加 Tailwind CSS 和 daisyUI","Install PHP, Composer and Laravel Installer according to the [official Laravel documentation](https://laravel.com/docs/12.x/installation#creating-a-laravel-project)":"根据[官方 Laravel 文档](https://laravel.com/docs/12.x/installation#creating-a-laravel-project)安装 PHP、Composer 和 Laravel Installer","Install Ruby on Rails according to the [official Rails guide](https://guides.rubyonrails.org/getting_started.html).":"根据[官方 Rails 指南](https://guides.rubyonrails.org/getting_started.html)安装 Ruby on Rails。","Install [Tailwind CSS 4 gem](https://github.com/rails/tailwindcss-rails) for Rails":"为 Rails 安装 [Tailwind CSS 4 gem](https://github.com/rails/tailwindcss-rails)","This method is recommended if are already using Node.js.":"如果您已经在使用 Node.js，推荐使用此方法。","This works as a Tailwind CSS plugin so only the class names you need will be added to your CSS file.":"这作为一个 Tailwind CSS 插件工作，因此只有您需要的类名才会被添加到您的 CSS 文件中。","This method is recommended if you are not using Node.js.":"如果您不使用 Node.js，推荐使用此方法。","You can [choose the parts you need](/docs/cdn/)":"您可以[选择您需要的部分](/docs/cdn/)","You can [import small CSS files separately](https://cdn.jsdelivr.net/npm/daisyui@5/chunks.css)":"您可以[单独导入小的 CSS 文件](https://cdn.jsdelivr.net/npm/daisyui@5/chunks.css)","You can [import all themes](https://cdn.jsdelivr.net/npm/daisyui@5/themes.css) or [specific themes](https://cdn.jsdelivr.net/npm/daisyui@5/theme/light.css)":"您可以[导入所有主题](https://cdn.jsdelivr.net/npm/daisyui@5/themes.css)或[特定主题](https://cdn.jsdelivr.net/npm/daisyui@5/theme/light.css)","daisyUI is a collection of CSS class names. These class names are a high-level abstraction of Tailwind CSS utility classes.":"daisyUI 是一个 CSS 类名的集合。这些类名是 Tailwind CSS 工具类的高级抽象。","Imagine you use Tailwind CSS with superpowers!":"想象一下，您在使用拥有超能力的 Tailwind CSS！","daisyUI is a NPM package, you can install it as a dev dependency in your project.":"daisyUI 是一个 NPM 包，您可以将其作为开发依赖项安装到您的项目中。","Then you add it to Tailwind CSS as a plugin. This makes all the daisyUI class names available to Tailwind CSS and you can use them like any other Tailwind CSS class names.":"然后，您将其作为插件添加到 Tailwind CSS 中。这使得所有 daisyUI 的类名对 Tailwind CSS 可用，您可以像使用任何其他 Tailwind CSS 类名一样使用它们。","Tailwind CSS provides low-level utility classes, which usually include only one CSS rule.":"Tailwind CSS 提供低级别的工具类，通常只包含一条 CSS 规则。","daisyUI classes are a combination of multiple CSS rule that are named semantically for each part of the UI.":"daisyUI 的类是多条 CSS 规则的组合，并根据 UI 的每个部分进行了语义化命名。","daisyUI solves this problem by providing higher level class names that are named based on the UI parts. For example to make a card, we simply use the `card` class name and daisyUI gives you all the necessary CSS rules to make a card. Then if you need additional customization, you can add Tailwind CSS utility classes to the element to make it look the way you want.":"daisyUI 通过提供基于 UI 部分命名的高级类名来解决这个问题。例如，要制作一个卡片，我们只需使用 `card` 类名，daisyUI 就会提供制作卡片所需的所有 CSS 规则。然后，如果您需要额外的定制，可以向该元素添加 Tailwind CSS 工具类，使其看起来像您想要的样子。","daisyUI is built on top of Tailwind CSS's component API. Tailwind CSS as a library provides utility classes and suggests using utility classes for maximum flexibility and customization. However that's means slower development and more code to write.":"daisyUI 构建于 Tailwind CSS 的组件 API 之上。作为一个库，Tailwind CSS 提供工具类，并建议使用工具类以获得最大的灵活性和定制性。然而，这意味着开发速度较慢，需要编写更多代码。","That's why many people find it hard to use Tailwind CSS for designing interfaces. It takes a professional designer to make design decisions for many details of the UI to make them look good. It also takes a lot of time to write all the utility class names for each part of the UI. Even copying and pasting those huge chunks of utility class names is not helpful, as it makes the codebase hard to read and maintain.":"这就是为什么许多人觉得使用 Tailwind CSS 设计界面很困难。需要专业设计师为 UI 的许多细节做出设计决策，才能使其看起来美观。为 UI 的每个部分编写所有工具类名也需要大量时间。即使复制粘贴那些庞大的工具类名块也无济于事，因为它会使代码库难以阅读和维护。","Imagine one side of the spectrum is maximum customization and flexibility and you should make design decisions for every single detail. On the other side of the spectrum is maximum development speed and less code to write, but you have no control over the design. daisyUI and Tailwind CSS together give you the best of both worlds.":"想象一下，光谱的一端是最大限度的定制和灵活性，您需要为每一个细节做出设计决策。而在光谱的另一端是最大限度的开发速度和更少的代码编写，但您对设计没有控制权。daisyUI 和 Tailwind CSS 结合在一起，为您提供了两全其美的最佳选择。","Use daisyUI class names to write less code and develop faster, and use Tailwind CSS utility classes to customize the design when you need to.":"使用 daisyUI 的类名来减少代码编写、加快开发速度，并在需要时使用 Tailwind CSS 的工具类来定制设计。","Is it full circle?":"这算是回到了原点吗？","If you've been using Bootstrap many years ago, you may think it doesn't make sense to go back to using components.":"如果您多年前曾使用过 Bootstrap，您可能会认为回到使用组件的方式没有意义。","But here's the catch: The problem with Bootstrap was not class names! Bootstrap class names were actually really fast to work with. The problem was lack of customization and flexibility. At some point every Bootstrap website looked the same unless you open a CSS file and write tons of custom CSS.":"但关键在于：Bootstrap 的问题不在于类名！Bootstrap 的类名实际上工作效率非常高。问题在于缺乏定制性和灵活性。在某个阶段，每个 Bootstrap 网站看起来都一样，除非您打开一个 CSS 文件并编写大量的自定义 CSS。","Tailwind CSS solves this problem of customization and flexibility but the cost is slower development and more code to write! You wanted customization and flexibility? Good luck making design decisions for every single pixel in your page! Not a practical approach, right?":"Tailwind CSS 解决了定制性和灵活性的问题，但代价是开发速度变慢和需要编写更多代码！您想要定制性和灵活性？祝您好运，为页面上的每一个像素做出设计决策！这不太现实，对吧？","Yes, daisyUI can be used standalone without Tailwind CSS. However, it's recommended to use daisyUI with Tailwind CSS. Here's why:":"是的，daisyUI 可以在没有 Tailwind CSS 的情况下独立使用。但是，推荐将 daisyUI 与 Tailwind CSS 一起使用。原因如下：","daisyUI provides pieces of UI you can use to make a website. Like Button, Toggle, Card, etc. You need something to glue these pieces together! For example you need flex box, grid, padding, margin, etc. Tailwind CSS provides these low-level utility classes that you can use to glue the UI pieces together. So daisyUI and Tailwind CSS are a perfect match. You can use daisyUI to design the UI parts and Tailwind CSS for layout, spacing, font-size and other low-level CSS rules.":"daisyUI 提供了可以用来构建网站的 UI 组件，如按钮、开关、卡片等。您需要一些东西来将这些组件“粘合”在一起！例如，您需要弹性盒子、网格、内边距、外边距等。Tailwind CSS 提供了这些低级别的工具类，您可以用它们来粘合 UI 组件。所以 daisyUI 和 Tailwind CSS 是天作之合。您可以使用 daisyUI 来设计 UI 组件，使用 Tailwind CSS 来处理布局、间距、字体大小和其他低级别的 CSS 规则。",'In above example, we have 4 themes: `nord`, `abyss`, `cupcake`, and `dracula`. nord is the default theme, abyss is the default theme for dark mode, and cupcake and dracula are available to use with `data-theme="cupcake"` and `data-theme="dracula"`.':'在上面的示例中，我们有 4 个主题：`nord`、`abyss`、`cupcake` 和 `dracula`。`nord` 是默认主题，`abyss` 是深色模式下的默认主题，而 `cupcake` 和 `dracula` 可以通过 `data-theme="cupcake"` 和 `data-theme="dracula"` 来使用。','In above example, we disable all themes. it\'s useful to disable all themes and add custom themes using [`@plugin "daisyui/theme"`](/docs/themes/#how-to-add-a-new-custom-theme)':'在上面的示例中，我们禁用了所有主题。这在您想禁用所有主题并使用 [`@plugin "daisyui/theme"`](/docs/themes/#how-to-add-a-new-custom-theme) 添加自定义主题时非常有用。','In above example, we set dracula as the default theme. setting one value like this means only one theme will be available. Unless you add custom themes using [`@plugin "daisyui/theme"`](/docs/themes/#how-to-add-a-new-custom-theme)':'在上面的示例中，我们将 `dracula` 设置为默认主题。像这样设置一个值意味着只有一个主题可用，除非您使用 [`@plugin "daisyui/theme"`](/docs/themes/#how-to-add-a-new-custom-theme) 添加自定义主题。',"In above example, we set the CSS variables on `#my-app` instead of `:root`. This way all daisyUI global CSS variables will be scoped to `#my-app`.":"在上面的示例中，我们在 `#my-app` 上设置 CSS 变量，而不是 `:root`。这样，所有 daisyUI 的全局 CSS 变量都将作用于 `#my-app` 范围内。","This is useful to use daisyUI in a scoped environment like a web component or a shadow DOM or a specific part of the page.":"这在像 Web 组件、Shadow DOM 或页面的特定部分这样的作用域环境中使用 daisyUI 时非常有用。","In above example, we only include the button, input, and select components. All other styles of daisyUI library will be excluded.":"在上面的示例中，我们只包含了按钮、输入框和选择器组件。daisyUI 库的所有其他样式都将被排除。","[Here are the file names you can include or exclude](https://github.com/saadeghi/daisyui/tree/master/packages/daisyui/src).":"[这里是您可以包含或排除的文件名](https://github.com/saadeghi/daisyui/tree/master/packages/daisyui/src)。","In above example, we exclude the `rootscrollgutter` style which is added to the `:root` when a modal or drawer is open.":"在上面的示例中，我们排除了在对话框或抽屉打开时添加到 `:root` 的 `rootscrollgutter` 样式。","In above example, we exclude the the listed files. All other parts of daisyUI will be available to use. This is useful if you want to opt out of some parts of daisyUI or if you want to mix daisyUI for some parts and another library for the rest.":"在上面的示例中，我们排除了列出的文件。daisyUI 的所有其他部分将仍然可用。如果您想禁用 daisyUI 的某些部分，或者想将 daisyUI 与其他库混合使用，这会很有用。","In above example, all daisyUI classes will be prefixed with `d-`. For example, `btn` will be `d-btn`.":"在上面的示例中，所有 daisyUI 的类都将以 `d-` 为前缀。例如，`btn` 将变为 `d-btn`。","Try using `@source` [Explicitly register sources](https://tailwindcss.com/docs/detecting-classes-in-source-files#explicitly-registering-sources)":"尝试使用 `@source` [显式注册源文件](https://tailwindcss.com/docs/detecting-classes-in-source-files#explicitly-registering-sources)","Using Tailwind CSS and daisyUI, it is expected for CSS files to be very small. Ideally only the class names you used must be in the CSS file. Sometimes (specially in monorepos) it is possible that [Tailwind CSS automatic class name detection](https://tailwindcss.com/docs/detecting-classes-in-source-files) finds some unwanted strings in your project and generate styles for them. To avoid this, you can [disable automatic detection](https://tailwindcss.com/docs/detecting-classes-in-source-files#disabling-automatic-detection) and register your source files using `@source` directive.":"使用 Tailwind CSS 和 daisyUI 时，CSS 文件应该非常小。理想情况下，只有您使用过的类名才会出现在 CSS 文件中。有时（尤其是在 monorepo 中），[Tailwind CSS 的自动类名检测](https://tailwindcss.com/docs/detecting-classes-in-source-files)可能会在您的项目中找到一些不需要的字符串并为它们生成样式。为避免这种情况，您可以[禁用自动检测](https://tailwindcss.com/docs/detecting-classes-in-source-files#disabling-automatic-detection)并使用 `@source` 指令注册您的源文件。","Probably you're using `@tailwindcss/forms` (or another style or plugin) that is affecting form elements.":"很可能您正在使用 `@tailwindcss/forms`（或其他样式或插件），它影响了表单元素。","daisyUI applies styles to class names but `@tailwindcss/forms` by default, applies styles to all form elements.":"daisyUI 将样式应用于类名，但 `@tailwindcss/forms` 默认情况下会将样式应用于所有表单元素。","If you really need `@tailwindcss/forms` alongside with daisyUI (which I doubt, because both are doing the same job) consider using its [`strategy: 'class'` config](https://github.com/tailwindlabs/tailwindcss-forms#using-only-global-styles-or-only-classes) so it only applies style to the elements with specific class name (not all form elements)":"如果您确实需要在 daisyUI 的同时使用 `@tailwindcss/forms`（我对此表示怀疑，因为它们做的是同样的工作），请考虑使用其 [`strategy: 'class'` 配置](https://github.com/tailwindlabs/tailwindcss-forms#using-only-global-styles-or-only-classes)，这样它就只会将样式应用于带有特定类名的元素（而不是所有表单元素）。","[Add the themes you want](https://daisyui.com/docs/themes/#enable-a-built-in-theme)":"[添加您想要的主题](https://daisyui.com/docs/themes/#enable-a-built-in-theme)","If you're using a custom theme make sure you're using [all the required CSS variables](https://daisyui.com/docs/themes/#how-to-add-a-new-custom-theme)":"如果您正在使用自定义主题，请确保您使用了[所有必需的 CSS 变量](https://daisyui.com/docs/themes/#how-to-add-a-new-custom-theme)","With daisyUI, you don't need to manually set colors using [`dark:` variant](https://daisyui.com/docs/colors/)":"使用 daisyUI，您不需要使用 [`dark:` 变体](https://daisyui.com/docs/colors/)来手动设置颜色","As long as you use [daisyUI colors](https://daisyui.com/docs/colors/) they will work on all themes, light or dark.":"只要您使用 [daisyUI 颜色](https://daisyui.com/docs/colors/)，它们将在所有主题（浅色或深色）中生效。","If you really want to use Tailwind's `dark:` variant, [here's how to do it](https://daisyui.com/docs/themes/#how-to-apply-tailwinds-dark-selector-for-specific-themes).":"如果您确实想使用 Tailwind 的 `dark:` 变体，[这里是如何操作](https://daisyui.com/docs/themes/#how-to-apply-tailwinds-dark-selector-for-specific-themes)。","All daisyUI colors can be used as utility classes. Just like any other Tailwind CSS color.":"所有 daisyUI 的颜色都可以作为工具类使用，就像任何其他 Tailwind CSS 颜色一样。","For example you can use `primary` color with any of Tailwind CSS color utilities.":"例如，您可以将 `primary` 颜色与任何 Tailwind CSS 的颜色工具类一起使用。","Read more about [color names](/docs/colors).":"阅读更多关于[颜色名称](/docs/colors)的信息。","You can use `bg-primary` to set the background color to the primary color and `text-primary-content` to set the text color to the primary color.":"您可以使用 `bg-primary` 将背景颜色设置为 primary 颜色，并使用 `text-primary-content` 将文本颜色设置为 primary-content 颜色。","Tailwind CSS provides fixed values for border radius, such as `rounded-sm`, `rounded-lg`, `rounded-xl`, etc.":"Tailwind CSS 提供了固定的边框半径值，例如 `rounded-sm`、`rounded-lg`、`rounded-xl` 等。","daisyUI provides a few more border radius values which are tokenized for components and can be customized based on the theme.":"daisyUI 提供了更多边框半径值，这些值已为组件进行了标记化，并可以根据主题进行自定义。","`glass` creates a glass effect on the element.":"`glass` 在元素上创建玻璃拟物效果。","These CSS variables can be customized for each themes. Read more about [color names](/docs/colors).":"这些 CSS 变量可以为每个主题进行自定义。阅读更多关于[颜色名称](/docs/colors)的信息。","If you are using a prefix for daisyUI, these CSS variables will be prefixed with that prefix as well. For example if prefix is `daisy-`, The  `--alert-color` CSS variable will be `--daisy-alert-color`.":"如果您为 daisyUI 使用了前缀，这些 CSS 变量也会加上该前缀。例如，如果前缀是 `daisy-`，那么 `--alert-color` CSS 变量将变为 `--daisy-alert-color`。","Every part of daisyUI is [available on CDN](https://cdn.jsdelivr.net/npm/daisyui@5/) as separate CSS files.":"daisyUI 的每个部分都作为单独的 CSS 文件[在 CDN 上可用](https://cdn.jsdelivr.net/npm/daisyui@5/)。","These components automatically set the correct background color, text color, border color, etc as needed so you don't need to set those colors manually. For example `btn-primary` sets `primary` color for background and border, and sets `primary-content` color for the text automatically as default. You can customize them using utility classes if you want to change the color.":"这些组件会根据需要自动设置正确的背景颜色、文本颜色、边框颜色等，因此您无需手动设置这些颜色。例如，`btn-primary` 默认会自动将背景和边框颜色设置为 `primary`，文本颜色设置为 `primary-content`。如果您想更改颜色，可以使用工具类进行自定义。","So you can use `bg-primary`, `border-secondary`, etc. Read more about [daisyUI color utility classes](/docs/utilities).":"所以您可以使用 `bg-primary`、`border-secondary` 等。阅读更多关于[daisyUI 颜色工具类](/docs/utilities)的信息。","Sometimes we need a muted text. something with less contrast. The best way to do this is using Tailwind CSS color opacity modifier by adding a `/50` (or any other value) to the end of color name. Like `text-base-content/50`":"有时我们需要柔和的文本，即对比度较低的文本。最好的方法是使用 Tailwind CSS 的颜色不透明度修饰符，在颜色名称末尾添加 `/50`（或任何其他值），例如 `text-base-content/50`。","The advantage of using opacity is that it gives a constant result on all themes, for all colors.":"使用不透明度的优点是，它在所有主题、所有颜色上都能得到一致的结果。","You can use it with any opacity value, you can use it for any color. For example primary-content:":"您可以将它与任何不透明度值一起使用，也可以用于任何颜色。例如 `primary-content`：","You can also create your own custom themes or customize built-in themes.":"您也可以创建自己的自定义主题或自定义内置主题。",'You can manage themes by adding brackets in front of `@plugin "daisyui"` in your CSS file.':'您可以通过在 CSS 文件中的 `@plugin "daisyui"` 前添加括号来管理主题。',"`themes` is a comma-separated list of theme names you want to enable.":"`themes` 是您要启用的主题名称的逗号分隔列表。","You can set `--default` flag for a theme to make it the default theme.":"您可以为一个主题设置 `--default` 标志，使其成为默认主题。","You can also set `--prefersdark` flag for a theme to make it the default theme for dark mode (prefers-color-scheme: dark).":"您也可以为一个主题设置 `--prefersdark` 标志，使其成为深色模式（prefers-color-scheme: dark）下的默认主题。","By default, `light` and `dark` themes are enabled. Let's enable `cupcake` theme:":"默认情况下，`light` 和 `dark` 主题是启用的。让我们启用 `cupcake` 主题：","And set `cupcake` theme for the page:":"然后为页面设置 `cupcake` 主题：","To disable `dark` theme for example, remove it from the list. Now only light theme is included:":"例如，要禁用 `dark` 主题，请将其从列表中移除。现在只包含了 `light` 主题：","If for some reason you want to disable all themes and remove all daisyUI colors, set `themes` to `false`:":"如果出于某种原因您想禁用所有主题并移除所有 daisyUI 颜色，请将 `themes` 设置为 `false`：","To customize a built-in theme, you can use the same structure as adding a new theme, but with the same name as the built-in theme. For example, to customize the `light` theme:":"要自定义一个内置主题，您可以使用与添加新主题相同的结构，但使用与内置主题相同的名称。例如，要自定义 `light` 主题：","If you want to opt out of each part, you can do it by setting the [`exclude` config](/docs/config/#exclude).":"如果您想禁用每个部分，可以通过设置 [`exclude` 配置](/docs/config/#exclude)来实现。","For example, to opt out of the scrollbar-gutter and style, scrollbar-color, you can exclude it like this:":"例如，要禁用 `scrollbar-gutter` 和 `scrollbar-color` 样式，您可以像这样排除它：","Or if you're using CDN, you can disable it from your [customized CDN file](/docs/cdn/) if you need to.":"或者，如果您正在使用 CDN，您可以根据需要在您的[自定义 CDN 文件](/docs/cdn/)中禁用它。","[properties](https://github.com/saadeghi/daisyui/blob/master/packages/daisyui/src/base/properties.css)":"[properties](https://github.com/saadeghi/daisyui/blob/master/packages/daisyui/src/base/properties.css)","[rootcolor](https://github.com/saadeghi/daisyui/blob/master/packages/daisyui/src/base/rootcolor.css)":"[rootcolor](https://github.com/saadeghi/daisyui/blob/master/packages/daisyui/src/base/rootcolor.css)","[scrollbar](https://github.com/saadeghi/daisyui/blob/master/packages/daisyui/src/base/scrollbar.css)":"[scrollbar](https://github.com/saadeghi/daisyui/blob/master/packages/daisyui/src/base/scrollbar.css)","[rootscrolllock](https://github.com/saadeghi/daisyui/blob/master/packages/daisyui/src/base/rootscrolllock.css)":"[rootscrolllock](https://github.com/saadeghi/daisyui/blob/master/packages/daisyui/src/base/rootscrolllock.css)","[rootscrollgutter](https://github.com/saadeghi/daisyui/blob/master/packages/daisyui/src/base/rootscrollgutter.css)":"[rootscrollgutter](https://github.com/saadeghi/daisyui/blob/master/packages/daisyui/src/base/rootscrollgutter.css)","[svg](https://github.com/saadeghi/daisyui/blob/master/packages/daisyui/src/base/svg.css)":"[svg](https://github.com/saadeghi/daisyui/blob/master/packages/daisyui/src/base/svg.css)","[daisyui.com/llms.txt](https://daisyui.com/llms.txt) file is a compact, text version of daisyUI docs to help AI generate accurate daisyUI code based on your prompt.":"[daisyui.com/llms.txt](https://daisyui.com/llms.txt) 文件是 daisyUI 文档的紧凑文本版本，旨在帮助 AI 根据您的提示生成准确的 daisyUI 代码。","Here's how to use daisyUI llms.txt in your code editor:":"以下是如何在您的代码编辑器中使用 daisyUI llms.txt：","Copilot can generate daisyUI code for you.":"Copilot 可以为您生成 daisyUI 代码。","Add daisyUI's llms.txt file to your repo so that Copilot can use it by default.":"将 daisyUI 的 llms.txt 文件添加到您的仓库中，以便 Copilot 默认使用它。","Run this command to save the llms.txt file to `.vscode/daisyui.md`":"运行此命令将 llms.txt 文件保存到 `.vscode/daisyui.md`","In `.vscode/settings.json` Add this:":"在 `.vscode/settings.json` 中添加：","Type `Add new custom docs`":"输入 `Add new custom docs`","Now in chat window you can type `@daisyui` to provide daisyUI docs to Cursor.":"现在，在聊天窗口中，您可以输入 `@daisyui` 来向 Cursor 提供 daisyUI 文档。",One:"一",Two:"二",Three:"三",Xsmall:"特小",Small:"小",Medium:"中",Large:"大",Xlarge:"特大","[details and summary elements](#method-1-details-and-summary)":"[details 和 summary 元素](#method-1-details-and-summary)","[popover API and anchor positioning `new`](#method-2-popover-api-and-anchor-positioning)":"[Popover API 和锚点定位 `新增`](#method-2-popover-api-and-anchor-positioning)","[CSS focus](#method-3-css-focus)":"[CSS focus](#method-3-css-focus)","details and summary are native HTML elements that can be used to create dropdowns.":"`details` 和 `summary` 是可用于创建下拉菜单的原生 HTML 元素。","Dropdown using details and summary opens and closes the content when the summary is clicked. You can also open/close it using JS by adding/removing the `open` attribute":"使用 `details` 和 `summary` 的下拉菜单在点击 `summary` 时打开和关闭内容。您也可以通过 JS 添加/移除 `open` 属性来打开/关闭它。","Popover API is the new HTML standard for creating dropdowns. It opens the dropdown on a top layer, which means there's no need to z-index management and there's no overflow issue.":"Popover API 是用于创建下拉菜单的新的 HTML 标准。它在顶层打开下拉菜单，这意味着无需管理 z-index，也没有溢出问题。","Anchor positioning is a new CSS standard for positioning elements relative to an anchor.":"锚点定位是用于相对于锚点定位元素的新的 CSS 标准。","`popovertarget` is the unique ID of the popover content.":"`popovertarget` 是 popover 内容的唯一 ID。","`anchor-name`/`position-anchor` is the unique name of the anchor.":"`anchor-name`/`position-anchor` 是锚点的唯一名称。","CSS Anchor Positioning is a new standard but isn't yet supported in Firefox and Safari ([caniuse.com](https://caniuse.com/css-anchor-positioning)).":"CSS 锚点定位是一个新标准，但尚未在 Firefox 和 Safari 中得到支持 ([caniuse.com](https://caniuse.com/css-anchor-positioning))。","In those browsers, the dropdown will appear centered like a modal.":"在这些浏览器中，下拉菜单将像对话框一样居中显示。","There's also [this polyfill](https://github.com/oddbird/css-anchor-positioning) that can be helpful.":"还有一个[ polyfill ](https://github.com/oddbird/css-anchor-positioning)可能会有帮助。",'popover id="popover-1" style="position-anchor:--anchor-1">':'popover id="popover-1" style="position-anchor:--anchor-1">',"Why div?":"为什么用 div？",'Safari has a [CSS bug](https://bugs.webkit.org/show_bug.cgi?id=22261) since 2008 that prevents button elements from being focused, so we use div `tabindex="0"` as a workaround.':'自 2008 年以来，Safari 存在一个 [CSS 错误](https://bugs.webkit.org/show_bug.cgi?id=22261)，导致 `button` 元素无法获得焦点，因此我们使用 `div tabindex="0"` 作为变通方案。','This approach is accessible with the addition of `role="button"` and functions consistently across all browsers.':'通过添加 `role="button"`，这种方法具有可访问性，并且在所有浏览器中都能一致地工作。',"A normal text and a helper dropdown":"普通文本和辅助下拉菜单","Drawer is a grid layout that can show/hide a sidebar on the left or right side of the page, based on the screen size or based on the value of a `drawer-toggle` checkbox.":"抽屉是一种网格布局，可以根据屏幕尺寸或 `drawer-toggle` 复选框的值，在页面的左侧或右侧显示/隐藏侧边栏。","Drawer must be the parent element of the content and sidebar.":"抽屉必须是内容和侧边栏的父元素。","Drawer sidebar is hidden by default.":"抽屉侧边栏默认是隐藏的。","You can make it visible on larger screens using `lg:drawer-open` class (or using other responsive prefixes: sm, md, lg, xl)":"您可以使用 `lg:drawer-open` 类（或其他响应式前缀：sm、md、lg、xl）使其在较大屏幕上可见。","You can check/uncheck the checkbox using JavaScript or by clicking the `label` tag which is assigned to the hidden checkbox":"您可以通过 JavaScript 或点击分配给隐藏复选框的 `label` 标签来选中/取消选中该复选框。","Opening a drawer adds a [scrollbar-gutter](https://developer.mozilla.org/en-US/docs/Web/CSS/scrollbar-gutter) to the page to avoid layout shift on operating systems that have a fixed scrollbar.":"打开抽屉会向页面添加一个 [scrollbar-gutter](https://developer.mozilla.org/en-US/docs/Web/CSS/scrollbar-gutter)，以避免在具有固定滚动条的操作系统上出现布局偏移。","If you don't want to use this feature, [you can exclude `rootscrollgutter`](/docs/config/#exclude).":"如果您不想使用此功能，可以[排除 `rootscrollgutter`](/docs/config/#exclude)。","For pagination, we use [join component](/components/join) to show multiple links or buttons next to each other.":"对于分页，我们使用[组合组件](/components/join)来并排显示多个链接或按钮。","Page 22":"第 22 页","Previous page":"上一页","Items in each rating should have unique `name` attributes to avoid conflicts with other ratings on the same page.":"每个评分组件中的项目应具有唯一的 `name` 属性，以避免与同一页面上的其他评分组件发生冲突。","daisyUI includes styles for 3 popular calendar libraries.":"daisyUI 包含了对 3 个流行日历库的样式支持。","Use any of them, based on your needs.":"根据您的需求，使用其中任何一个。","You don't need to import the CSS files for these libraries. daisyUI will style them automatically.":"您无需导入这些库的 CSS 文件。daisyUI 会自动为它们设置样式。","[Cally web component](https://github.com/WickyNilliams/cally) - Works everywhere":"[Cally Web 组件](https://github.com/WickyNilliams/cally) - 随处可用","[Pikaday](https://github.com/Pikaday/Pikaday) - Works everywhere":"[Pikaday](https://github.com/Pikaday/Pikaday) - 随处可用","[React Day picker](https://github.com/gpbl/react-day-picker) - React only":"[React Day Picker](https://github.com/gpbl/react-day-picker) - 仅限 React","Cally is a web component calendar and it works everywhere. [Read the docs](https://github.com/WickyNilliams/cally)":"Cally 是一个 Web 组件日历，随处可用。[阅读文档](https://github.com/WickyNilliams/cally)","Pick a date":"选择一个日期","Pikaday is a JS datepicker library and you can use it from CDN or as a JS dependency [Read the docs](https://github.com/Pikaday/Pikaday)":"Pikaday 是一个 JS 日期选择器库，您可以通过 CDN 或作为 JS 依赖项使用它。[阅读文档](https://github.com/Pikaday/Pikaday)","React Day Picker is a flexible date picker component for React. [Read the docs](https://github.com/gpbl/react-day-picker)":"React Day Picker 是一个灵活的 React 日期选择器组件。[阅读文档](https://github.com/gpbl/react-day-picker)","Each set of radio inputs should have unique `name` attributes to avoid conflicts with other sets of radio inputs on the same page.":"每组单选框输入应具有唯一的 `name` 属性，以避免与同一页面上的其他单选框组发生冲突。","`validator-hint` class will be invisible if it comes after a `validator` class, then if the input is invalid, `validator-hint` will get visible.":"如果 `validator-hint` 类跟在 `validator` 类后面，它将不可见；当输入无效时，`validator-hint` 将变得可见。","`validator-hint` still occupies space even if it's invisible because we don't want a layout shift when the hint appears.":"即使 `validator-hint` 不可见，它仍然占据空间，因为我们不希望在提示出现时发生布局偏移。","If you prefer to hide the hint when it's not visible, add `hidden` class to `validator-hint`. It will take no space when it's hidden, and if input is invalid, it will appear and take space.":"如果您希望在提示不可见时隐藏它，请向 `validator-hint` 添加 `hidden` 类。这样在隐藏时它将不占用空间，而当输入无效时，它将出现并占用空间。","Submit form":"提交表单",New:"新",inbox:"收件箱",Requests:"请求",Online:"在线",Required:"必填","Only available for Pro users":"仅限 Pro 用户可用",Subscribe:"订阅","you need to change the span text and the `--value` CSS variable using JS. Value must be a number between 0 and 99.":"您需要使用 JS 更改 span 文本和 `--value` CSS 变量。值必须是 0 到 99 之间的数字。","`input` class can be used for any input field type. Including `text`, `password`, `email`, `number`, `date`, `datetime-local`, `week`, `month`, `tel`, `url`, `search`, `time`":"`input` 类可用于任何输入字段类型，包括 `text`、`password`、`email`、`number`、`date`、`datetime-local`、`week`、`month`、`tel`、`url`、`search`、`time`","For `checkbox`, `radio`, `file`, `range` use their own class names, as they are not visually input fields.":"对于 `checkbox`、`radio`、`file`、`range`，请使用它们各自的类名，因为它们在视觉上不是输入字段。","Inputs can be used with `validator` class to have validation styles. [See Validator component](/components/validator/) for more details.":"输入框可以与 `validator` 类一起使用以获得验证样式。有关更多详细信息，请参见[验证器组件](/components/validator/)。","12 unread messages. Tap to see.":"12 条未读消息。点击查看。","New software update available.":"有新的软件更新可用。","Your purchase has been confirmed!":"您的购买已确认！","Warning: Invalid email address!":"警告：无效的电子邮件地址！","Error! Task failed successfully.":"错误！任务成功失败了。","we use cookies for no reason.":"我们无缘无故地使用 cookie。",See:"查看","Accordion uses the same style as the [collapse component](/components/collapse/) but it works with radio inputs. You can control which item to be open by checking/unchecking the hidden radio input.":"手风琴使用与[折叠组件](/components/collapse/)相同的样式，但它与单选框输入配合使用。您可以通过选中/取消选中隐藏的单选框来控制哪个项目是打开的。","Publish date":"发布日期","Your Email":"您的电子邮件","Also see [accordion](/components/accordion/) examples":"另请参见[手风琴](/components/accordion/)示例","Tab 1":"选项卡 1","Tab 2":"选项卡 2","Tab 3":"选项卡 3","Max size 2MB":"最大尺寸 2MB",Neutral:"中性色",Primary:"主色",Secondary:"次要色",Accent:"强调色",Info:"信息色",Success:"成功色",Error:"错误色",Ghost:xe,"Disabled using attribute":"使用属性禁用","Disabled using class name":"使用类名禁用",Like:"喜欢",loading:"加载中","Login with MetaMask":"使用 MetaMask 登录",'Add "link" class to make it look like a':"添加 `link` 类使其看起来像一个","Radial progress needs `--value` CSS variable to work.":"环形进度条需要 `--value` CSS 变量才能工作。","To change the size, use `--size` CSS variable which has a default value of `5rem`.":"要更改大小，请使用 `--size` CSS 变量，其默认值为 `5rem`。","To change the thickness, use `--thickness` CSS variable which is 10% of the size by default.":"要更改厚度，请使用 `--thickness` CSS 变量，其默认值为大小的 10%。","For Radial progress we need to use a `div` instead of the `progress` tag because browsers can't show text inside `progress` tag, and Firefox doesn’t render pseudo-elements inside `progress` tag at all.":"对于环形进度条，我们需要使用 `div` 而不是 `progress` 标签，因为浏览器无法在 `progress` 标签内显示文本，而且 Firefox 根本不会在 `progress` 标签内渲染伪元素。",'Adding `role="progressbar"` makes it accessible to screen readers as well.':'添加 `role="progressbar"` 也使其对屏幕阅读器可访问。',"By default, the second child of the `list-row` will fill the remaining space. You can use `list-col-grow` on another child to make it fill the remaining space instead.":"默认情况下，`list-row` 的第二个子元素将填充剩余空间。您可以在另一个子元素上使用 `list-col-grow` 来使其填充剩余空间。",Title:"标题",Slug:"别名",Author:"作者",Email:Pe,Password:"密码",Login:"登录","Theme Controller changes the theme using CSS only.":"主题控制器仅使用 CSS 更改主题。","You can then use JS to save the input state in the server or localStorage if you want it to persist on page refresh.":"然后，您可以使用 JS 将输入状态保存在服务器或 localStorage 中，以便在页面刷新时保持状态。","Here's a React example to save checkbox state in local storage: [Stackblitz](https://stackblitz.com/edit/react-checkbox-localstorage?file=src%2FApp.js)":"这是一个在本地存储中保存复选框状态的 React 示例：[Stackblitz](https://stackblitz.com/edit/react-checkbox-localstorage?file=src%2FApp.js)",Synthwave:"合成波",Optional:"可选","You can use `w-*` and `h-*` classes to set the width and height of the stack, making all items the same size.":"您可以使用 `w-*` 和 `h-*` 类来设置堆叠的宽度和高度，使所有项目大小相同。","It needs JS to open but it has better accessibility and we can close it using `Esc` key":"它需要 JS 才能打开，但具有更好的可访问性，并且我们可以使用 `Esc` 键关闭它","[Using checkbox](#method-2-checkbox)":"[使用复选框](#method-2-checkbox)","A link adds a parameter to the URL and you only see the modal when the URL has that parameter":"链接会向 URL 添加一个参数，只有当 URL 具有该参数时，您才能看到对话框","Opening a modal adds a [scrollbar-gutter](https://developer.mozilla.org/en-US/docs/Web/CSS/scrollbar-gutter) to the page to avoid layout shift on operating systems that have a fixed scrollbar.":"打开对话框会向页面添加一个 [scrollbar-gutter](https://developer.mozilla.org/en-US/docs/Web/CSS/scrollbar-gutter)，以避免在具有固定滚动条的操作系统上出现布局偏移。","HTML dialog element is a native way to create modals. It is accessible and we can close the modal using `Esc` key.":"HTML `dialog` 元素是创建对话框的原生方式。它具有可访问性，并且我们可以使用 `Esc` 键关闭对话框。","We can open the modal using JS `ID.showModal()` method and close it using `ID.close()` method.":"我们可以使用 JS 的 `ID.showModal()` 方法打开对话框，并使用 `ID.close()` 方法关闭它。","The ID must be unique for each modal.":"每个对话框的 ID 必须是唯一的。","When modal is closed, the page will scroll to the top because of the anchor link.":"当对话框关闭时，由于锚链接，页面将滚动到顶部。","Anchor links might not work well on some SPA frameworks. If there are problems, use the other methods":"锚链接可能在某些 SPA 框架中效果不佳。如果出现问题，请使用其他方法。","The `hr` tag at the beginning or end of each item, displays a line to connect items.":"位于每个项目开头或结尾的 `hr` 标签会显示一条线来连接项目。",Inbox:"收件箱","In chat window type this and write your prompt":"在聊天窗口中输入此内容并写下您的提示","don't re-invent <br/>the wheel <br/>every time":"无需每次<br/>都重复<br/>造轮子","Hover Gallery":"Hover Gallery 悬停画廊","Hover Gallery is container of images.":"悬停画廊（Hover Gallery）是一个图片容器。","The first image is visible be default and when we hover it horizontally, other images show up.":"首张图片默认可见，当水平悬停时，其他图片会依次显现。","Hover Gallery is useful for product cards in ecommerce sites, portfoilios or in image galleries.":"悬停画廊适用于电商网站上的商品展示卡、作品集或图片库场景。","Hover Gallery can include up to 10 images.":"悬停画廊最多可以包含10张图片。","The first image is visible by default, the other image will create invisible columns and hovering each column, reveals that image.":"首张图片默认可见，其余图片将生成不可见的列，悬停每列即可显示对应图片。","For example, here we have 4 images.":"例如，当前包含4张图片。","Try hovering on each column to see 2nd, 3rd and 4th image.":"尝试悬停在每列上，查看第2、第3、第4张图片。","Move your mouse on the image horizontally":"在图片上水平移动鼠标。","Hover Gallery in a card":"卡片内的悬停画廊"};export{At as Accent,O as Accordion,xo as Actions,Qo as Active,s as Alert,wo as Apply_your_own_design_decisions_part_1,qe as Apply_your_own_design_decisions_part_2,Ke as Apply_your_own_design_decisions_part_3,Io as Apply_your_own_design_decisions_part_4,Co as Apply_your_own_design_decisions_part_5,ae as Artboard,zt as Author,$o as Available,y as Avatar,B as Badge,zo as Benefits,Vo as Blockquotes,Ze as Blog,qo as Bold,q as Breadcrumbs,p as Browser,t as Button,g as Card,K as Carousel,n as Checkbox,fo as Click,e as Code,J as Collapse,eo as Colors,Re as Component,ze as Components,Oo as Conclusion,H as Config,Z as Countdown,Te as Cursor,lo as Customizable,co as Dashboard,lt as Default,Wo as Description,W as Diff,C as Divider,Ne as Docs,l as Drawer,N as Dropdown,Pe as Email,Ko as Feature,io as Features,Mo as Feedback,k as Footer,rt as Functionality,xe as Ghost,L as Glass,v as Hero,Jo as Images,Bt as Inbox,G as Indicator,_t as Info,Yo as Input,De as Install,Uo as Introduction,Go as Italic,o as Join,at as K,X as Kbd,bt as Large,vo as Layout,jt as Like,u as Link,no as Links,Eo as List,j as Loading,Nt as Login,Se as Markdown,d as Mask,gt as Medium,h as Menu,ro as Message,ho as Messages,U as Mockup,R as Modal,Ro as Modifier,it as Modifiers,ot as Name,m as Navbar,Ee as Navigation,Ut as Neutral,St as New,to as Next,Ge as No_more_ugly_HTML_part_1,go as No_more_ugly_HTML_part_2,M as No_more_ugly_HTML_part_3,bo as No_more_ugly_HTML_part_4,uo as Notifications,ut as One,Ct as Online,Ft as Optional,Le as Or,$ as Pagination,Dt as Password,mo as People,Q as Phone,Xo as Popular,st as Positions,oo as Prev,so as Preview,xt as Primary,po as Products,b as Progress,S as Radio,se as Randomize,w as Range,F as Rating,It as Requests,kt as Required,Lo as Reset,No as Resources,jo as Responsive,yo as Result,So as Save,Oe as Search,Pt as Secondary,Tt as See,I as Select,V as Skeleton,Rt as Slug,yt as Small,Ao as Sponsors,ee as Stack,i as Stat,Qe as Stats,Zo as Status,E as Steps,Ye as Store,nt as Structure,vt as Subscribe,Mt as Success,a as Swap,Wt as Synthwave,T as Tab,Y as Table,ao as Tabs,oe as Textarea,_ as Themeable,Fe as Themes,mt as Three,te as Timeline,Ht as Title,c as Toast,r as Toggle,f as Tooltip,ht as Two,Je as Type,To as Typography,Po as Updates,$e as Use,Ve as Warning,dt as Wide,x as Window,ft as Xlarge,pt as Xsmall,tt as Zed,Ae as __code,_e as __direction,Me as __name,je as __status,he as accent,ct as block,Bo as boolean,z as changelog,He as components,ko as config,D as contributing,fe as daisyUI,Yt as default,be as error,re as exclude,Do as excluded,P as homepage_h1,A as homepage_h2,wt as inbox,ne as include,pe as info,Ho as license,Xe as links,Lt as loading,de as logs,me as neutral,Be as pages,le as prefix,ce as primary,we as properties,ie as root,Ie as rootcolor,ve as rootscrollgutter,ke as rootscrolllock,Ce as scrollbar,ue as secondary,Ue as soon,Fo as string,ye as success,et as svg,We as themes,_o as updated,ge as warning};
